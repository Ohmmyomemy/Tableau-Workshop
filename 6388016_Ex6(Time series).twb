<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20224.22.1117.1841                               -->
<workbook locale='en_GB' original-version='18.1' source-build='2022.4.0 (20224.22.1117.1841)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Orders (Sample - Superstore)' inline='true' name='federated.04gf3yt00fkvqi16u9nx01ualh5i' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='excel-direct.1l0z40000dzao61anuwyl0yeic19'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/ADMIN/Documents/ที่เก็บใน Tableau ของฉัน/แหล่งข้อมูล/2022.4/th_TH-APAC/Sample - Superstore.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1l0z40000dzao61anuwyl0yeic19' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U10195:no:A1:U10195:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State/Province' ordinal='10' />
            <column datatype='string' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1l0z40000dzao61anuwyl0yeic19' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U10195:no:A1:U10195:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State/Province' ordinal='10' />
            <column datatype='string' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U10195:no:A1:U10195:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State/Province</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State/Province]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State/Province</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_1C7DD954D1C5456A85D0355E25E1A513]' role='measure' type='quantitative' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[State/Province]' derivation='None' name='[none:State/Province:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country/Region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:State/Province:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Manitoba&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;British Columbia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prince Edward Island&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Quebec&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nova Scotia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alberta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Brunswick&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saskatchewan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Newfoundland and Labrador&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Amarillo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bozeman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Carrollton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dublin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Evanston&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hagerstown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Homestead&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Las Cruces&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Longview&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nashua&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pocatello&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Redondo Beach&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Round Rock&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Southaven&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;The Colony&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vancouver&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wheeling&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aberdeen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Delray Beach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Freeport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Green Bay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hesperia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lake Elsinore&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Linden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mansfield&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Middletown&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morristown&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ormond Beach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Quincy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rock Hill&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wausau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Yucaipa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolingbrook&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cambridge&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chula Vista&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Coral Springs&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Des Plaines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Encinitas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gaithersburg&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gresham&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hillsboro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jonesboro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lakewood&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lodi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Marietta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Minneapolis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Las Vegas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oxnard&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Plainfield&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Reading&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rome&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;San Clemente&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sioux Falls&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Temecula&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Urbandale&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;West Palm Beach&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Antioch&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Baytown&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Broken Arrow&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Coachella&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Danbury&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;East Orange&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Farmington&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Glenview&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Huntington Beach&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Knoxville&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lawton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Loveland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moncton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Brunswick&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Olathe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Port Orange&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Renton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Charles&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sandy Springs&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tigard&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Waco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Anaheim&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bangor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brentwood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clifton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cranston&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Everett&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gilbert&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Halifax&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hoover&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mcallen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Missouri City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oceanside&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Parma&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pomona&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Redwood City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Royal Oak&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sparks&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Thomasville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vineland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Whittier&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bossier City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Canton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Corpus Christi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Englewood&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Garden City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Grove City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Holland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jupiter&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Miramar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Murrieta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Miami&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Palatine&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Plano&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Redding&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Romeoville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Skokie&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tempe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Utica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Westfield&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Arvada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bethlehem&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bullhead City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chattanooga&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Edmonton&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Frankfort&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Great Falls&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Irving&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Laguna Niguel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lewiston&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mesquite&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Moreno Valley&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Niagara Falls&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Orland Park&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Perth Amboy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Santa Maria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sunnyvale&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Troy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Watertown&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Yonkers&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Abilene&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bloomington&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coon Rapids&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Deltona&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greensboro&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hialeah&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jamestown&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lake Forest&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lindenhurst&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Manteca&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mount Pleasant&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Normal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oswego&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rockford&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Angelo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tamarac&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Waynesboro&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bellevue&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Charlottesville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Edmond&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fort Lauderdale&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Grand Rapids&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Helena&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Inglewood&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;La Quinta&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lehi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Meridian&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Montreal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Newark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pensacola&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rio Rancho&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Peters&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Waterbury&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Woodstock&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Allentown&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Avondale&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bowling Green&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carlsbad&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Citrus Heights&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Costa Mesa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dover&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Escondido&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gulfport&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hollywood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Keller&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lansing&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marlborough&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mishawaka&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Norwich&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Palm Coast&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Plantation&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Redlands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Roseville&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Smyrna&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Texarkana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vacaville&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Westland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Apopka&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Beaumont&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Broomfield&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chandler&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;College Station&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Danville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;East Point&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fayetteville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Goldsboro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Harlingen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Huntsville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Layton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lowell&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Olympia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Paterson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Port Saint Lucie&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Revere&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Cloud&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sanford&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;St. John&apos;s&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tinley Park&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Warner Robins&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Winnipeg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Apple Valley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brownsville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chapel Hill&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Colorado Springs&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Grand Island&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Harrisonburg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;La Mesa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;League City&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mentor&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montebello&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New Rochelle&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Omaha&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pearland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Louis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sterling Heights&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Warwick&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Arlington Heights&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bellingham&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Buffalo Grove&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Charlottetown&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Commerce City&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dearborn Heights&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Edmonds&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fort Worth&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Grapevine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iowa City&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Leominster&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malden&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Moorhead&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Newport News&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Orem&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Provo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Petersburg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Summerville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Trenton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Waterloo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Woonsocket&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Asheville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Beverly&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Burbank&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chesapeake&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Conroe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Deer Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Cajon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greeley&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hendersonville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lake Charles&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lincoln Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Morgan Hill&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Noblesville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pharr&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Quebec City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rochester Hills&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Salinas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Scottsdale&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Superior&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Andover&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bartlett&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bridgeton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cedar Hill&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cuyahoga Falls&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gladstone&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Haltom City&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kirkwood&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Laurel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Medford&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Albany&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Odessa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pasadena&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pompano Beach&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Regina&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marcos&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Thornton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Virginia Beach&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Altoona&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bakersfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Boynton Beach&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carol Stream&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clarksville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cottage Grove&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Draper&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eugene&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gastonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hackensack&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Holyoke&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kenner&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Laredo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Longmont&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Marysville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mission Viejo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Naperville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oak Park&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Park Ridge&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pleasant Grove&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Redmond&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Roswell&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Gabriel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Bend&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Texas City&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vallejo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Westminster&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Atlantic City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Boca Raton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Calgary&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Coppell&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Elmhurst&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hickory&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jefferson City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lakeland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Little Rock&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maple Grove&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Milford&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mount Vernon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Overland Park&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pico Rivera&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rancho Cucamonga&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rockville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Shelton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;West Allis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Appleton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belleville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Daytona Beach&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Edinburg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fort Collins&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Grand Prairie&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hattiesburg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;La Porte&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Meriden&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pembroke Pines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Paul&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Stockton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Toronto&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Woodland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ann Arbor&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bayonne&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cedar Rapids&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Clovis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Eagan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fargo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Glendale&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kissimmee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Modesto&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Bedford&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oklahoma City&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Port Arthur&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Springdale&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Thousand Oaks&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Visalia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wilmington&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albuquerque&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Auburn&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Camarillo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Coral Gables&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Elyria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Frisco&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Highland Park&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Johnson City&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lakeville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Littleton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Margate&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Murfreesboro&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Charleston&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Owensboro&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pine Bluff&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rapid City&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sierra Vista&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;West Jordan&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Category:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Technology&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Office Supplies&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Thailand&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_1C7DD954D1C5456A85D0355E25E1A513'>
            <properties context=''>
              <relation connection='excel-direct.1l0z40000dzao61anuwyl0yeic19' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U10195:no:A1:U10195:0' header='yes' outcome='2'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country/Region' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State/Province' ordinal='10' />
                  <column datatype='string' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='ชีต 1'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{21E151D5-8007-4AD3-982D-E871B9E26FDB}' />
    </worksheet>
    <worksheet name='ชีต 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.04gf3yt00fkvqi16u9nx01ualh5i' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.04gf3yt00fkvqi16u9nx01ualh5i'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[State/Province]' derivation='None' name='[none:State/Province:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04gf3yt00fkvqi16u9nx01ualh5i].[none:Category:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Category:nk]' />
              <groupfilter function='member' level='[none:Category:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.04gf3yt00fkvqi16u9nx01ualh5i].[Longitude (generated)]' field-type='quantitative' max='-6331684.4325752556' min='-14435154.153088458' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.04gf3yt00fkvqi16u9nx01ualh5i].[Latitude (generated)]' field-type='quantitative' max='7585277.2297111526' min='3002215.7567017595' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.04gf3yt00fkvqi16u9nx01ualh5i].[none:Category:nk]' />
              <lod column='[federated.04gf3yt00fkvqi16u9nx01ualh5i].[none:Country/Region:nk]' />
              <lod column='[federated.04gf3yt00fkvqi16u9nx01ualh5i].[none:State/Province:nk]' />
              <size column='[federated.04gf3yt00fkvqi16u9nx01ualh5i].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='3.8342540264129639' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[Latitude (generated)]</rows>
        <cols>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{50958F8B-E1C7-44F0-97C7-27C2F8C29AE2}' />
    </worksheet>
    <worksheet name='ชีต 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.04gf3yt00fkvqi16u9nx01ualh5i' />
          </datasources>
          <datasource-dependencies datasource='federated.04gf3yt00fkvqi16u9nx01ualh5i'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.04gf3yt00fkvqi16u9nx01ualh5i].[yr:Order Date:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[sum:Sales:qk]</rows>
        <cols>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[mn:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{13C7CC7E-CA66-4062-8708-56DF65256E19}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='แดชบอร์ด 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones />
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='14' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='13' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{67C59EF8-31DC-42C9-BD78-11B778F8C78B}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='ชีต 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{10011400-4B2D-46F3-A3A4-1F8C9F76511D}' />
    </window>
    <window class='worksheet' name='ชีต 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.04gf3yt00fkvqi16u9nx01ualh5i].[none:Category:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.04gf3yt00fkvqi16u9nx01ualh5i].[sum:Sales:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[none:Category:nk]</field>
            <field>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[none:Country/Region:nk]</field>
            <field>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[none:Region:nk]</field>
            <field>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[none:Segment:nk]</field>
            <field>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[none:State/Province:nk]</field>
            <field>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[sum:Profit:qk]</field>
            <field>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[sum:Sales:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{DA6FC46C-B219-4525-98F9-1DDEC68F68A6}' />
    </window>
    <window class='worksheet' maximized='true' name='ชีต 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.04gf3yt00fkvqi16u9nx01ualh5i].[yr:Order Date:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[mn:Order Date:ok]</field>
            <field>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[none:Customer Name:nk]</field>
            <field>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[none:Order ID:nk]</field>
            <field>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[qr:Order Date:ok]</field>
            <field>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6F4512D6-A529-40C7-B1EC-5613293B9F9C}' />
    </window>
    <window class='dashboard' name='แดชบอร์ด 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{0ABC043D-CB54-4BE7-A054-5A9B73B936F1}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='ชีต 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='ชีต 2' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='ชีต 3' width='192'>
      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
      mWIyGEPSjSMD2WSUeEbF7XaTS8QYHA9hMao0tW3A7chn4cgLQsfht14DWxlGoSBJOfSOSgbP
      HKOqvpVsNoXZYkfKxTHavLQ01k1fMx4J4q6sJ+Yf5tTYCOlUHHeZl2gkgd6gA2TSsUmEzoLe
      6mJDRwuyBEouRW/XJEaPg2wqi8fjRqckOXLsJHXN7WTTCcxWByIdxWx30t3ZSWVDC26PF72k
      x2VQOPHB+4QTUGE3IsnQPx6hqcpNPJUp/T7A5NgIOZHDW1GFqsg01laRSkbxB4KY7W70QF1d
      PZGAH7Ptwu6uzmilva0Fu8NJTXUlRoMeSaejtqaW4OQY4VgMX0UlyCYaGxuZGJ/Aarz0BzaY
      LEhCUFtbDToTNrOBqupaDDoZvcFMc1P9vNnnorEEepFmMhhGSDI2lwePw4rRZGbhl7BMdbkb
      TE6EkqW83IeUjZNm4SCecMBPRoEp/xipjEJTSxMSBlqbGxbsm4qFiSQyRENTRBJpHK4yxif8
      2M1zP9vC0QQGUkTCUYbH/ORyOZKpNAH/GGlVxqxTcXl9XPylDXoD6XQap6ccn8tONqfi9VWi
      lwTVdQ24nU7q6uqpKHNjNBiRJIlEPEYilX8bWm12Job6kIxmJAl8Fz0UjEYjSBJ2p5eqci81
      tbWcT/5hsbuxWw3TFUJ1agr0VmoamnA7HNTV1eHzujEajUgSVNY24HLZqan0kUsnmIglcdmd
      1NdUgQSywUxzYx0eXwV1dfX8//GEicAB5X2wAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='แดชบอร์ด 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
