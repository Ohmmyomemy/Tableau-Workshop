<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20224.22.1117.1841                               -->
<workbook original-version='18.1' source-build='2022.4.0 (20224.22.1117.1841)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Orders (Sample - Superstore)' inline='true' name='federated.0a1xnhv0c4e6tg19z4n5t15lligb' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='excel-direct.0zli9zo0g22hgc18f3lfb070xscg'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/ADMIN/Documents/ที่เก็บใน Tableau ของฉัน/แหล่งข้อมูล/2022.4/th_TH-APAC/Sample - Superstore.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0zli9zo0g22hgc18f3lfb070xscg' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U10195:no:A1:U10195:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State/Province' ordinal='10' />
            <column datatype='string' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0zli9zo0g22hgc18f3lfb070xscg' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U10195:no:A1:U10195:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State/Province' ordinal='10' />
            <column datatype='string' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U10195:no:A1:U10195:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_669B11A284CE4C42BED1EDDBD53F2646]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_669B11A284CE4C42BED1EDDBD53F2646]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_669B11A284CE4C42BED1EDDBD53F2646]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_669B11A284CE4C42BED1EDDBD53F2646]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_669B11A284CE4C42BED1EDDBD53F2646]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_669B11A284CE4C42BED1EDDBD53F2646]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_669B11A284CE4C42BED1EDDBD53F2646]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_669B11A284CE4C42BED1EDDBD53F2646]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_669B11A284CE4C42BED1EDDBD53F2646]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_669B11A284CE4C42BED1EDDBD53F2646]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State/Province</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State/Province]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State/Province</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_669B11A284CE4C42BED1EDDBD53F2646]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_669B11A284CE4C42BED1EDDBD53F2646]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_669B11A284CE4C42BED1EDDBD53F2646]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_669B11A284CE4C42BED1EDDBD53F2646]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_669B11A284CE4C42BED1EDDBD53F2646]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_669B11A284CE4C42BED1EDDBD53F2646]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_669B11A284CE4C42BED1EDDBD53F2646]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_669B11A284CE4C42BED1EDDBD53F2646]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_669B11A284CE4C42BED1EDDBD53F2646]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_669B11A284CE4C42BED1EDDBD53F2646]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_669B11A284CE4C42BED1EDDBD53F2646]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_669B11A284CE4C42BED1EDDBD53F2646]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Thailand&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_669B11A284CE4C42BED1EDDBD53F2646'>
            <properties context=''>
              <relation connection='excel-direct.0zli9zo0g22hgc18f3lfb070xscg' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U10195:no:A1:U10195:0' header='yes' outcome='2'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country/Region' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State/Province' ordinal='10' />
                  <column datatype='string' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Orders (Sample - Superstore) (2)' inline='true' name='federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='excel-direct.1l0z40000dzao61anuwyl0yeic19'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/ADMIN/Documents/ที่เก็บใน Tableau ของฉัน/แหล่งข้อมูล/2022.4/th_TH-APAC/Sample - Superstore.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1l0z40000dzao61anuwyl0yeic19' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U10195:no:A1:U10195:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State/Province' ordinal='10' />
            <column datatype='string' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1l0z40000dzao61anuwyl0yeic19' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U10195:no:A1:U10195:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State/Province' ordinal='10' />
            <column datatype='string' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U10195:no:A1:U10195:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State/Province</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State/Province]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State/Province</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_1C7DD954D1C5456A85D0355E25E1A513]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Thailand&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_1C7DD954D1C5456A85D0355E25E1A513'>
            <properties context=''>
              <relation connection='excel-direct.1l0z40000dzao61anuwyl0yeic19' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U10195:no:A1:U10195:0' header='yes' outcome='2'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country/Region' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State/Province' ordinal='10' />
                  <column datatype='string' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Orders (Sample - Superstore) (3)' inline='true' name='federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 2)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='excel-direct.1l0z40000dzao61anuwyl0yeic19 (คัดลอก)'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/ADMIN/Documents/ที่เก็บใน Tableau ของฉัน/แหล่งข้อมูล/2022.4/th_TH-APAC/Sample - Superstore.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1l0z40000dzao61anuwyl0yeic19 (คัดลอก)' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U10195:no:A1:U10195:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State/Province' ordinal='10' />
            <column datatype='string' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1l0z40000dzao61anuwyl0yeic19 (คัดลอก)' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U10195:no:A1:U10195:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State/Province' ordinal='10' />
            <column datatype='string' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U10195:no:A1:U10195:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State/Province</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State/Province]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State/Province</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_1C7DD954D1C5456A85D0355E25E1A513]' role='measure' type='quantitative' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Category:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Technology&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Office Supplies&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Thailand&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_1C7DD954D1C5456A85D0355E25E1A513'>
            <properties context=''>
              <relation connection='excel-direct.1l0z40000dzao61anuwyl0yeic19 (คัดลอก)' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U10195:no:A1:U10195:0' header='yes' outcome='2'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country/Region' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State/Province' ordinal='10' />
                  <column datatype='string' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Orders (Sample - Superstore) (4)' inline='true' name='federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 3)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='excel-direct.1l0z40000dzao61anuwyl0yeic19 (คัดลอก 2)'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/ADMIN/Documents/ที่เก็บใน Tableau ของฉัน/แหล่งข้อมูล/2022.4/th_TH-APAC/Sample - Superstore.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1l0z40000dzao61anuwyl0yeic19 (คัดลอก 2)' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U10195:no:A1:U10195:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State/Province' ordinal='10' />
            <column datatype='string' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1l0z40000dzao61anuwyl0yeic19 (คัดลอก 2)' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U10195:no:A1:U10195:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State/Province' ordinal='10' />
            <column datatype='string' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U10195:no:A1:U10195:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State/Province</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State/Province]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State/Province</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_1C7DD954D1C5456A85D0355E25E1A513]' role='measure' type='quantitative' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[State/Province]' derivation='None' name='[none:State/Province:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country/Region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:State/Province:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Manitoba&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;British Columbia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prince Edward Island&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Quebec&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nova Scotia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alberta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Brunswick&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saskatchewan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Newfoundland and Labrador&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Amarillo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bozeman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Carrollton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dublin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Evanston&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hagerstown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Homestead&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Las Cruces&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Longview&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nashua&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pocatello&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Redondo Beach&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Round Rock&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Southaven&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;The Colony&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vancouver&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wheeling&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aberdeen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Delray Beach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Freeport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Green Bay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hesperia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lake Elsinore&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Linden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mansfield&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Middletown&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morristown&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ormond Beach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Quincy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rock Hill&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wausau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Yucaipa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolingbrook&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cambridge&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chula Vista&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Coral Springs&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Des Plaines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Encinitas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gaithersburg&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gresham&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hillsboro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jonesboro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lakewood&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lodi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Marietta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Minneapolis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Las Vegas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oxnard&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Plainfield&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Reading&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rome&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;San Clemente&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sioux Falls&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Temecula&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Urbandale&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;West Palm Beach&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Antioch&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Baytown&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Broken Arrow&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Coachella&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Danbury&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;East Orange&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Farmington&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Glenview&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Huntington Beach&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Knoxville&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lawton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Loveland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moncton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Brunswick&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Olathe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Port Orange&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Renton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Charles&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sandy Springs&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tigard&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Waco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Anaheim&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bangor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brentwood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clifton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cranston&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Everett&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gilbert&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Halifax&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hoover&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mcallen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Missouri City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oceanside&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Parma&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pomona&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Redwood City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Royal Oak&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sparks&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Thomasville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vineland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Whittier&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bossier City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Canton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Corpus Christi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Englewood&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Garden City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Grove City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Holland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jupiter&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Miramar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Murrieta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Miami&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Palatine&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Plano&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Redding&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Romeoville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Skokie&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tempe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Utica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Westfield&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Arvada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bethlehem&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bullhead City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chattanooga&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Edmonton&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Frankfort&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Great Falls&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Irving&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Laguna Niguel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lewiston&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mesquite&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Moreno Valley&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Niagara Falls&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Orland Park&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Perth Amboy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Santa Maria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sunnyvale&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Troy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Watertown&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Yonkers&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Abilene&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bloomington&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coon Rapids&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Deltona&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greensboro&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hialeah&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jamestown&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lake Forest&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lindenhurst&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Manteca&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mount Pleasant&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Normal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oswego&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rockford&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Angelo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tamarac&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Waynesboro&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bellevue&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Charlottesville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Edmond&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fort Lauderdale&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Grand Rapids&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Helena&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Inglewood&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;La Quinta&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lehi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Meridian&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Montreal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Newark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pensacola&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rio Rancho&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Peters&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Waterbury&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Woodstock&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Allentown&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Avondale&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bowling Green&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carlsbad&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Citrus Heights&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Costa Mesa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dover&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Escondido&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gulfport&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hollywood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Keller&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lansing&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marlborough&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mishawaka&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Norwich&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Palm Coast&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Plantation&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Redlands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Roseville&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Smyrna&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Texarkana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vacaville&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Westland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Apopka&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Beaumont&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Broomfield&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chandler&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;College Station&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Danville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;East Point&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fayetteville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Goldsboro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Harlingen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Huntsville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Layton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lowell&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Olympia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Paterson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Port Saint Lucie&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Revere&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Cloud&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sanford&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;St. John&apos;s&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tinley Park&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Warner Robins&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Winnipeg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Apple Valley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brownsville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chapel Hill&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Colorado Springs&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Grand Island&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Harrisonburg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;La Mesa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;League City&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mentor&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montebello&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New Rochelle&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Omaha&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pearland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Louis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sterling Heights&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Warwick&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Arlington Heights&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bellingham&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Buffalo Grove&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Charlottetown&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Commerce City&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dearborn Heights&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Edmonds&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fort Worth&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Grapevine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iowa City&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Leominster&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malden&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Moorhead&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Newport News&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Orem&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Provo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Petersburg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Summerville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Trenton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Waterloo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Woonsocket&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Asheville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Beverly&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Burbank&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chesapeake&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Conroe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Deer Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Cajon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greeley&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hendersonville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lake Charles&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lincoln Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Morgan Hill&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Noblesville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pharr&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Quebec City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rochester Hills&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Salinas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Scottsdale&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Superior&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Andover&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bartlett&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bridgeton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cedar Hill&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cuyahoga Falls&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gladstone&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Haltom City&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kirkwood&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Laurel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Medford&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Albany&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Odessa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pasadena&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pompano Beach&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Regina&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marcos&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Thornton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Virginia Beach&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Altoona&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bakersfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Boynton Beach&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carol Stream&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clarksville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cottage Grove&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Draper&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eugene&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gastonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hackensack&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Holyoke&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kenner&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Laredo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Longmont&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Marysville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mission Viejo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Naperville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oak Park&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Park Ridge&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pleasant Grove&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Redmond&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Roswell&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Gabriel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Bend&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Texas City&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vallejo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Westminster&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Atlantic City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Boca Raton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Calgary&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Coppell&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Elmhurst&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hickory&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jefferson City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lakeland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Little Rock&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maple Grove&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Milford&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mount Vernon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Overland Park&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pico Rivera&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rancho Cucamonga&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rockville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Shelton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;West Allis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Appleton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belleville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Daytona Beach&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Edinburg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fort Collins&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Grand Prairie&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hattiesburg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;La Porte&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Meriden&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pembroke Pines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Paul&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Stockton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Toronto&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Woodland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ann Arbor&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bayonne&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cedar Rapids&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Clovis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Eagan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fargo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Glendale&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kissimmee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Modesto&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Bedford&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oklahoma City&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Port Arthur&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Springdale&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Thousand Oaks&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Visalia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wilmington&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albuquerque&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Auburn&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Camarillo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Coral Gables&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Elyria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Frisco&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Highland Park&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Johnson City&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lakeville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Littleton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Margate&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Murfreesboro&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Charleston&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Owensboro&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pine Bluff&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rapid City&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sierra Vista&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;West Jordan&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Category:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Technology&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Office Supplies&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Thailand&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_1C7DD954D1C5456A85D0355E25E1A513'>
            <properties context=''>
              <relation connection='excel-direct.1l0z40000dzao61anuwyl0yeic19 (คัดลอก 2)' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U10195:no:A1:U10195:0' header='yes' outcome='2'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country/Region' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State/Province' ordinal='10' />
                  <column datatype='string' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Orders (Sample - Superstore) (5)' inline='true' name='federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 4)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='excel-direct.1l0z40000dzao61anuwyl0yeic19 (คัดลอก 3)'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/ADMIN/Documents/ที่เก็บใน Tableau ของฉัน/แหล่งข้อมูล/2022.4/th_TH-APAC/Sample - Superstore.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1l0z40000dzao61anuwyl0yeic19 (คัดลอก 3)' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U10195:no:A1:U10195:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State/Province' ordinal='10' />
            <column datatype='string' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1l0z40000dzao61anuwyl0yeic19 (คัดลอก 3)' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U10195:no:A1:U10195:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State/Province' ordinal='10' />
            <column datatype='string' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U10195:no:A1:U10195:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State/Province</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State/Province]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State/Province</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_1C7DD954D1C5456A85D0355E25E1A513]' role='measure' type='quantitative' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[State/Province]' derivation='None' name='[none:State/Province:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country/Region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:State/Province:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Manitoba&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;British Columbia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prince Edward Island&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Quebec&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nova Scotia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alberta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Brunswick&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saskatchewan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Newfoundland and Labrador&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Amarillo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bozeman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Carrollton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dublin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Evanston&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hagerstown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Homestead&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Las Cruces&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Longview&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nashua&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pocatello&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Redondo Beach&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Round Rock&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Southaven&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;The Colony&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vancouver&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wheeling&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aberdeen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Delray Beach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Freeport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Green Bay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hesperia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lake Elsinore&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Linden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mansfield&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Middletown&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morristown&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ormond Beach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Quincy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rock Hill&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wausau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Yucaipa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolingbrook&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cambridge&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chula Vista&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Coral Springs&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Des Plaines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Encinitas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gaithersburg&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gresham&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hillsboro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jonesboro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lakewood&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lodi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Marietta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Minneapolis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Las Vegas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oxnard&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Plainfield&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Reading&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rome&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;San Clemente&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sioux Falls&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Temecula&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Urbandale&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;West Palm Beach&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Antioch&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Baytown&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Broken Arrow&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Coachella&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Danbury&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;East Orange&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Farmington&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Glenview&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Huntington Beach&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Knoxville&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lawton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Loveland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moncton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Brunswick&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Olathe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Port Orange&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Renton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Charles&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sandy Springs&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tigard&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Waco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Anaheim&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bangor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brentwood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clifton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cranston&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Everett&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gilbert&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Halifax&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hoover&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mcallen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Missouri City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oceanside&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Parma&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pomona&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Redwood City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Royal Oak&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sparks&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Thomasville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vineland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Whittier&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bossier City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Canton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Corpus Christi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Englewood&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Garden City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Grove City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Holland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jupiter&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Miramar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Murrieta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Miami&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Palatine&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Plano&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Redding&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Romeoville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Skokie&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tempe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Utica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Westfield&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Arvada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bethlehem&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bullhead City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chattanooga&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Edmonton&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Frankfort&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Great Falls&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Irving&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Laguna Niguel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lewiston&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mesquite&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Moreno Valley&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Niagara Falls&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Orland Park&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Perth Amboy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Santa Maria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sunnyvale&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Troy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Watertown&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Yonkers&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Abilene&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bloomington&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coon Rapids&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Deltona&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greensboro&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hialeah&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jamestown&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lake Forest&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lindenhurst&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Manteca&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mount Pleasant&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Normal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oswego&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rockford&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Angelo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tamarac&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Waynesboro&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bellevue&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Charlottesville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Edmond&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fort Lauderdale&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Grand Rapids&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Helena&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Inglewood&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;La Quinta&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lehi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Meridian&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Montreal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Newark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pensacola&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rio Rancho&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Peters&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Waterbury&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Woodstock&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Allentown&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Avondale&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bowling Green&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carlsbad&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Citrus Heights&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Costa Mesa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dover&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Escondido&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gulfport&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hollywood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Keller&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lansing&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marlborough&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mishawaka&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Norwich&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Palm Coast&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Plantation&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Redlands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Roseville&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Smyrna&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Texarkana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vacaville&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Westland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Apopka&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Beaumont&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Broomfield&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chandler&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;College Station&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Danville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;East Point&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fayetteville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Goldsboro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Harlingen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Huntsville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Layton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lowell&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Olympia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Paterson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Port Saint Lucie&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Revere&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Cloud&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sanford&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;St. John&apos;s&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tinley Park&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Warner Robins&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Winnipeg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Apple Valley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brownsville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chapel Hill&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Colorado Springs&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Grand Island&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Harrisonburg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;La Mesa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;League City&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mentor&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montebello&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New Rochelle&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Omaha&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pearland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Louis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sterling Heights&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Warwick&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Arlington Heights&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bellingham&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Buffalo Grove&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Charlottetown&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Commerce City&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dearborn Heights&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Edmonds&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fort Worth&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Grapevine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iowa City&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Leominster&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malden&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Moorhead&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Newport News&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Orem&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Provo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Petersburg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Summerville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Trenton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Waterloo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Woonsocket&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Asheville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Beverly&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Burbank&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chesapeake&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Conroe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Deer Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Cajon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greeley&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hendersonville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lake Charles&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lincoln Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Morgan Hill&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Noblesville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pharr&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Quebec City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rochester Hills&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Salinas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Scottsdale&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Superior&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Andover&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bartlett&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bridgeton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cedar Hill&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cuyahoga Falls&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gladstone&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Haltom City&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kirkwood&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Laurel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Medford&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Albany&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Odessa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pasadena&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pompano Beach&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Regina&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marcos&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Thornton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Virginia Beach&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Altoona&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bakersfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Boynton Beach&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carol Stream&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clarksville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cottage Grove&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Draper&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eugene&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gastonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hackensack&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Holyoke&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kenner&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Laredo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Longmont&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Marysville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mission Viejo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Naperville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oak Park&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Park Ridge&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pleasant Grove&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Redmond&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Roswell&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Gabriel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Bend&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Texas City&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vallejo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Westminster&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Atlantic City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Boca Raton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Calgary&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Coppell&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Elmhurst&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hickory&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jefferson City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lakeland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Little Rock&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maple Grove&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Milford&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mount Vernon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Overland Park&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pico Rivera&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rancho Cucamonga&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rockville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Shelton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;West Allis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Appleton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belleville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Daytona Beach&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Edinburg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fort Collins&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Grand Prairie&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hattiesburg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;La Porte&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Meriden&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pembroke Pines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Paul&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Stockton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Toronto&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Woodland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ann Arbor&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bayonne&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cedar Rapids&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Clovis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Eagan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fargo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Glendale&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kissimmee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Modesto&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Bedford&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oklahoma City&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Port Arthur&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Springdale&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Thousand Oaks&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Visalia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wilmington&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albuquerque&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Auburn&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Camarillo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Coral Gables&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Elyria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Frisco&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Highland Park&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Johnson City&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lakeville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Littleton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Margate&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Murfreesboro&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Charleston&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Owensboro&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pine Bluff&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rapid City&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sierra Vista&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;West Jordan&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Category:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Technology&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Office Supplies&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Thailand&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_1C7DD954D1C5456A85D0355E25E1A513'>
            <properties context=''>
              <relation connection='excel-direct.1l0z40000dzao61anuwyl0yeic19 (คัดลอก 3)' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U10195:no:A1:U10195:0' header='yes' outcome='2'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country/Region' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State/Province' ordinal='10' />
                  <column datatype='string' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Orders (Sample - Superstore) (6)' inline='true' name='federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 5)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='excel-direct.1l0z40000dzao61anuwyl0yeic19 (คัดลอก 4)'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/ADMIN/Documents/ที่เก็บใน Tableau ของฉัน/แหล่งข้อมูล/2022.4/th_TH-APAC/Sample - Superstore.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1l0z40000dzao61anuwyl0yeic19 (คัดลอก 4)' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U10195:no:A1:U10195:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State/Province' ordinal='10' />
            <column datatype='string' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1l0z40000dzao61anuwyl0yeic19 (คัดลอก 4)' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U10195:no:A1:U10195:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State/Province' ordinal='10' />
            <column datatype='string' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U10195:no:A1:U10195:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State/Province</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State/Province]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State/Province</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='5' name='LTH_RTH_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_1C7DD954D1C5456A85D0355E25E1A513]' role='measure' type='quantitative' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[State/Province]' derivation='None' name='[none:State/Province:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country/Region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:State/Province:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Manitoba&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;British Columbia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prince Edward Island&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Quebec&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nova Scotia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alberta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Brunswick&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saskatchewan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Newfoundland and Labrador&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Amarillo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bozeman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Carrollton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dublin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Evanston&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hagerstown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Homestead&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Las Cruces&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Longview&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nashua&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pocatello&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Redondo Beach&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Round Rock&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Southaven&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;The Colony&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vancouver&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wheeling&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aberdeen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Delray Beach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Freeport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Green Bay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hesperia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lake Elsinore&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Linden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mansfield&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Middletown&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morristown&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ormond Beach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Quincy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rock Hill&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wausau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Yucaipa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolingbrook&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cambridge&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chula Vista&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Coral Springs&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Des Plaines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Encinitas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gaithersburg&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gresham&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hillsboro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jonesboro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lakewood&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lodi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Marietta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Minneapolis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Las Vegas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oxnard&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Plainfield&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Reading&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rome&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;San Clemente&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sioux Falls&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Temecula&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Urbandale&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;West Palm Beach&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Antioch&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Baytown&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Broken Arrow&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Coachella&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Danbury&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;East Orange&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Farmington&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Glenview&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Huntington Beach&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Knoxville&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lawton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Loveland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moncton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Brunswick&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Olathe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Port Orange&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Renton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Charles&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sandy Springs&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tigard&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Waco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Anaheim&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bangor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brentwood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clifton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cranston&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Everett&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gilbert&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Halifax&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hoover&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mcallen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Missouri City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oceanside&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Parma&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pomona&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Redwood City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Royal Oak&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sparks&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Thomasville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vineland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Whittier&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bossier City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Canton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Corpus Christi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Englewood&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Garden City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Grove City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Holland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jupiter&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Miramar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Murrieta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Miami&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Palatine&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Plano&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Redding&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Romeoville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Skokie&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tempe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Utica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Westfield&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Arvada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bethlehem&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bullhead City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chattanooga&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Edmonton&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Frankfort&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Great Falls&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Irving&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Laguna Niguel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lewiston&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mesquite&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Moreno Valley&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Niagara Falls&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Orland Park&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Perth Amboy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Santa Maria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sunnyvale&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Troy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Watertown&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Yonkers&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Abilene&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bloomington&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coon Rapids&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Deltona&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greensboro&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hialeah&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jamestown&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lake Forest&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lindenhurst&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Manteca&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mount Pleasant&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Normal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oswego&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rockford&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Angelo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tamarac&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Waynesboro&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bellevue&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Charlottesville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Edmond&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fort Lauderdale&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Grand Rapids&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Helena&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Inglewood&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;La Quinta&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lehi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Meridian&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Montreal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Newark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pensacola&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rio Rancho&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Peters&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Waterbury&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Woodstock&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Allentown&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Avondale&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bowling Green&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carlsbad&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Citrus Heights&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Costa Mesa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dover&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Escondido&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gulfport&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hollywood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Keller&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lansing&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marlborough&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mishawaka&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Norwich&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Palm Coast&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Plantation&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Redlands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Roseville&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Smyrna&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Texarkana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vacaville&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Westland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Apopka&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Beaumont&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Broomfield&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chandler&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;College Station&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Danville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;East Point&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fayetteville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Goldsboro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Harlingen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Huntsville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Layton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lowell&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Olympia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Paterson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Port Saint Lucie&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Revere&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Cloud&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sanford&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;St. John&apos;s&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tinley Park&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Warner Robins&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Winnipeg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Apple Valley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brownsville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chapel Hill&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Colorado Springs&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Grand Island&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Harrisonburg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;La Mesa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;League City&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mentor&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montebello&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New Rochelle&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Omaha&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pearland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Louis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sterling Heights&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Warwick&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Arlington Heights&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bellingham&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Buffalo Grove&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Charlottetown&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Commerce City&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dearborn Heights&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Edmonds&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fort Worth&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Grapevine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iowa City&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Leominster&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malden&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Moorhead&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Newport News&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Orem&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Provo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Petersburg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Summerville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Trenton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Waterloo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Woonsocket&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Asheville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Beverly&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Burbank&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chesapeake&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Conroe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Deer Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Cajon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greeley&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hendersonville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lake Charles&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lincoln Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Morgan Hill&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Noblesville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pharr&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Quebec City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rochester Hills&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Salinas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Scottsdale&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Superior&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Andover&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bartlett&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bridgeton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cedar Hill&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cuyahoga Falls&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gladstone&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Haltom City&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kirkwood&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Laurel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Medford&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Albany&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Odessa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pasadena&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pompano Beach&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Regina&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marcos&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Thornton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Virginia Beach&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Altoona&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bakersfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Boynton Beach&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carol Stream&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clarksville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cottage Grove&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Draper&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eugene&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gastonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hackensack&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Holyoke&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kenner&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Laredo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Longmont&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Marysville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mission Viejo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Naperville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oak Park&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Park Ridge&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pleasant Grove&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Redmond&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Roswell&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Gabriel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Bend&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Texas City&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vallejo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Westminster&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Atlantic City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Boca Raton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Calgary&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Coppell&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Elmhurst&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hickory&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jefferson City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lakeland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Little Rock&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maple Grove&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Milford&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mount Vernon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Overland Park&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pico Rivera&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rancho Cucamonga&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rockville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Shelton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;West Allis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Appleton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belleville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Daytona Beach&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Edinburg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fort Collins&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Grand Prairie&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hattiesburg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;La Porte&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Meriden&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pembroke Pines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Paul&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Stockton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Toronto&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Woodland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ann Arbor&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bayonne&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cedar Rapids&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Clovis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Eagan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fargo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Glendale&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kissimmee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Modesto&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Bedford&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oklahoma City&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Port Arthur&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Springdale&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Thousand Oaks&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Visalia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wilmington&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albuquerque&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Auburn&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Camarillo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Coral Gables&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Elyria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Frisco&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Highland Park&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Johnson City&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lakeville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Littleton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Margate&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Murfreesboro&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Charleston&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Owensboro&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pine Bluff&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rapid City&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sierra Vista&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;West Jordan&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Category:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Technology&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Office Supplies&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Forecast Indicator:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;จริง&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;โดยประมาณ&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Thailand&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;จริง&quot;</bucket>
            <bucket>&quot;โดยประมาณ&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_1C7DD954D1C5456A85D0355E25E1A513'>
            <properties context=''>
              <relation connection='excel-direct.1l0z40000dzao61anuwyl0yeic19 (คัดลอก 4)' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U10195:no:A1:U10195:0' header='yes' outcome='2'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country/Region' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State/Province' ordinal='10' />
                  <column datatype='string' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Discount Chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Ex1 Horizontal Bars</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.0a1xnhv0c4e6tg19z4n5t15lligb' />
          </datasources>
          <datasource-dependencies datasource='federated.0a1xnhv0c4e6tg19z4n5t15lligb'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0a1xnhv0c4e6tg19z4n5t15lligb].[sum:Discount:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0a1xnhv0c4e6tg19z4n5t15lligb].[none:Category:nk] / [federated.0a1xnhv0c4e6tg19z4n5t15lligb].[none:Sub-Category:nk])</rows>
        <cols>([federated.0a1xnhv0c4e6tg19z4n5t15lligb].[none:Region:nk] * [federated.0a1xnhv0c4e6tg19z4n5t15lligb].[sum:Sales:qk])</cols>
      </table>
      <simple-id uuid='{29CCDE6D-88FB-4026-8A57-F2ACDD4AB86D}' />
    </worksheet>
    <worksheet name='Ex1 Horizontal Bars'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Ex1 Horizontal Bars</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.0a1xnhv0c4e6tg19z4n5t15lligb' />
          </datasources>
          <datasource-dependencies datasource='federated.0a1xnhv0c4e6tg19z4n5t15lligb'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0a1xnhv0c4e6tg19z4n5t15lligb].[sum:Profit:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0a1xnhv0c4e6tg19z4n5t15lligb].[none:Category:nk] / [federated.0a1xnhv0c4e6tg19z4n5t15lligb].[none:Sub-Category:nk])</rows>
        <cols>([federated.0a1xnhv0c4e6tg19z4n5t15lligb].[none:Region:nk] * [federated.0a1xnhv0c4e6tg19z4n5t15lligb].[sum:Sales:qk])</cols>
      </table>
      <simple-id uuid='{0CB08B87-86E9-4EE2-8693-0C2C04016CAB}' />
    </worksheet>
    <worksheet name='Ex2 Filled Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.0a1xnhv0c4e6tg19z4n5t15lligb' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0a1xnhv0c4e6tg19z4n5t15lligb'>
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[State/Province]' derivation='None' name='[none:State/Province:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0a1xnhv0c4e6tg19z4n5t15lligb].[sum:Sales:qk]' />
              <lod column='[federated.0a1xnhv0c4e6tg19z4n5t15lligb].[none:Country/Region:nk]' />
              <lod column='[federated.0a1xnhv0c4e6tg19z4n5t15lligb].[none:State/Province:nk]' />
              <geometry column='[federated.0a1xnhv0c4e6tg19z4n5t15lligb].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0a1xnhv0c4e6tg19z4n5t15lligb].[Latitude (generated)]</rows>
        <cols>[federated.0a1xnhv0c4e6tg19z4n5t15lligb].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{FBAEEC68-79E9-4D7C-B8A6-10D82E712579}' />
    </worksheet>
    <worksheet name='Ex3 Symbol Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore) (2)' name='federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก)'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[State/Province]' derivation='None' name='[none:State/Province:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก)].[none:Category:nk]'>
            <groupfilter function='member' level='[none:Category:nk]' member='&quot;Furniture&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก)].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก)].[Longitude (generated)]' field-type='quantitative' max='-7334725.9487586124' min='-14330096.522784891' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก)].[Latitude (generated)]' field-type='quantitative' max='6717683.6361657819' min='2761327.3501558639' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก)].[sum:Profit:qk]' />
              <lod column='[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก)].[none:Country/Region:nk]' />
              <lod column='[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก)].[none:State/Province:nk]' />
              <lod column='[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก)].[none:City:nk]' />
              <size column='[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก)].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.1546962261199951' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก)].[Latitude (generated)]</rows>
        <cols>[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก)].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{432BB01B-FCAD-4A72-B446-66C1A0204CDB}' />
    </worksheet>
    <worksheet name='Ex4 Pie on Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore) (3)' name='federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 2)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 2)'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[State/Province]' derivation='None' name='[none:State/Province:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 2)].[none:Category:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Category:nk]' />
              <groupfilter function='member' level='[none:Category:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 2)].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 2)].[Longitude (generated)]' field-type='quantitative' max='-7334725.9487586124' min='-14330096.522784891' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 2)].[Latitude (generated)]' field-type='quantitative' max='6717683.6361657819' min='2761327.3501558639' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 2)].[none:Category:nk]' />
              <lod column='[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 2)].[none:Country/Region:nk]' />
              <lod column='[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 2)].[none:State/Province:nk]' />
              <size column='[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 2)].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.1546962261199951' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 2)].[Latitude (generated)]</rows>
        <cols>[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 2)].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{4CB6C865-A48D-4E32-BB2D-3997CCE1E0F2}' />
    </worksheet>
    <worksheet name='Ex5 Scatter Plot'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore) (4)' name='federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 3)' />
          </datasources>
          <datasource-dependencies datasource='federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 3)'>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 3)].[none:Customer Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 3)].[sum:Sales:qk]</rows>
        <cols>[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 3)].[sum:Profit:qk]</cols>
        <annotations>
          <annotation class='point' id='7' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Customer Name: </run>
              <run bold='true'><![CDATA[<[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 3)].[none:Customer Name:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Profit: </run>
              <run bold='true'><![CDATA[<[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 3)].[sum:Profit:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Sales: </run>
              <run bold='true'><![CDATA[<[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 3)].[sum:Sales:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 3)].[sum:Profit:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 3)].[sum:Sales:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 3)].[none:Customer Name:nk]</field>
                      <field>[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 3)].[sum:Profit:qk]</field>
                      <field>[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 3)].[sum:Sales:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Raymond Buch&quot;</value>
                    <value>6976.0959000000003</value>
                    <value>15117.338999999998</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
          <annotation class='point' id='9' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Customer Name: </run>
              <run bold='true'><![CDATA[<[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 3)].[none:Customer Name:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Profit: </run>
              <run bold='true'><![CDATA[<[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 3)].[sum:Profit:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Sales: </run>
              <run bold='true'><![CDATA[<[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 3)].[sum:Sales:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 3)].[sum:Profit:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 3)].[sum:Sales:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 3)].[none:Customer Name:nk]</field>
                      <field>[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 3)].[sum:Profit:qk]</field>
                      <field>[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 3)].[sum:Sales:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Sean Miller&quot;</value>
                    <value>-1980.7393000000022</value>
                    <value>25043.049999999999</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='132' y='37' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{0F413C09-C283-404A-82D9-C0D9E11DF3FD}' />
    </worksheet>
    <worksheet name='Ex6 Time Series &amp; Forecast'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore) (5)' name='federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 4)' />
          </datasources>
          <datasource-dependencies datasource='federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 4)'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 4)].[yr:Order Date:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 4)].[sum:Sales:qk]</rows>
        <cols>[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 4)].[mn:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{8EFE0C66-C266-4675-A36F-063A7F13D897}' />
    </worksheet>
    <worksheet name='Ex7 Time Series &amp; Forecast'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore) (6)' name='federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 5)' />
          </datasources>
          <datasource-dependencies datasource='federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 5)'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' forecast-column-base='[sum:Sales:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 5)].[none:Forecast Indicator:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 5)].[fVal:sum:Sales:qk]' enable-instant-analytics='true' formula='average' id='refline0' label='&lt;Computation&gt;=&lt;Value&gt;' label-type='custom' probability='95' scope='per-pane' value-column='[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 5)].[fVal:sum:Sales:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 5)].[fVal:sum:Sales:qk]</rows>
        <cols>([federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 5)].[yr:Order Date:ok] / [federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 5)].[mn:Order Date:ok])</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{62BDF4AF-133A-46A3-902C-A90FCB51D2CA}' />
    </worksheet>
    <worksheet name='Postal Code'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.0a1xnhv0c4e6tg19z4n5t15lligb' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0a1xnhv0c4e6tg19z4n5t15lligb'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column datatype='string' name='[State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Postal Code]' derivation='None' name='[none:Postal Code:nk]' pivot='key' type='nominal' />
            <column-instance column='[State/Province]' derivation='None' name='[none:State/Province:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0a1xnhv0c4e6tg19z4n5t15lligb].[Longitude (generated)]' field-type='quantitative' max='-6465312.6889708564' min='-14938012.080425147' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0a1xnhv0c4e6tg19z4n5t15lligb].[Latitude (generated)]' field-type='quantitative' max='7626949.0159230856' min='2835063.1333773159' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0a1xnhv0c4e6tg19z4n5t15lligb].[none:Postal Code:nk]' />
              <lod column='[federated.0a1xnhv0c4e6tg19z4n5t15lligb].[none:State/Province:nk]' />
              <lod column='[federated.0a1xnhv0c4e6tg19z4n5t15lligb].[none:Country/Region:nk]' />
              <lod column='[federated.0a1xnhv0c4e6tg19z4n5t15lligb].[none:City:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0a1xnhv0c4e6tg19z4n5t15lligb].[Latitude (generated)]</rows>
        <cols>[federated.0a1xnhv0c4e6tg19z4n5t15lligb].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{467A9D2A-3602-4F7F-9D34-BE175E833EFF}' />
    </worksheet>
    <worksheet name='Ship Date'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore) (6)' name='federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 5)' />
          </datasources>
          <datasource-dependencies datasource='federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 5)'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='date' name='[Ship Date]' role='dimension' type='ordinal' />
            <column-instance column='[Quantity]' derivation='Sum' forecast-column-base='[sum:Quantity:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Ship Date]' derivation='Year' name='[yr:Ship Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 5)].[none:Forecast Indicator:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 5)].[fVal:sum:Quantity:qk]' enable-instant-analytics='true' formula='average' id='refline0' label='&lt;Computation&gt;=&lt;Value&gt;' label-type='custom' probability='95' scope='per-pane' value-column='[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 5)].[fVal:sum:Quantity:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 5)].[fVal:sum:Quantity:qk]</rows>
        <cols>([federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 5)].[yr:Order Date:ok] / ([federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 5)].[mn:Order Date:ok] / [federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 5)].[yr:Ship Date:ok]))</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{A15E0BAE-574A-49F8-960E-0F8D3916E4B0}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Ex8 Dashboard'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='89397' id='7' param='horz' type-v2='layout-flow' w='99064' x='468' y='9710'>
            <zone h='89397' id='5' type-v2='layout-basic' w='89702' x='468' y='9710'>
              <zone h='44699' id='3' name='Ex1 Horizontal Bars' w='44851' x='468' y='9710'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='44699' id='9' name='Ex2 Filled Map' w='44851' x='45319' y='9710'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='44698' id='11' name='Ex3 Symbol Map' w='44851' x='468' y='54409'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='44698' id='17' name='Ex5 Scatter Plot' w='44851' x='45319' y='54409'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='89397' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='9362' x='90170' y='9710'>
              <zone h='7255' id='8' name='Ex1 Horizontal Bars' pane-specification-id='0' param='[federated.0a1xnhv0c4e6tg19z4n5t15lligb].[sum:Profit:qk]' type-v2='color' w='9362' x='90170' y='9710'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7255' id='10' name='Ex2 Filled Map' pane-specification-id='0' param='[federated.0a1xnhv0c4e6tg19z4n5t15lligb].[sum:Sales:qk]' type-v2='color' w='9362' x='90170' y='16965'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7255' id='12' name='Ex3 Symbol Map' pane-specification-id='0' param='[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก)].[sum:Profit:qk]' type-v2='color' w='9362' x='90170' y='24220'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='14063' id='13' name='Ex3 Symbol Map' pane-specification-id='0' param='[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก)].[sum:Sales:qk]' type-v2='size' w='9362' x='90170' y='31475'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='14657' id='14' name='Ex4 Pie on Map' w='9362' x='90170' y='45538'>
                <layout-cache minheight='244' minwidth='202' type-h='scalable' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='14657' id='15' name='Ex4 Pie on Map' pane-specification-id='0' param='[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 2)].[sum:Sales:qk]' type-v2='size' w='9362' x='90170' y='60195'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9598' id='16' name='Ex4 Pie on Map' pane-specification-id='0' param='[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 2)].[none:Category:nk]' type-v2='color' w='9362' x='90170' y='74852'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='14657' id='18' name='Ex5 Scatter Plot' pane-specification-id='0' param='[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 3)].[none:Customer Name:nk]' type-v2='color' w='9362' x='90170' y='84450'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone forceUpdate='true' h='8817' id='19' type-v2='text' w='99064' x='468' y='893'>
            <formatted-text>
              <run fontalignment='1' fontsize='20'>Dashboard</run>
              <run fontalignment='1'>Æ&#10;</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1850' minheight='1850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='21' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98214' id='20' param='vert' type-v2='layout-flow' w='99064' x='468' y='893'>
                <zone forceUpdate='true' h='8817' id='19' type-v2='text' w='99064' x='468' y='893'>
                  <formatted-text>
                    <run fontalignment='1' fontsize='20'>Dashboard</run>
                    <run fontalignment='1'>Æ&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44699' id='3' is-fixed='true' name='Ex1 Horizontal Bars' w='44851' x='468' y='9710'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7255' id='8' name='Ex1 Horizontal Bars' pane-specification-id='0' param='[federated.0a1xnhv0c4e6tg19z4n5t15lligb].[sum:Profit:qk]' type-v2='color' w='9362' x='90170' y='9710'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44699' id='9' is-fixed='true' name='Ex2 Filled Map' w='44851' x='45319' y='9710'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7255' id='10' name='Ex2 Filled Map' pane-specification-id='0' param='[federated.0a1xnhv0c4e6tg19z4n5t15lligb].[sum:Sales:qk]' type-v2='color' w='9362' x='90170' y='16965'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='110' h='14657' id='14' is-fixed='true' name='Ex4 Pie on Map' w='9362' x='90170' y='45538'>
                  <layout-cache minheight='244' minwidth='202' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='14657' id='15' name='Ex4 Pie on Map' pane-specification-id='0' param='[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 2)].[sum:Sales:qk]' type-v2='size' w='9362' x='90170' y='60195'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9598' id='16' name='Ex4 Pie on Map' pane-specification-id='0' param='[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 2)].[none:Category:nk]' type-v2='color' w='9362' x='90170' y='74852'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44698' id='11' is-fixed='true' name='Ex3 Symbol Map' w='44851' x='468' y='54409'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7255' id='12' name='Ex3 Symbol Map' pane-specification-id='0' param='[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก)].[sum:Profit:qk]' type-v2='color' w='9362' x='90170' y='24220'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='14063' id='13' name='Ex3 Symbol Map' pane-specification-id='0' param='[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก)].[sum:Sales:qk]' type-v2='size' w='9362' x='90170' y='31475'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44698' id='17' is-fixed='true' name='Ex5 Scatter Plot' w='44851' x='45319' y='54409'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='14657' id='18' name='Ex5 Scatter Plot' pane-specification-id='0' param='[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 3)].[none:Customer Name:nk]' type-v2='color' w='9362' x='90170' y='84450'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{4E38663A-85B8-4B0F-BC1F-31ECFE468C63}' />
    </dashboard>
    <dashboard name='Ex9 Story' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
            <zone h='3423' id='3' type-v2='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='4253' />
            <zone h='84440' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='14730'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Story1' captured-sheet='Ex8 Dashboard' id='1' />
                  <story-point caption='Stroy2' captured-sheet='Discount Chart' id='2' />
                  <story-point caption='Story3' captured-sheet='Postal Code' id='3' />
                  <story-point caption='Story4' captured-sheet='Ship Date' id='4' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{4E8F0C5D-4C88-4356-9A50-5BD6F6C9A920}' />
    </dashboard>
  </dashboards>
  <windows source-height='135'>
    <window class='worksheet' name='Ex1 Horizontal Bars'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0a1xnhv0c4e6tg19z4n5t15lligb].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0a1xnhv0c4e6tg19z4n5t15lligb].[none:Category:nk]</field>
            <field>[federated.0a1xnhv0c4e6tg19z4n5t15lligb].[none:Region:nk]</field>
            <field>[federated.0a1xnhv0c4e6tg19z4n5t15lligb].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{15976845-5625-4D07-B274-64ED851D71ED}' />
    </window>
    <window class='worksheet' name='Ex2 Filled Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0a1xnhv0c4e6tg19z4n5t15lligb].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0a1xnhv0c4e6tg19z4n5t15lligb].[none:Country/Region:nk]</field>
            <field>[federated.0a1xnhv0c4e6tg19z4n5t15lligb].[none:State/Province:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AD9F04C2-3BB2-4E88-9C13-37DA9EE47753}' />
    </window>
    <window class='worksheet' name='Ex3 Symbol Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก)].[sum:Profit:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก)].[sum:Sales:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก)].[none:Category:nk]</field>
            <field>[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก)].[none:City:nk]</field>
            <field>[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก)].[none:Country/Region:nk]</field>
            <field>[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก)].[none:Region:nk]</field>
            <field>[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก)].[none:Segment:nk]</field>
            <field>[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก)].[none:State/Province:nk]</field>
            <field>[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก)].[sum:Sales:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{DD67CBE6-8838-48FC-903F-167D004330E7}' />
    </window>
    <window class='worksheet' name='Ex4 Pie on Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 2)].[sum:Sales:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 2)].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 2)].[none:Category:nk]</field>
            <field>[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 2)].[none:City:nk]</field>
            <field>[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 2)].[none:Country/Region:nk]</field>
            <field>[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 2)].[none:Region:nk]</field>
            <field>[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 2)].[none:Segment:nk]</field>
            <field>[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 2)].[none:State/Province:nk]</field>
            <field>[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 2)].[sum:Sales:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{0D1E4467-B7D7-4116-98E0-74C89306B12D}' />
    </window>
    <window class='worksheet' name='Ex5 Scatter Plot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 3)].[none:Customer Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 3)].[none:Customer Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1D6E28C5-A7C6-44B1-9C13-ACBEB4B9E785}' />
    </window>
    <window class='worksheet' name='Ex6 Time Series &amp; Forecast'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 4)].[yr:Order Date:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 4)].[mn:Order Date:ok]</field>
            <field>[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 4)].[none:Customer Name:nk]</field>
            <field>[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 4)].[none:Order ID:nk]</field>
            <field>[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 4)].[qr:Order Date:ok]</field>
            <field>[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 4)].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2702A76E-7247-408B-B013-93122E51DE2C}' />
    </window>
    <window class='worksheet' name='Ex7 Time Series &amp; Forecast'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 5)].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 5)].[mn:Order Date:ok]</field>
            <field>[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 5)].[none:Customer Name:nk]</field>
            <field>[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 5)].[none:Order ID:nk]</field>
            <field>[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 5)].[qr:Order Date:ok]</field>
            <field>[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 5)].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{68A3C75C-FDA3-4841-B553-E32885CB9BB3}' />
    </window>
    <window class='dashboard' name='Ex8 Dashboard'>
      <viewpoints>
        <viewpoint name='Ex1 Horizontal Bars' />
        <viewpoint name='Ex2 Filled Map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Ex3 Symbol Map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Ex4 Pie on Map'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 2)].[none:Category:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Ex5 Scatter Plot'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 3)].[none:Customer Name:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='19' />
      <simple-id uuid='{C79937B5-7CC4-4EE1-914A-A43D80CF3E58}' />
    </window>
    <window class='dashboard' maximized='true' name='Ex9 Story'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{C2E617FE-B267-477C-A2A2-4609B0F98341}' />
    </window>
    <window class='worksheet' name='Discount Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0a1xnhv0c4e6tg19z4n5t15lligb].[sum:Discount:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0a1xnhv0c4e6tg19z4n5t15lligb].[none:Category:nk]</field>
            <field>[federated.0a1xnhv0c4e6tg19z4n5t15lligb].[none:Region:nk]</field>
            <field>[federated.0a1xnhv0c4e6tg19z4n5t15lligb].[none:Sub-Category:nk]</field>
            <field>[federated.0a1xnhv0c4e6tg19z4n5t15lligb].[sum:Discount:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BD43DBCC-EBAC-4BAF-BAC4-9399EBD9BDDC}' />
    </window>
    <window class='worksheet' name='Postal Code'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0a1xnhv0c4e6tg19z4n5t15lligb].[none:Postal Code:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0a1xnhv0c4e6tg19z4n5t15lligb].[none:City:nk]</field>
            <field>[federated.0a1xnhv0c4e6tg19z4n5t15lligb].[none:Country/Region:nk]</field>
            <field>[federated.0a1xnhv0c4e6tg19z4n5t15lligb].[none:Postal Code:nk]</field>
            <field>[federated.0a1xnhv0c4e6tg19z4n5t15lligb].[none:State/Province:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4F614B50-BC74-4F6E-893D-5D7C768841FE}' />
    </window>
    <window class='worksheet' name='Ship Date'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 5)].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 5)].[mn:Order Date:ok]</field>
            <field>[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 5)].[none:Customer Name:nk]</field>
            <field>[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 5)].[none:Order ID:nk]</field>
            <field>[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 5)].[qr:Order Date:ok]</field>
            <field>[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 5)].[yr:Order Date:ok]</field>
            <field>[federated.0a1xnhv0c4e6tg19z4n5t15lligb (คัดลอก 5)].[yr:Ship Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1232D300-998E-4BA0-AF61-9D61E4ED9EFC}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Discount Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Ex1 Horizontal Bars' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2d2W8cWZafv1hzZyaZmSST+yqKFElJlEoqVVXXOtPAjG0YA28DA34w4H/C
      DzYaMGAD9qv94KcxDMOAAWMGsMduuLtradWikkqiKEriIu5LkkwuSeYemRmLH9hVpWqJJYpi
      ikryfk/JZPDEjWD84p57z73nSI7jOAgEZxT5pBsgEJwkQgCCM40QwCHIZrMn3QRBhRACOAS5
      XO6kmyCoEEIAgjONEIDgTCMEIDjTCAEIzjRCAIIzjRCA4EwjBCA40wgBCM40QgCCM40QgAAA
      q2Sws7ODUTKP9PdmuYRp2sfcqsojBCAAu8jondssLq+QSGYOOMhkaWn1QBOb8VniWwf97ZuL
      etINEJw8ZnoDub6PkXONSHaRidHbbKTy9PcP8mTiAWUjT6y3n/u377Kxd4UaNcduMk9bZwtz
      T2aRa2J0R076Ko6G6AEEKJoLq2jgOA6l1BaP5+PYpkkulyXUco5P3h/ElusYHr7EteFeykaZ
      S9ffRrdylC2bldlZiid9EUdECECA5Gug1t7g088+Zykj014fBEXD5Xbhc7uQFDcel45S2OLb
      8RlcNXV4dQVZUZGQiUTD6LobXVNO+lJeGklsiXwxiUSChoaGk26GoAL8ZAwgtHAw4t6cTn4i
      gFwuJzZ/PIdMpnKzG5ZloSiVcR1s20aSJCRJOnbbjuPgOA6yXBkvupL35WnbwgU6BInFCerT
      X1bEtu04yH/8gLb/KVKw65Vtl8tlFEWpyENqWRaO46CqlZlILJVK6LpecdsHtn77yRjfruwQ
      qW3m6sj5n50vtc0Sm8kUXpeK1x9CVY73jZPZXGZ8ZoVApJkLve0o8vPsF0kmTerqfMd6bgCs
      Auw8On67HDAL0XitIucSPMuBz7VVlBh6+23qFY3N+CoNjY2srW/ic8tsr8VxNTSzO7/AnuTh
      xuXzGJld7n11DzXQwZUrHciuKIXdDSIhN8srW+CPIO8tkii6uXJpEJd6eJGkN3bpGLnM7uRj
      dvON1GgOpi3jceuUiwamI+Nx54jH8wRrdJBVzJKBjYImOxTLFi6PB8wSRdPG43ZjlQ3KtozH
      rVEsGKBouF3asdxUQfVwoAAcp8j0+DiZcDNGap1INEJ8bYOw28Cu6SWoZciG2mkubZIpFtnO
      FukbHKap7Ty5+DjJQC3JtTh+xc9axsX16B5/fWuDGo9DvKWDrsbAoRtpmRnGvr6FR/PR5aT5
      4vNxdE2iraed2ekVNBW6hrpIb68zNp6kNRbi8dQ8gWgzdfY2dyfnabvwAfb6PfakMO+9fZ6b
      v/6MjK1x41o/392dpPX8MG8PdR/LTRVUDwc6h5Lk4dKNGwyea8NFkbEHY2wkc8juIK2NdSCr
      BHw+NE3jexdWKuV4+HCKsqqyODXG3MoWkqLR2tKM7vZTFwrQ1NJByP9yb1pVC/LuJx/THdLZ
      2V3D23yBS71NJDdWqWkfZrinhUw2i1nKU7Q1rGKe5t4hLp5rZjfvcKG/g1QyRWfvALVqmZ3N
      VfLuGJeH+vEGw1w434Wxs4XxSrdSUI0c2ANE+vp++Nx/8S0y+SIXBj24VBlZlfHoTfj9Mjjn
      kBSF4f4+FMkhnC3ir/Hgq8kiacP4PRpeFGSlkfff8VI0JQKelxvcuIMadz/7DG8gytVYP9mt
      7xhf83Dl0g0WH99jYs/DyOVewu5mXKQw3SGMmUfc3Y7QHPKynDbobA5TLKxRVDzUxc5zIXmX
      jZ0U0ViE9N4ugWgblRlyCd5kxCzQIUjMP6A+8TcVse04zrPTlOf+MVJ44JVti1mgF9sWi+EO
      g68R6cavKmK6XMF/tODFiLVAgjON6AEOwUbK4D/delwR2w5w/HHaytuuNAe1XVNk/tXf6z+2
      81SFAEwjzejdUcruCB2RGsIdbbj/+JhijhIuvK7jvyTbcShW4W6n04h9zEPWqhDA8vQ0TUPX
      qffILE8+ZmYyha+mkdZanamZBYKN7USUPCm1jlJuj1Q6S8Cns7y2Q9e5fmo8VXGZghOgKsYA
      uyWI1XjQdReSXUIPRNhbXSZXzLIwP8vXX94hldojXSwyPnoHxxVgfmKMVN4ESUxyCQ6mKgTQ
      VqszOrVAfG0DU/LQ3BKjxquzsrLGwMh1mgIa32/lrm1spyMWpnvgEgEpw8xi4kTbLnizqQrf
      INI1SHFhhlxJp6mzEzcQa29H0xxm5uP0DA1RF3RjqW5sTxsAMjZ6oJ6OztjJNl7wRiMCYYdg
      emGVhzuVsW3ZNkqF1tRXfD8APLuU+5g46L4ossRfjDS/km0RCHtJQl6Nf9hZmS2RlYx4ikjw
      ixECOAxWEWd39tXt+GNIWgX2KwiOjBDAIXAya9jf/LtXtiO/96+h8coxtEhwXFTFLFD84W3+
      9tNP+W58FusFx5rFHGuJ7R+/yG8ztfz9zyZry2scLfmf4DRSHT2ArXFuaIh6j5/lhQU625pY
      WN3Go1nsJBJ46xvZnl8io/h593IPtmOz8PgeS8kSVwa7iM9NsT7rcPHGDcqWze7aInOLy+Bp
      YKQ/xtjd+xiSh+HBHh6PPSDQ3MdwT9NJX7XgNVAVPYDtlNna2CCZyrGRSIBjktjcYXt9mZrm
      PnyKQV3LeZo9DtmiwdbuLqm9NLpbxzItAtE2blyMsb6ZZTOxTWonSfvwNWopMLO0SPuFt4i5
      LVKZLIYtISOWPZwVqkIAiuLl/PAwXS1R3HaOL7/5lkSqgOIJ0VjnB1nF53E/NSPh4PX52NuM
      k8yU8Hi9qKr648XKOn6Pjqoq1Hh1xu/fYWZ1G1l34ZJMFpfjJ3SlgtdNVbhAjQMDP6wMvHj9
      A8qmhayoKDJIkkQk0g5IEB1AkmVCNXU4lkl7P+i6iu2ALEXpC0g4LSEkQJIlfAMD5JJxbCOH
      EogQCUepv/ELZKUqbovgGBCBsEOQWJkjaq+8sh2pfgjJE/7JdyIO8HzEjrA3Cd2P3PDhSbdC
      UAGEAA5DMYU9821FTEuWhV2JFICuEMTeOX67p4yqEEAquUXRdJAUnbra4A+Z4UqlIpqmI0kS
      5WIRSdNQK9DdO8YuzsR/PXa7sD8LUREfNNglBHAIqmIWKLWzzte//5L4dhL7qadlbnYG09r/
      Ynl2gmS2dEItFFQrVdEDtPUOsL1TpL+vi9TyFA+erBJp70fNJ/nyi8/QQ800esBxyozdus1O
      QeXS1XM8+GYUT6SVq1cHEEkPBc+jKnqAp0kmkzh2kdmFFWRPLe998CG1do4CYBfWePRkC9ss
      kC8reF0KRSNLWax9EBxAlQhAwuvzIQOqqqJoHiKhAG6K3Pz9F+R9ddS6vej+GJ1NPhTNhS45
      OLKyvxZeTPQKDkDEAQ7BxpPbRCf+/Uk34+UIdmG/929FHOAFtkWJpMMQaEH65X+uiOlyuYym
      VWCEIqs/VHGpxP+1kraftl9p28+USMrn8xU5aTWTyxtsK5UZRpumg6pWYvFdCcsqIMtyRbZE
      2vZ+mytVIsk0zYr1Lk/bFi7QIUgsPCKa/F1FbNuOjSw99RDpfuShf3EstsVSiBfbPrhCTHaL
      T78aBVlj6PoNPOlFvlvMMNQR5eH0OoMX2wkEm/G/lryuDhsri7jrmgn5Dj5hpcqZOlYBtseP
      3S48ZxbCFarIeQTP50ABTE/Nc/2TP8VvbnNvao69yQeYrW3cvX0Hy9uE7ICDxdyjUdYyOkPn
      63k0/oTW/su019ccayMds8Ti/Dzeokqwu5lioYDpSHi9bkqGgWmDx+NhYWGBGp/Cbk4jEtQo
      mQ4erxe7XKRYNnG5vciOSaFYwu31YhoFHFnDrSvk8nk03YNLr4rQiOCYOPC/XXQkPKqMLGlg
      aQwMDeMZGmLv8RiB1vM4GzMki2WSagPvXK3nzue/IY2bR4+naa9/61gbWcxt4W3oxtzboWSH
      +P3vbuL26jRdGGTx3n3cPp1w96X9Y400qbSf3cW7PFzY4sL190nNjiP7fCi+KFpuE0PSaWuJ
      8u3X9yjpAT4crOfm4w0ujlyjvz16rG0XvNkcKIDellq+uPk1fkqEey4hJVefOUbz+iksTjJu
      ZPHW1WKZLkLhxmNv5OqTaea2bUqZLC19rcQ6+2kPFVkqlqlv66W7XmEm8/QyiBzpoo/+Lp1U
      KkVtYwfn+nt4MjFKRgvx1kg/yZl7+Jr7uBDx4o0GGeh02NncxG6PVktwRHAMHCgAX2MP7wUa
      MFHx+zw49X4kIHhuAEnRoOs8KCrhK5cxTAmft4dcNo/m9h57I10Nvfz9t9oo7SbYs2yWp0ZJ
      t/UwcrmFL+79hnSug0sjl0jqZVweP2E01Pwmm4aXtoY6dCRkSSLc0E59McVXN79hcOQK0Z27
      7GQkmht87CYzNPa0V206ccHRqLpZIMcpkUwahMM1QJmdnTzhcLCi59yYG6N+7X9UxPYzJZL0
      GuTr//JYbItZoBfbrjoBnASVml0CsSPsIF6XAA68M3Ypw3e3vmZyfu0nS5APpFwgkUwfVxsF
      gtfCgfJ9NHqf1oER5EKWYqmMS1exTRNJligaBsgaHpdKwTCwkfHZaRbiOTzFbYrBToKyQckC
      r9eFkc8hKS7cbr0qfex0ocjdB3PPfK+pMr+80HkCLRIcFwcKoLOrndt3bhFpPYcWH6Np6CKr
      o2OEogGmN7aRC0X6erp5tLCCyy7Q3btf1jO3tUleCzP6zW/ZyxQZeucGk3dG6Ri6yuWBjqMJ
      wLF58vA+/pY+mur8P3xdyOdxe7xUKEHxj6cHrOd4ivKhukbBm8zBzqEryIcffYiUWiVbdLAt
      k1y+AOj0XbxMdyxAvujQcX6QgZ4G8rniD39aKmSxXSFG3rpMrS/IwEAvmeQm5ovyGh6AbRZJ
      5XJsJrZxnDI7iXWmH0/w6W//H/enFo5mVCDgZwRg5pN8dfNL5HA7g33NjN++i17XgEaJsVtf
      sSPV0xySmb5/m7kdna7OBmKRIL5ojIZoPV0NAVbWd1FVSO0mCUUaUI84FivsLaNHzmGnNymY
      Bt/dfkCosZnGxhgdzZUZnArOBi89C2SkUpheL35NwypkyTgaIa+rUu0D4OHXv2WjrFHYy3D5
      /euk1nIMDnYyducb6rsu0BSp7DTok8Vlpvae3W+sKTJ/NtT1SrbFLNDzOfHFcAfhDv74sCke
      P69j6VbrhbcYCoWwjCw5RyHUvj8O6O7uJJ7OVlwAgtNLVaz8CoX2Zaa4/Ty9zC4QjnE+/Py/
      OU50RaE9/OwCv+/Tswiql6oQwEnj0VU6GupPuhmCCiAEcAgc28TMblbEtmWWMUuV2W1mWxbI
      MvYxzhNLqhvFfbzL3U8SIYBDYBspMqtfVcy+UTHLx48e7sHX9fFJN+PYqIqVv/slkn7H//nN
      F6QLZVZWnp+peXJy8jW3TFDtVEcPYGv0XLhAYXUNx3EwTYuNhUlmVjbx1XfSH3MzOvaYtaxD
      d3uM+6PjuKIddIck5hJJQrV1xOdn8cV6uHSu9aSvRvAGURU9gOOUSW7vYDkSNjaJzQTZTI7z
      V99BKiRZX1yh99p79LWEiU/dZzVlMD83R25nA7ummUafRN6SkHFEjizBT6gSAVikkkl2tpKU
      /rD+RtVcuDQNVVXQXQ5j39xifmOXQG0EtyoTjUZQVBcNDREkVccllVlZjr+wyqTgbFEV+wFs
      y8K0LCRZRlUUbMfZL3MkyTiOjSSBWTaRZAVFkTHNMkjyfqp0SQbs/d8rKqry8ppfW5jAs125
      QXA18f0g+MxGgk8CWVHQnyoioTw1rSf9IaeO9tTN0rQ/vnHyT37/0ufX/RWb+ahkAijLso49
      MZbsChybrTeBqhDASSOpLvRwW2WMV+laoNOCEMAhKJQtxtczP/mu1qvRGnSfUIsEx0VVCKBU
      yJJMZVE0N+G6EC9aglMqGsiqfiR//3kUyjZ3N3663bM37BUCOAVURd+4OT3BwvY2yb30ofYn
      Ly9MsZsuvvhAwZmnKnoAxzHZSyaRAjJb0w8Y29hGxUt3LEiwo5fM0iy6383M9ALuSBthHXAM
      vv7dTbKOxtDVS8zeuU3BkekeHqG0Nst6pkhfXx/zU4+w/TE+vDZ40pcpOAGqQgCy6ufy2+cJ
      SzI7UxOMfPAx+elHhJvrmJyYxe1SMGcekil5IJfD1IG9FaTmEd6P5Jja2iEU6+FGRw0Pn8ww
      PbdBtC5IwbTxuDT2shkMQDg0Z4+qcIEUzWT0yy+5PTYBLh+6LOH2eFE8jXjKccKNHbR39qIr
      4Pa48bi9aJEOlMQDvhpfItYQZn3uIb//boL6zn56m4JIioamyoCELCtVma1C8OpURSDs1Smx
      vJykre1oeUsnF1a5tfNTifSGvfyis/bVW1al06AiEFZV6Ed++AFCHpW/vPjTrNFqpXOxCF4L
      Z0QAr4YsSXg15cUHCqqOqhgDnDSlUpGCIWqnnUaqogdIJxa5P7VETbSN4YFOXve72LItLEus
      Iz2NVIUAMptpzr/zDmFJxi4Z5IwyHq8PxzQwyjZuvczYgzgXhnpxKQ75oonP58MsFSiVLFxe
      H4pTJmeU8Hr9OHaZcslE0xUKhSIeXwBNET79WaQqBGCV09y7eZPWph4C9jbJtIEciuHOrrGx
      l6ezt4vV1SUCkVrKyUWKlkyk4wLLY5/j8vjRYv2400vkLZm6ll6SM7exfG3UugusrG/ROfwB
      3Q3HX9hD8OZTFWMAVQvy7iefcLm/ndTuLmCT3N3D6/VhmwaOq47GoBsHyKVSWLIKlkldUxdv
      jwyiKzLpVApbksG28dS1cO1qPzVeH4pjkkrnTvoSBSdEVcQBrHIZSdOQgXKxgFGy0F0usEoU
      TQe/30fZyGOi7rtARgm3x4eEjabIlG2Q7DJ5o4TL40XGQdVUzKJBoWji9ftRf2aF3eLSApFI
      BL/v+NfCizjA8xFxgKdQtB/z5mguD9oPqUg1vv/o8vh++Fyjf7+oYX+4rMn7n3/8/nm2DkbT
      dFx6ZfOfCk6GqnCBThpVUZ+zy0xwGqiKHuCkKZkWS9t7ANT6PNR4RG9wWqiKHsAql7Gf+dam
      XH7O3LxjUyqXj/X8Rtnk8eomj1c32cmKgNhpoioEkJiaYveZb7NMTT1bvBsrz+iDqdfQKsFp
      oMpcIJNH331LImcxPDLI5tIUn27M0Dl4mXJinvhuloGhiwCszz3k8eI2PYMjdDSI+gGC51Nd
      AjAL7KYLFPJp4hu7RFvP0d9Tx9iD+yyvJwnW+En/wUXRXS4c2ySXNwAhAMHzqQoBSHKRbz/9
      lNbmVkDC7avBrWtsL83wRWKWcxdHsEqjZC0Nl0vF7XZh2zayJGHZYg2P4GCqIhB20swsLjOz
      t5/EvL85Smf01TfCfI8IhD0fEQh7g/C7dN4/v7+hxqWKfQGnCSGAQyDLEn63CISdRoQADsFu
      rsRvby0dm73LbSEuNIuB+ZtAVQggu73KxPw6tY1tdLc2vDAz3HFTKFs8WEm/+MBD0hTycKH5
      2MwJXoGqCISl1rZp6OsltTbHXs6gVCphWjaObVMulzDN/QGZWS7vf7ZtLMvEsp6NHwsET1MV
      PYDj2OTzeSxHwkyt8b+/uYta08xbbT4ebO0hF20G+zr47u49LKWGS0OdzM8u0D10na7Y6yjl
      LahWqqIHwDFJ7e7R0t2PmU7Rcq4PpZjCMF1cfPsGPTE/a/F1/NE2+rqbkSyZ8yNvi4df8EKq
      QgD+aDNDAwM014eorY+S200Ra2tHlw3ufnmTlBzl4qVBfE6eVN7EHwoR9IoVm4IXUxUuUKj5
      xxGjJ9zCxx+2AJDf2eHj88P4/1A95sb7H1Xk/LIkEXAf361yqVXx3jkTiEjwIUgkEjQ0NFTE
      togEP5/XFQkWryLBmaYqXKCTZrdQ5nf31ytk3YGK5aY+2HZ7yM17x5Dct9qpCgFkt1e4+3CG
      YGMXg12NOJob/TX2XbYDhlnJmEIlvdDn2y5ZwvOFKhHAzPQsfSNv45fLzN7+gri/nWvnO8ls
      rlCQAnQ21ZLJpEkb4LYzbOccuro6KKUSrCRSxNq70Eu7rGxl6ejqwqMJz0+wT1UIoH94iPv3
      v8X2NdIWCFBbGyG/tcR62iFgzfHEaGY5vsjFSyNszT7kweQyhq5TWI4Ti3hYTsRZu/s1e2XY
      Lqn8YqjjpC9J8IZQFa/CTNbg3OAwLjOD2+8DVHAcFHW/yottS7T3nKc+6GWvqHBjpBezVEJS
      dDRFxnEs3HVt/Okvf0l/a/SF5xOcHapCAB6XwvLiCrHuASIdvejpFTzRDuo0A8PTSl93A02R
      EJKs0NnSgKFF6W6KoZsbfDM2je4KceViJyvxDRBFowVPcYrjADZba3EKjkasseGVsj/PLa+x
      XK5MCT3btitWyd1xHKQDKtnU+3UuNPiPbPu0xAGqYgxwNGSiTa3HYsnvUviore5YbP0x1RoI
      Oy2cYgEcH45tYRZShzpW1r3IivbiAwVvBEIAh8Ay0uxM3jzUsaHuX+AKit0u1UJVCGBjdpzx
      xS28wQauXxnkhdP4mXXGEhJdQRMn0EJQVMAWHEBVCGA7uUd7Tz9tsSjbK0uE21vZXorj9cg8
      np1F88cYaqvlweQ0llLD1d5ajJKEVTKRKDMzPkaioHPpQjsPR+/jb+5jsLtJFMcWVIcABq5c
      Z25qgrv3E3itIoH2ZjbXNwgHPbRcvIa1+JD1dYtA+xB1pUXiGznAT2Z7g0LZ4dHsCl7FZq42
      QL4kUStT2SU4gqqhKqYHVmen2MkUsS0Tr25z79vvWN5MASZPxu+zvF3C55ZZfjLO9GKSQM2P
      m2F0j49gIEBdUzsRvxuP5jC/uFLR1TeC6qEqeoDmrvPUGSU0twdNdmgtFFE1neziPN397TR5
      /Tg7K7R199EZDeHRFUININMAikrTe+9SthzcHhehmgCK7hEvfwFwqgNhx8d6fJmg63A1B1w1
      jSi679C2qzUOcFoCYT8RQDabJZcTFRP/mEwmQyBw/AXyYP9BUpTKpFu0LAtZlg+MBr8Ktr2/
      PLxSQbZK35fvbYse4BDML8dZK1bmbWSZFsor5BsN+1z0N9U893eiB3ix7QNbPzX6FQuJDO6a
      CNffuoL3j3aglAsF9opFoqGfTz2ytLREe3v7KzbZoWgYyJoLTXn94/ZUvszfjG299vMehsHm
      4IECELyYA5+m8yPv0lhby41338ItGSwuLLCXK2IWcyzOz5Pcy7K6PMf8YpyyZZHcWmdhfolC
      2SK9k2BheY2SZbO+vo5tlYgvL5BIZnBsk0R8iYWldQwjS6HsUMrnKP1MFjfHNrn31RfMrGwe
      68Xvba2Tzh9vPTFBdXGo/mvq3teML26jBVvojSjotY3oZolMOoeamWXFH2Dl8RSxGpUnqpv0
      3Az1ERcTxX19bcw/ZqPgpTg3SrGnkfUti9zmDL5AH5s7adTCJq39Q+gHeAJmMYM30kQhmcRq
      C3Hniy8xfRHaajWeLG/S2dtHan2OtKExNNzOg7uPCLefJ+zsMBVPcf7SZXae3Gcra9EzfJX8
      6jjJgpe2Fi9e3cf9W7fZMxUGe9p4ODGJv6GLa4Ndx3aTBW8uh/In8mWJ67/4mHcuncOyJaIN
      DXh1nVhbB13NUSxbItLUyrmOGI5jIaleGsI1lMomsO+LBsP1+DQolErUhBvxuVQ8wUbs7Ul2
      CeL9GT94e/4hEwvrTD2ZJL0+h9xylXffusjWbpYPPvqQoLzH4moSs5imYOqoMuRyeVxuN45V
      IrcbJ6+18vGNiyQ2NsibKtdvXEYq5MluLDART1E2Chi2gypDIZd7TlVKwWnkZ3uAtq4uVODi
      yAij41MEY10MXDjH2KNxmjsHqK/zoDsB6lUXtqse3NDm8lAmw/R6meHhGJldnUitn8fjD3G3
      9dMecvj888/ZKrgYsi0kxU1LcwM/N1GRLAf5R3/xAdnlJ6T0Oqyp7/h6N0pL0MvNz7+grauT
      2hoXku5GcSyQlf0VnNZ+bn9Hq8NtTPDZNzZdQ1exszKaIqO5PLhDMWKBNdBcyNL+8aZti0DZ
      GeG1zwKVjQyLS3HcoXpidS42Ejmamutfe8rzl+H+1CL/bWzvpJvxXAabg/zzX3Q+93diFujF
      tsU06CGIr23gClQmh065XEbTjr5/QFdlajzP/3shgBfbroqlECeNqkhEApVJtlsqSRX7Rwte
      jBDAIVhPZvmP/7cy1edtx0aWju8NPdLbyF+813ds9k47VSEAx7ZYnH5EVg7S39uO+poHDLlC
      id+PL7/Wcx4Vn1tsx3wZqkIAiZkHpPRGWkIusG2KZRNF1ZBxME0TSVGhkCRR9NBU66Zs2mi6
      hmPbPxTMNi0LTdOR3+TRtuC1UxUCiKctLr/VhAwsPLrNwo6BJHtpqYGVdAGrCJfPhdl2Wlh7
      +GsWE1l6rn5MfuE2cm0nWn6VtazCjV98RH1AvCEFP1IVG2LCblhO5igaBTb3Stx45x3qXCUM
      vFy+9jZtdRqFMji2zXaqwMDQEHVeDV+4lRtXh+joPkes1sXW9vFVehScDqpCAK19A+xM3ePe
      xAL957u489WXqOFOAnKO21/epBRopT5cRzToZnigj8TmNpKi0NDYgASUjTxZQyIaOXoiKMHp
      pCpcIEX3ceWd93/4+YOP9tOOpHdcfDRQi+sPK0RbAOou0nLu+yP3i1E3dQ/R1H3086uKTDTo
      PbqBn8HBQTrG/WkBURvtpRCBsEMgSiQ9y2kJhFWFCyQQVIqqcIFOGie/Sfn2X1XM/s/tSFA6
      /wy5/mLFzn3WqQoBbC9MsCbVMdzRyOLjW5RCFzjX/OwuKDu1yobcQlMAsEtkDQf/cfjEjg1m
      4dXtPIcXev+OVZHzCvapCgEU0wab5gZmWy3rG+vIThdJeY/4To6uc33YmQRLGxk6gnmebBbJ
      hlx0NXlJ7ICZ3yWxtUOwsYM6t8nc/CoN7T2oxjZLm1m6urvxuariNggqQFX85yVZoz7osDq7
      iL+pjbwFe1txJiem2c6reMxN2jt7kaw8JgqFvTUy/jBbuy4yq4sE2zpYnJtjNZOTZf4AAAd5
      SURBVL3Ik80s+mqaZmWLcqBdrPs/41TNIDgcrufx/BJt4RqwCmzmFN577wpOwUCSFVRlP/1H
      rKWDutoA/GFyy+2vpbm5BZ/LQXbV8O4Hf8J7I32cGxzBW9xmIbF7wlcmOEmqogeobWtDDni5
      cuky/loPvW4VO2OzmbcZGmzA5aSZX9uit6uNVg1UXzOqItPrVtCpQQXa2jpwq61MzywTirWj
      2mW0uma6GytT+EJQHYg4wCHYWJ4mYjyqiO0XlUiSG64gBzuOZFvEAV5suyp6gJNGcoVQ2/5B
      RWyXSiVUsSHmxBACOAQl02JpszIL6V51S+TPYZkmsqJULDWi4zhHSl/YEPLi1t+MR+/NaMUb
      ztpOlv/wt/dOuhmnhn/zz96hvzV80s0AqkQAa4/ucH8jjSx5uNZZR76xn9bKrE0TnDGqQgA4
      Ht7+5C1Sk+Ok0mmm49+w4qnhynAXj+7exfREGeyIMDE7S76ocvXaRZYej5KyAgyfb+bh6H28
      TecY7hHF6wQ/pSriAGY5xdeffcpK2iHo1Wk5d4kmX5n58Un8fSPE/EWW51dQoz1ciKksPJln
      YinB7toMS4k98mV4hTrZglNMVfQAqhbk3U/eIwxk5h/i93lRMyqBiJeJ8VFULHpijah+L2pe
      RVcCBHw+gqEQtT4XKWW/LNKFbtEDCH5KVQigsb//h8/+9n68Mkid/SArRBpiOLKKW1OwkZFq
      +wlICu2NdVg2uFw6oZoaZFVsFBE8iwiEHYK5xRWWUpW5TaZpob5CgYyfo7IVYhzAOVKQbaS7
      gZD/519IokTSG0S1lkiybRtJkioiAMdxcJyjCeAwvK4SST9xgfx+P36/2Dj+PCq1JbKSgTDT
      NJFluSIP6asEwg5DJe/L07arYhboNFOJt/PTtitpv5JU+r58T1UMgk8zlVpMBlTs7QyVqw75
      PZW8L0/bFj2A4Eyj/OpXv/rVSTfiTSeXy+FWLe7cuo2hBfFhkrUsnNwOSUPF7z7s28ohGZ/n
      29GHaP4IWnGHW3fu4wo1YBV2QfGwu74M3iD6kXKYOmwvT7OW0/ArBt99e5uSK4SHHLmSTmEn
      Tkn341Zf/r1nlw3G731LfM+kvs7D2O1vSJZ1oj6TzbSCVEySMsDnPsrMjcPqzENGJxYIRuox
      91a4dW+CmnAD2b0dPB43G6txdH/NSyVGtk2DJ5NTSN4aPCpMjn7Lyp5JfSREfOYBj+Y3hQt0
      WOanp+gYeoul8VGC3Z1kVYfNuQ0u32h8CSs2huPlveuXGJ2YZ7Oc5dLVyzwYf0R7gxd33mBh
      p8z1lqP5v2YhxcLKAiWfHycRp234KrPj44TPhdnOl9hOprja0HIk26tTY7jbLtEVdrH15AH+
      7hHyy49IB8JsJE2szDLnL14+km3IM79W4tpQE48XVinvrnPtUg8PnswTdJVRzAybBRexlwzn
      m/kslqxSNIrkM/MUanrxZxfZ2tVY2tHpa3SEC3RYHFkn4PfQEPSQNcs8uPkF7tYe9Jf6nyg0
      Rv1MzyzR0d2K6gri8/oI6DLF/B6f/v4uvf1HrE7pWCwvLNPZ24siO5i4qQv6CHl1imWD29/c
      or61HeWI2bG3UhnWp+7w9d1H7BZkmur9hEIByqUyj+7eRK5pxqsd9XHy4Jd3+fK7SYK1Ljz+
      CN5ADW7Hopje5Pd3ntDV9fLC1Wsi1Ac9ABSzRSKxKPWhINn0Fv5oC5FwSAjgsEh2iVQmz/pe
      noCqcfGDjzCWJsm/VDlJm6npOTrODdAQCmIae2RzWdJFG5c3xJ98fI3J8ckjbdS3zTKbWxuM
      3RtjamIakwI7uxmSuSIuzc3b773L+sIspn20gF40VEvnpRsE5QKaUmJlI00ymUJzaQy+9QH2
      3jJp44gpXMo7ZKQYH749SGI9RT6zRS6VoiApuGrq+fhGP1NT86+UwMAVcLO5mmAjuUsg2EA6
      scTmVlJEgg9DIpEgWuvj3p1R6vtGiHnAUBQ8ToHtnEYsetggWYkHt+6wnS9S09jFcJufO/en
      GLhyA81M4fLWYiTXINhE0H3Ed1M5zfqeTDTgMHpvjNj5Eeo9JYpOALW4RU6PEPW//Py6bRqM
      3/sONdzNQGeEh3fv4Gk6T2+jxk7eQ42SI1lUaAwfoWq94xCfe8jMep6LIyO4jE2+m4xz+epV
      yrldamvD7CTi+CJNL9XLpBML3Hk4B2hcunGD5Ox9DG8zgz3NJOYfsZRWhQAOQyVzgwpOFuEC
      Cc40QgCCM40QgOBMIwQgONMIAQjONCISLHgKm7u//Z+Mrhj469v5p3/3gx9+M/PVX7McfJdP
      hk7XbJgQgOAn5HN56mI9vP/OCKn4FL++eRdPQz/9OjhWka9/+79YTOS58fEHPPr6M3KeFv7y
      77xftcuuhQskeAqZd/78n3Cp1cV/+av/zmp8kUze4Nat29gOGFsL/OabccrFFCvxbfb20pQN
      A/Okm/0KCAEInsLk7ue/5pv7E3hDUYzdbcqql6DXg6Jq+MKNtEX8KJ4gAY+C1+NmeWqK/Ek3
      +xUQkeBDICLBpxfRAwjONEIAgjPN/we0Wuqa197+pwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Ex2 Filled Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Ex3 Symbol Map' width='192'>
      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
      H79xxUvrvvMMAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Ex4 Pie on Map' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Ex5 Scatter Plot' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Ex6 Time Series &amp; Forecast' width='192'>
      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
      2prarMTJAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Ex7 Time Series &amp; Forecast' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Ex8 Dashboard' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29V5AlV3rn90t7vStf1RZodDfMwI/BDIdmhjM0K4rDJaUVxZALKRSh2KBi
      Y0N60tOsnvSqkIkQl+IGQ0FtxO6KOyK5u6LBYCzcoAEMGkCjfVd3+arrbd40Rw+3TlberLxV
      t7rLNer+IxCozpt5zpcnz3fO548ihBCMMMIJhXrUBIwwwlFixAAjnGiMGGCEE40RA4xwojFi
      gBFONEYMMMKJxogBRjjRGDHACCcaIwYY4URjxAAjnGiMGGCEE40RA4xwojFigBFONEYMMMKJ
      xogBRjjRGDHACCcaIwYY4URjxAAjnGiMGGCEE40RA4xwojFigBFONEYMMMKJxogBRjjRGDHA
      CCcaIwYY4USjjwHeffNHXLlyhet37vvXhBBcff8dfvLO+/ICV65cAeDq1auRjdqtGuV6e9fO
      1+7fpxO69t5PftK75rn827/8Hu++8xbXbj8Y+oVGGGEv0IP/qLW6fOtrvwRC8MHP3mVsLIM5
      do4vvPwlXn/9Df++crkMQLVapbh0j2v3VjDiSRKaQ6dtceHMFCV1iqXb73H1xgN++bXnubNY
      JJZIozs1XMXAFga1O58QW3+WF86f4tadeyhmMkCNwEzmuHzhLB/eWCGjdVhcXmXyzGUWb3xA
      Zvo8XmMdV03wwiuvENMOZbxG+JyhbwdwrSZXrlzh1vwil58Y5/994yqzheS2hzZWFrhy5QrL
      62U+uXWfr3/tNbrNKuViiRe/9Box0abRcUjFDV7+yte4eW+JX/jqV2jXSzQ6Lq+++kWcTp25
      ubO8+OpLNKslPAH35+f7+lldnOfm/AqpRIxisYiqGdy7d4uOq/HScxdJJBO0m3U6XedgR2mE
      zy36doBCoQCA63l8Nl/hP/q1l7i7vE51cZ5yucRKscrMWJaLzzzPq6++immazI1n+MmbbxNL
      5UkYENMUvFiKtCq48u51zl/SuHh+jp++9Q6J7Bgx1QMgl8sxk4/z0dtXmMwYKKpGPp8nk8ts
      cqVCoZBHuDZmMk+3XEaNJchl05i5DACaqqHiYNkeJA5z2Eb4vEAZVYce4SRjZAUa4URjxAAj
      nGg8NgwghKDb7R41GSM8xrAsa9u1EQOMcGIQNX/0iPtGeAzQrj3ge3/xNk88+yyFpMbpUzPc
      XdwglRvHrq4yNT3J8lqZy5efenxWuSPAiAEeY5TXV5ir5HnnRpMPPrnJ5HgWa2GBVMzgrTd/
      xrknzzJ1/inGY0dN6fHFY2MG9TyPVqtFOp0+alKOBVzHotV2sKwWayur6IrN258u8Nu/+S3W
      FuaZnpkBRSGZyWGMtgAA6vU6mUym79qIAR4BlmURix2f5XVEz86IYoDR2vAIOG5K+YieveNz
      rQMI4fHZJx9TmD6N02lQGBujVK5RK60yfeYCqrCpV2sgYPbJJzAPkbZb1z9BTxaIqw6p/ASl
      jSLtRoXpM09SyKYOkRK4+sF75KbPEFccEtk8hq6zdOc2SjpHs1biqUvPEjcOL9rQtRrcX96g
      XG0yOZZFUyCXz1GuNlhfW+W551/E1Pdn7f5cMwBCYCYzZJQa791fJ1dpUcilyI1N0qkXyeay
      rK0tYrsZZp88CgI9yqUiSyvrgEFucox8Znvw4UHjzNmzzC8uk0xlWF7+iHR+mnZH4czZApqw
      KVcqzE6OHxo9WixFdf1jktk8tt1hfnGNsYkJFM1gYmISQ1P2ra/PNQMoqsZkIUMbkydOCQpT
      M5iaitWqYys5MtkkM3NnyGXHDn0gxscnqLZdCuOTzKWzlMs1pgppKvXWoe8Aruty+uyTuO0a
      c3MvU1xfZfbSGWqNFjMzs6ActqSs8OTlZ4kZGugxTN0glcnSsQU6NrYrMPX9YQJfCRZC0Gg0
      9qXRg4AQgk6nQyLxcGGfUtdXlIcfOCFE3/OtVotk8uFX7HB7I3oOlp52u83U1FTfPf7CpygK
      mUwGx2px+94yFy5fOFbbg+d5KLf+FWmlHn1D5hzKU78z8HkhBJ7noWkPL8s6joOub42Ks3KF
      2Pres9W0mVfRJp7d1t6j0rPRaPPZSm98JlJxnpsbe6T2HpUeUblNcvXdoZ9XL/0DlHj+wOiJ
      wrZf28UibVWhVqmgCkGltI5qxLE9hZjS5f5ikUvPXkLf/C2WzOAIjTNzU1HtU1u8z43iGrMz
      T+FYLSZzCRq2gtNpki/kWV8vETcgkZugtL7O1ESOhiVw2lXGp88QCxqx6wvgrUe/iWoMPzL7
      BNEp49Xv735jCOrYpQOgBizHY6PRSzI1taM38Am7CdW7wz/g2QdHzABEsIfGhYtnWPrkI2pd
      wezkOKqqogNdSyWTjLG6eJ92VzAzOc7Sveu09cJABgDQYymW7t1mdiLD1fsNCjGorCzSmj5F
      bu4MxfkbLC2v4nk6a8VVkskcmtvCTI8Tyx8fu/8Inz9sY4DM3BwAl597YagGTp8+vePvyYlx
      ki2b8y89yfJqkefP9naAc2fP4Tg2GxsbFMYmmE1lKJcqTI1nKTdt6Jpk0odvERnhZOHEeIIP
      QgeI8iw+Snsjeg6fnuOk5+6K732wRNN7SJIFCIa3KpwdS/Kbz8/seM8bHy9zbe3ew9HDo1k5
      Ls5m+e1XTvVdu7vR5O33N/bc1hOTSb797PRD0bET7pfbfHRrgNFiCOyXFShpaHznC9Hvd+AM
      UC+uMr9WxtQ1Upk8Jl3MVAG3U8dWTNxOjbHpM8SHiNhaqrQpWoej3BlDKJFrtQ7Xl2qHQM12
      JCPqwDQtlzsbzX1paz/Qsl0eVMKVnw4f6R3e78BnU8eyOH32HLqm4zkW5XKJW7fvUFm5S93W
      qVbK1ButgyZjhBEiceA7wMTsGRbuzzM9O4euQk1XmUrmiGkuWizNup0newTu/xFGgJESvCc8
      jkreiJ7PkRLsffB/4HqlrQuKhvZL/+OR0fPO3RL3asVd7/udl2aZSB98XPxitcPH9/p1gLls
      nK+dyw944mBxY7nGT366uOt9l2Yz/OaLp3a97yBw4AxQW7zP3abNU2dPoQlBp1XHRcNyBHFD
      pVWv4aCgaSapZAxhd1DiWax6iVSuQLlS59yZnm9CVO6AtbDVuHq0/Ftq2twt7h7zbjneIVAD
      bdtjodpf+SC2T2HDD4N6x+Hm6u5WoEzi8L34EoczgxSVleVlXLsLqMRiJqqmUW12aNbKEBsj
      k1Kp1TqgqKjWEk43TmnjJh0t4TPACCPsNw6cAZIT03whFqNRWqfj6X3x7p7nsq7qTMzMoim9
      BBZFUUG4vPvmmzzxzPOk3cNZPUc4mRgpwXvA46jkjej5PCnBP/+nuKI89P3KuW+jnvnFA6On
      8YM/o/3ZD4enx0ww+Y/+5MDoEWtXcd/+13t+Tnn6d1DP/MK+07Na7/Du8t4dcxJ78QTHdI2v
      Pzm55z4OXgkur/PB1Ws88/TTKLrJ6sJdzl44Q3ndQ9EcCpkYljCYKGR3bUtU70J3d6uCj6mX
      H4Hy3eGsz+PceGfo+5X4wWZ6CauGWPtoz88pZ79+ANRAx3FZa2wvR3gQSDxkzvKBM0C2MMG5
      s2dpNyosF+ucmplkZfEBxaU2WiqO5eTR1NhQDDDCCPuNQxGBZmZmsFp1ErkpnFaVU2ef4cxp
      j+XVNQrZFJ4WPwwyRhhhG05UTvCjKsGu6/Y9/6g5r+H2RvQcLD1D5QQLIVi4P8/MmXOU1tfQ
      FYXc1NSRa8ue56Fc/79JiWrk78rpX0aZe23g8wdhBfrRtVWub5R2eGILv/zMFK8+0V9aZL+t
      HAuVNm8sbXc8vXI6x6XJ3fWP/abnxnKNH3+wu872n339CcYiPOVHkhO8sXSfzPgUNz/9mGqz
      hd2xeUoI7GYNM5GmbXs8eXZ4t7UQHm+9/S5ffPkFltZLTGST1C2B1aqRzeZo1CqMT82wsVFk
      ajxLre1itxoUxnLUWi6zU1uJ3aI2D85qdEcTXxiapv3Cet3i5spwVo4Xzh58OELL9iLDjy8O
      MfkPAvWOw82V3T3B3SP09WxjgHg8zr3798jkJ8mPeb3ydo5LtVrFWl2l3NX2xACN9Qc43S6f
      3VpkPAO31gQpOhiGTqWyTmW9xOJSmbNzk1xfXudSweDdB6tMNjvohtnHACOMsN/YnhM8Ps3z
      49uzZ+ZOPVw4gpGd5hd/6SyrC/M0MZkwOxipSXLpGEKAaSTI5gokYiZ5p0Ot7fLkKZdMLofl
      HH1lgxE+3xh5gveAx9HTOaJnj57g4uJd7m20uHjxAqYKzVoJJZalXV0nn9RYbJhMT2RpNJoY
      wiJVmCYVP5xovo8W1sllOjx3auJQ+tsN19YarC92mEqbfOl07qjJodRosdywuDR7PMZnsdbh
      xoOeTvLCbJrzheN3mPN2EWhihtT6x9x+sExKsUkkEnSqy8RiBksPFrD0cT4prRLXdTKmwNVT
      pOKFgR34SvArL1MurrGwXuXVFx9OYa22LRTjMGs474ya5bLS9DDU4yGqdR2XuuMeNRk+OrbH
      cr1X7OrC+PGb/BDBACoCszDL6XySasejU11nau48C3evc+GZl3EcgaoJ1jaqxFWHbHbnLU4q
      wddu3uP0+TNMe8djsowwAkQwgB5L8uS5nvMinQOme9tp7vmX+u47f2Y405pUghv1OqlUAqtW
      eUSSRxhh/zBSgveAx1HJG9HzOQqHbs3/FKE9/LE7MrxWS02RPPOVR6bnr9+/x9UHj1746ddf
      Pc/Xnnn0rLeFaoePbg8fzvLrlyfIH2A64pUby/yrn/70oZ+X4/P733yOr3/hzD5StoUDZ4Dq
      4l1e//AaX33lVTw86s0OhaTOarlJIWUSjyeodj2UTo1TT1zesUCW29rA4eHjy33sUy7xarnJ
      J/d3T4rfDV+8uD9V2dq2y4Pq8IWobPdgN/9Ko8MHt1YeuZ1vvfrEPlATjQPXSBU0zp87RXll
      mbIlyCZjVKtVFODjn19hZWmJ3OQMi/fvUmsdTuz4CCNIHHw+wKmzvHLqbP/FzQrUzz/3tH9p
      8lt/b9e2tOQEuvbweQO+CJTYn/CK6UKK584+fByLpGc8uz8mwoShcSY3fGj5fp61FYV8Os7L
      T+1cX3UnyPGZyB1c4bSRErwHPI5K3oienek5cBHIsZpcv3GDboR/ptPZW+HUv/psnZ8vP7zS
      ud9490GVv7356DrAfmGh0qTcOj5n894ptfj+7eHCxY8KBy4CtTaKtIGN1SUa7S5T43kUHNbX
      SnSFxnQ+QbXjoblt9GQWq14lnsrgKRqnZwefOjPCCPuBQzODdl1IJ0yqxWUUND64eo3zT12i
      UrWodjxM0UVr1fn42jzPPHOBYt0ZMcAIB45DUYL7fcg9BfjsheBBcYJ6vUEmk+GZL7wysK3x
      pEHaPLwTy3dDJqahxo6PKyWma+gHrNjuBXFdI28cn/GJwjGhThlKWfrq2TzpY3Ru2DNT6UdS
      8vYbk+k4mdjR1dkMYy4bO1bjE4VDUYJv3LjN8YlRHOGwcK/U4v+68oDr68e32MLhKMGKSnlt
      GctTaVVLdCybiakpGrUaqXSaestiLG1iKzFa1SJGzCA3Pks+fTxDaEf4/ODgY5MVnQsXn2Bp
      /g7Xbtxh4d5tdDNJp1bkw08+o9TokknGuPnZxywsr5FIZ6isLbNWHEWNjnDwOHgleNPr+8KX
      tteefOLSc/7fc3NbwWCn5kbl0D8PiBsq0+kYyYcsW3gYOCZK8AifR8xk4lycO/FKsOUrwEI4
      dAMu4b16gm+uHB+vK8Ani+tUWkd/DKjESrVOrX186LldbPFH7y5QbttHTcpAHLwSXCyizs1S
      X7iPltCYv7nBuQunqNSamKpAEQ5js+fIJI5Pru8IJwcHLwIJh9u352ncv46Wy6GJGLevf8pG
      w+XZy09QWl6AxBiZxPjubY0wwj7jUDzBLwJcOB/5+4Unhk92SJjHx8kDkIoZ6MekIgSAqWnH
      ip6EoTKbiaGrx8c7HcZjpQSfHjteZwicn8iTjh8f0W0snSQZOz70zGXjXD51vJXgA2cAx2py
      d2GdC0+e51EXgv/19VsUrf4V7tJ0mv/6l598tIYfEv/irbu8dXd7eHbMUPnf/suvHjo9ny7X
      +Ms3to6RfXYmwx98+fSh0yHx5rUl/vj7twb+nkuZ/PF/++1DpGg7DkEJrlKYivPZjXskEga6
      10GJpXHaNeKJLF0hODv38FlDI4zwKDh4gVE4LK9bxESNn3/8GfVajXqtyM+vfMjS0iqTM/uT
      ED7CCA+DQ1GCn9/8+8LTW2lpz1x+ds9tnSokyLn9JM/mjy5eaCob5/LsdrnOOKLT2ZOmzhPj
      W9GyU9nth04cJrJJk2fPDs6/Th9STdmdMMoJ3gMex5zXET1HXBhLuDb37i9z7vzZR1aC//La
      Oi2ij0jaCadzMX7t4v77Gf78Zw94Z34f6hRF4Pe+fIZffW5vutHdUpu3rw03Pk8UEnz7AMYk
      iPfuFPkXVz49kLa/+3svMJ179N3/wBmguLpMq9vlow/fZ3Z2jmKpwsTEGK7rUqvWGRvPUaw0
      GUsZeGaamYnBlaZHGGG/ceDCajKTwa5uoCez1KsVHKfJwnqDfFzhk6vvcWe5SqVS4fqnH7O8
      unHQ5IwwQh8OfAdIZgq89OXo0xt/9z/8AyrFNUqNFE9+aXAusMR40iCr7d3RUzig+pcTmRgX
      Zx5+DZGFn6JQSO79PeObntdhUEgcvA80kzC4OPPwOsBO42Puk6FhpATvAY+jkjei54iVYKtZ
      5e6DVS5cukS47q3XqVPuQCaTYZhiD6Xrf0dT6YCiMv3yPzgYgveAzvyPoXkTAC3/BMnLv32k
      9NRrJZYfXENVNZ56+tUjpQVgo1Lho3v3tl1/+eJFkvHhSzgeJA6eAbpdXE+wurKCvnnmmDDS
      WPUi2bhGgzwb68vcW1xnIqHw1BdeJZc6Wvv1CCcHPgMIIWg09j97v91u06wWaXXaWFaXlOGh
      xhVatRoaGWwaOIrH1Fgeza6zuLyCOr3defKYSGojPGYY6QB7gOu6fc8/qowbbm9Ez+HTc3yC
      xw8B6iPGyj/q8/vd3oieR3/+sWIAz+2yuLyGZVm0222G2bpa9Qp35hdoVEtUGz0xrN1uD9Wf
      EIJyuYLrWCwtr9Ft11krVrf6F4LFhQW6loVtW1j27uW/PMfi5s2btFpNVjfKflvDQVApl/GE
      x+LCIp7nsLi00jceS0urdC2Lrm1h2bufXeDaHW7evEWr2WCtWHk0elybxeXVPnrWV5ZoWzbd
      rkW7M8QBKMJj/s4tao0Wi8u9d7PabdwhBZVmvYZlu6ytLNF1XJYWF7E6Ft1uB9vZPh7ad7/7
      3e8O+bZHCiEEd+/cwUSwXCrSaFpMjOV3fW7+7m0SmTz1ep12o8b87ZukxqZJDpHIIpwuS+sl
      2vU6omux2mjjWS1WHtyBRA5RX8XWUyzducNCpc6pmaldwz0a6w9YaRt4VoOu1WF9dYGuMMln
      hxDthGBlcRkFi46rcfvWXfJJldsPVrFsj5SpYLg17t5dYqnS4NT0JAPM6D7qa/dZt0xcq0G3
      02Z95QE2cfLZIU4B9TyWl5ZRRIeOo3Ln7n2yMYU7Cyt0HUFSF9Q6NuW1VW7P32Vq9vSu9nvX
      anJzfpm44iE0wfz8Eo1Ol6nx4SIE6tUilmXR7DqsPrhDLJbi3t17rNdbjOezxGP9BpbHagcw
      NIXVUo10OoPq2XhDLApj4+Pcv3+fbruB5QjGx8doNoeL3/E8l7WlBTqWxXq5ju51qbcs8mPj
      dJpNNMNkbXmZeCJNPhOj03V2bVNPjaE2lqk2LCr1NrncGLbVGooeIQSV0hrleou1lRXSyTgr
      6xVy+TyKY4GisrpRJR5Pk02ZQ9FjpMcQ9WVqTYtKo0M2N4bdGZIeoFxco1Jvs7a6Siphslqs
      ksvnwbFAVamW1lH1GOOFPK3WEDuLbpCLq6yVaqyuFUllcpiKgzPMxwYa1TIr62WqxTWMeIq1
      tVUSyQzphI4VcYj4iVGCDwKPquTtN0b07IwTrwSPMEIYIwYY4UTjRDBAu1Hh+u15AITwqNZq
      R0qP53b59JNrvlxbre49x2Ff6XEsPv30+NCD8Lh1/RqNjn3g9DxWZVEeFh+9fwVz4iwP7t6g
      0VXYWF3E1E2y4+NoRoJLT57dvZF9xOrdT7m/3qVQWGJxvUKnViSfSWImUpRbgq+8vPd00UfB
      0u1PWCh6FJYXWSrWaFc3yKWTxJIpqh340ovPHCo9VrPE1Wt3yOQLXP3wPu1ulydmx2i7Go1a
      jedfeoXEPp0UdCJ2gFNnz/LJzz/knbd+wnsffkyrtMj3f/ozFu/f42cffnLo9CQLMzjFO/zg
      J2/yw5+8g3BtfvDG6ywsLvHWm29x2JU002MzdFZv8cOfvsmP3nwXz+7wgze+z8LCEm+9+Q67
      25L2F6oRZyKt8qMfvMHrr79OtQPv/PSH3L2/yAfvvkm5uX8Hqo+sQI+Ax8HKcZR4HOg5ETvA
      CCMMwmPDAIqiPFJg1EFgRM/OeBzoeWxEoBFGOAg8NjvACCMcBEYMMMKJxogBRjjRGDHACCca
      fQxw89pVrly5wvU79/1rQti8/+67vPXW27RtgRCCa1c/4N133t7ZISE8rl79eMfrq/du8dm9
      RQA++/BtVirH54C3EU4G+kIh5hdX+da3vgVCcOvWLebGUlSVLC9/6UvcfP9HzK/VuDybYH6x
      xK//+jexGxvcW9bJUaPWdVlcrYDTQVcE5595mdvXP6Feq/HCF7/C0u1PKNUtXvniq34szvrC
      CguazuVzMzy49QlW/jLlB9eotj1eefVp3vnxB+iJBF/+8qtox/eUnREeY/TtAK7V5MqVK9ya
      X2Qi6fGnf/lTZgoplu/fZqVqEdNAUQ1efPYcb7z+N6y0DW58fIWfX7uNWl9i9uLLNJtNvvjl
      y9z69B4TM6d57csv8v7PfshK0eXVL5zhvfev9xEwnlS5c+s6Y2ee7tHgutQWr3F7pYIen+Ty
      lMrH90enxo9wMIjUAVzP49qtBV577jS37z7gwUoJ09ToWjZCdHmwsEEyYdBsdJnNGHT09GZD
      Sl8pu9LaEm+99RbTp5+hXVvi3feuMj3XfyDGhWef5fs/fp+Lczk8z+LW7fsYhoEQHvduXePK
      Z0ucmTw+4Q8jfL7wSI4wIVx+/Nf/lqd/4TeYyuxv/U3HXudn75f46lcu72u7I4wQxMgTPMKJ
      xsgMOsKJRl9pxG63e5S0jDDCoWNbRlgs9uiFaWUZwlqtRqfTQVEUVFX1FWQhhF/r0/M8/29Z
      Dz7qPong78H7FEXBsizi8bj/nKMa3Ky6TCQ0ZuNiYJuqqtLpdIjvY8ViIQSWZWEYRh+tAKlU
      im63i2VZfdc0TaO2aSLea1nA8HuFq6JFvXcU5HPBbwK9SMpcLodt29TrdUzTxHH2nioTj8dx
      HGfbs57n9X1bwzBwXZdYLNZXxiY8jzxv9+Jf0D9vgjgQEUh2Fp7Inuf1vagMcdY0re/FoJ8x
      hulLCIFhGHS7Xf/a9YrLnarDe6sWzg6vOuwg7gWDxgCg0+n47ysXB/nfsAhP6PAHjlo4wmO8
      l/Zd16VcLtNq9WoG7XXyK4pCOp1GURQcx4mkX14TQviTX1apk/QPom+3vqMQi8UOJifYdV1/
      oDKZjL/aSULkhJMvpCiKzxhhooMTKPjvqHvk391uF8MwGIup3AOypoquwFC1FA8IwY8lhPBX
      QtftFWsKHwSx00SVHz98z6BVbi/YaTGQEzO4O4R37UEwDAPP8/wJPej0F9m2ZJIgPcG/JcNE
      IWpcoujJ5XIHlxRvWRa2baNpGvF4nG632zdwqqpGTuog0cEB3um4nOD9mqb5W+yphML0uTim
      CgjPvy/Ydhi79dPfJ4CybXIH3zHq/eROmE6n/YoHnuf5zBBsJwhVVdE0Ddu2MQzjoUSQgzD6
      hVfyKKiq2ldzNPxNoyb0TuMR9R5RC2IUpDinadrBMICqqmSzWYrFIrZtY9tbad5hsWAQwpM/
      eF2243lepNgg5UfXddFUAcp2WXo/JoLwPJRQ/8GPIBeAILPL/0sZX1VVPM/zF4wd+xMCXdfR
      db1vckRBijvh+3ZaOXdDcOEIy+y7Qa7owbZ2oh2ixRxN09B1HU3Ttol8UmzWdd3freT7y/tV
      VSWdTvu62YEwgKIoGIZBoVCgWq1uW6kSiQSKotButweuxoOU3/A2OAi6rvtK6F5W9b3ci6IS
      nktBBg0r7MF3arfbdDqdzWYUbLuLt0v9SyHEUJWbFUUhn8/3wkpqtX1b9aO+0bB6i5wDO4lN
      Uf8O9qnrek9s2RQXB+k8QV3Hdd1tuk/w7wMTgRRFIRaLUSgUqNVqfRYP27ZJpVIIIbBte8et
      fCcxCbbkwqjBkC8eNanDq0xQ3twTEwygN/h3WL8Jv5fwXMKiFPQ+uKqqezZPm6bZp2TvlQF2
      26EHiZG7jVlw8Qp/V1VV0XUd27YHijfpdJpYLBYpUrZaLWzbRtd1YrEYpmmiKMquh+wdqCNM
      7gTZbLbvoziOQ7fbxTRN4vH4piVob1aQQRMq+O/dRIrd2tuLpUFCWnPCVoudVjtV1YHtvycS
      CRKJxJ5PSvQ8z9eDwgw5zIQN717he4PtRC0gUdhtHGOxWJ9oE5bnNU3zJ3UUvclk0jeZlkol
      KpXKQGbqe1Zs3iFEzxG2H36AMIQQOI5Dq9XyrUPQe+meNaTL6oPPyBTmQDW3Tb7ggARlz/Aq
      Ev63tAaF5cUo06RkyGB/4Q+6VyuLVFajxLkwpGIsUSwWMU2TmZkZHMfp20GHhdQvJMIMIHWT
      vTL5IN0LBo/RoH7C90ua5TVd1/1FQH5HaTCQdMhv7Lou3W6XTqfj75r5fH7HOX0oDCDbl2Yw
      27Z9+VcSWSmtUXMEjitIIHY0l4UHMvghw1u+pmkDTazhybCbmW2vDBAUE4JiWRTCE0TTNF+E
      lKfR7BVSYZQWuJ0Wlb28U5RIJ38L/j+MYD/hbxb1TDKZJJPJ+Mp8p9Px509wbIizuSgAAB5x
      SURBVBOJBNlstm+nDPcVBSHE4TFAsNNut0uj0fC51DRNOp0O98oVXE9wKl8gZWoDzZRR5jJN
      03z6oxgEtj56lAl22JUw/JGltUFaHsL3hduO+hhSXJMfUN7bbrdptVq+/NtoNPosGDtB0zSS
      yaS/A8kJ0Wg0sG17T06lsCI/SEcKX9N13XdOhsWxWCyGqqoDd7ZkMunricGJH+5L0jI2NrYn
      T77/3YZ+Yp+gKIqvD7TbbZLJJI2Ozf/8vQ9ZKlbJJE3ev7HOt145zz/8rRcxtejVP0oEGtRf
      cGcY1lY8CLvJ0Dsx1k46jmSiYDvxeJxYLOZbc8bGxiiXy75+MGixkvKw3AGCK31QN4hi5jCC
      4mZw5R/m3WOxGJ7nYZqmLwZLeJ43ULcxDINkMolt29RqtUiTb5BWwzD2fKCeZIBD3wFkX51O
      h0ajQavV4p/88/f44Pbqtvtee3qO7/4nX420HgT/PWgHCMvycvUPm8UeRg4OQvYftD+HV1jZ
      fxTkDiBX9nAYSFhEaTQafUq+67oYhkEqlSKZTPqysJz8s7Ozft+2bVMsFiPFmEGiUHixiTpu
      dpB4FX4+bLULLyiqqpLP53Ech3q93qdsS8gJ7zjOlkf3IQwF1Wr16Mqj67qO4zjcXG36kz8V
      N/gvfvtl/s/vvU+n6/D2Z0vcWKry1Exm2zYs/9Y0zdcnZJvy4+w04QaJPnsx64WfdxzHN8EF
      t/bd2pEm4yjxIooxs9nstt/khLAsi1wux9TUlH/twYMHZDIZCoUCuq6Tz+f93UAyU9hqFRyn
      8KTd7X2irE276XHymhSHpQ4oLTnyu0tLUCKR8I0WD7P6NxoNLMs6GgaQEzeRSHB76Z5/vWXZ
      3JtfRVW2BufOcqWPAeTzAJqmUq2skslO+XJtlOcz6u+olSX428OKSJZl+XK6rut9CuxObbbb
      bV+GjZpAYfqCv6dSKdLpdJ+1S/6u6zpnz56lVqtx//59pqenfWYLOtXCi0BQ3j8MyDlhGIYf
      /SmE2BYkKCUVaQGS8v9eIXfMI9sBpC6QTmwpdEJAUrGZzsW4u9Yzl6YTg48zdV2PXH7GD7mG
      rRUjrJT22h9OyX3YyS/RaDR860tUv8MokFG/RTFtNpslmUz2iSRSPOp0OiSTSXRdJ5vNkslk
      WF1dxfM8ZmdnicVivpIabDdqt5XYyQI0iGmG2QF1XSedTlOv1ymXy7TbbQzDQFEUstmsH0wn
      4TgOiqKQSqX2/L0URfEXmyNlgFgsxleeniNu6lycTXFmIsm/fHvJvyedMHj5wuSO7YTlVpkP
      EFwhwhj0kYImvkdlgijv9k47i65rQ626wTbS6XRf/oOkv9vtUq/Xt3lNFUVhZmaGbrfLgwcP
      SKfT28SHQeJK0IIW1HHCsn8U5LeIei8Z4GeaJs1m098xx8bGfBt/sVhkfHx8m99CMs4wCOqK
      wXc80pRIVVWZyCX5737vS1xfrPP6z7cUYUNX+e//g6+QNLUdJ2OUXCpfMCgOBV96UKLJw2z3
      UQrfThjUR8dqIYS3q/jV++gasVjPkibNmtJOXqlUKJfL2LZNt9ulXC73rfBSgZ2dnfVD1AeZ
      ZuViEFxIdrIY7cQMUcqupmloioPTLvrOq1qtRi6X851bO4ljQvSSjlzXpdlsDgwQDBpdwm0c
      6RlhUu77+rOznPvDb/PX791jpdxkbjzNb7x6npl83L9PIuywCuYWBK0nkgEi4+yFg6bp2xgk
      uNINi0HK3l6ZKWYm6YVDbNEQ5YkG8DyBEC6W1csek/FU4WekIl6tVonH477pWTqSTNNkdXUV
      x3GYmJjom2zB/sKQ4l2UlztIa1ivCDKSz3RKDCPZy42wbdtXbIPPDdLXpD4gv2O73fZ9D/Jd
      ZHh8vV6PFIuPxAwafIFWq0Wj0dhUfFXcUFx8MKhLURUq9QqFTKHvnmDIQXACSPNglFgT/kA7
      TfydJoTcWqXJMWq1km764DtFteM4Tt9Hku2Et37HcSLbkNeFENGHQQyw4lQqFeLxOPl83u/P
      dd2BsTSSFvlOUucK9xN+NvgtYbv4WiwWKRQK2/orl8uMj49Hmml1Xdv0l/QWy0azged5GHov
      Bk1VVarVKu1223cOBvWGIz8lUsZ0KJq6bQIHP5RMdcylc32ufSnzRsmC0k48CFFKXhTCK1Dw
      IyqKsi3oLtyu3Jl2Wi1hi2EHrcKKovi6hWSA4HjJZ4PJNUGTsLRM6bqOaZrYto3neb7voNFo
      MD4+7kdlplIpXNfFcZzIcAzZtoxYDVtsosTSsBc+ygQdtTgF37lv7BB0rTb1eoOxsTGymWyf
      2dZxHDqdjp9DEf5WR84AwRe1ui08VHRF61u1pf239wC+bChhmqa/JQch7eBRynDUdipXv53u
      k9eCq5ycWIMQVB7lv8P0WJbVt/37746g6zgYam+yua67TUyIghwjy7L6YmWCnmGZMBKPx1EU
      hWazSavV8tNYk8kkiUTCb69er2+nb3N85DcIxurLRUvK+7qm4YmtmKTg2NbrdZ+OMFRVpdVq
      kUwmt/3mCQXTMNFci2q16ptS5TMyiC6ZTCKE8N9H4sgZYAsCq9vBQyOeym4TW3azjkRZGYKe
      1WA80G5Wlt2wVwtRUKwYBF3Xd46yVDWaDsQMs2/1H1TFQdIpU1Jl2LmE9Ba3223a7TaJRILZ
      2Vna7TZra2ucPn267xvI0ISgyTk8VqZpbu3om1Y+wPfReJ4Ditb3LW3b9hlvZmYmcvyz2Szl
      crmPAVRVJZFIEI/HfZqCSrGEZVl9oSHhb3fkDCBXU71bZiw7huNt2Xjl7+H75TX58V3X3fZi
      4Yk0aHJJhTDY124T/GEUXZnLO6j94O99faEQ0w2ubDjcqdi8MGlycfOkT03XEYFKG0HIcTVN
      04/Fkdc9z+vztsqEEpkuKFd6RVF8B52i9LyvwSheOemCIoes8iHFj3q93pf+aRgGrVbLp8d1
      XQqFQuTxt0HDhK7rNBoNZmZmfGaW7yGtWeHxCzN/1LgfOQMEubXnnt97iRIZgiDbCEPKqFJG
      DvYnZeMgoqwwYbElrGwPglwJg36B3Uydke0AMQO/sIWqqsxvbDCTz6OHlG9Jq5wAQdodx/Fr
      D0lawruGDOWQYQcyUlW+S1QEZ3h8Wq0WlmWRz+f9ayVH51bN4XIhTVLpjYc00YZ1h54xwMXz
      eu+Vy+X81VwaFWq1Wl+xBU1VUVQFRVGJxWIkEomBE1/iSBkgqMjaxti2CRe2ngQRtCTICRxW
      qIIvLmNM5IDIVSnKVBqmUf5/kH4QnHhRz0uxYBBtw+B8Tqdme5xOqVhWz0t6dmICxFapkrBy
      ripgWW0UJemLiMFkEYnwjpZOp2m1Wn4karPZ9IP9pDgTZrZgW57nYds2uVxuy0yt6by52Kbl
      COpdj1+e1froDj4vmVnTDFS1p2MFk2I8z6NUKvUtKqlUCgUPVVFIprNDj++R7wCe56GrArP4
      M5TkFA3jFNDbvlSvg0swVCK6SoCs6rabSBKMF5eTfrdQ22EQFMmidqC9pGYOwpgh+OapGJ7w
      sBUDz/UgICpKBBlAoABKn3UoymIl/y93UcMwsCzLT2CSViXJOFHmVLlDeJ7HWrODkQqfEC8Y
      T2i06g6TCc03u0trVDjRXdd1f7UPFk4TYnseuVRy9xoRCsdkB9C9NqL0GaZdRpk87dvEFWW7
      CXPQ4MtBkgMzaAUIK9Y70bYTgm1s/d1Lbt8Ne139JTzPQwBd2yYZi2+KcL0YqiDN4Z1AWo0G
      MYCmaaRSKQBqtRqpVMq/d5sOpqi0HIdcvBf1KhP3ZY7BRrHIesMirmtkckl/gfFcl6/N6HSn
      TQxcXKd/5w36L6T4EvStBOkNMoOqqn6U68PgSBlAmuFcksQv/C51JY5wd89MCkIOgmO3qbQt
      xtLZyFU46rmHWenDH0P+v9fecJEl0e/RmyjDFLuK6UZfVtdOtvedJoau954rVjdIJBK0Wi1f
      pAwqoEH9otbpslitc3ky7+d3y/s8z2NmeppksoHnuTghZnMdB+E4eJs2eTnBpXUqkUj48UlR
      puItunuBc47j+FGwD4sjYwBpsoLeh+qIOGKXujjy3vDE7dWRjDORTQzUGeQKE/yYe+1nkHMq
      fG03ROkAqqqhKFuJJoMsUkFxS4oRvgFAUbla8hiLq5xLq/xgoc1K0+G1UzavnB33V88t3aU3
      ySbyE7RbDbzNf0vFMooZ58ZymJpCqVEnl0qTTyVoFOfJTJzDMBM0Gg1cx0ZVBKZh0A0wQdgJ
      pmkaja5F1tTwnCbJ5NiuSqt8VqZL7sQow+BId4BhylaEEXW/VGoHObyCk9TxbAzNwN1hpxnU
      z6D7Bnmid4Npmn0T3vMEur4zQ4UtUcHVr2Yr3K87FDsKKd1kqemioPDBSpsX5npecWkMkH3K
      93SEyjt3a5SbNpdnklya6jd5yr7bnQ5rlRKu59HodIhpEzidGu1mg1bbwvUcVEVHUTWEZ/se
      WOkMCyrgQggSZgxP2D5DDDuZH3XiSxwpAwQLUQWxZxNhwCIk/73TyrxHngs9u31llrLwXhF0
      LD3sB9U0jZYLSUNlzIRXp0wypkJSU0jqKh3X41xuqzSMYRhbFekUBSFcNN3kn/3oAbc2czDe
      vl3m978yxwunUn3ydjKZ7GXcqb2YLU1RQNGJTzzd00cABHhC+iZUhJA+Cpd2u4EQum8Vs20b
      R1F4UK5xbmp6z5ld+4EjzQcIJmMERY69ToQoUcVFodntko9v5Qh7noeKtqcyIIP6C5pFH3Yl
      kiuyfHdpehwWcnIuFhucySYw8TgVV4h3V+goE3wzV6Lywz9jRmnS9P5j0s98rV9EVBTeWVco
      1hvcXm9xeVJhqSaoW/Du3QqvXZz0J/3Gxoaf6HNmcopGu0XCNHG3iUn92Vu2p3B9sUKj4zCe
      iXNhOo6ubSqwCtwuNym7MYrrNqfGd47dOggc6Q4gIx/DEz8oq0vsZDuP8gR7m98hWI4j2N6j
      MkFYAd6PduShE8PsJoqiIDwHgcbT4+lefqtpoggHvbOCrmfJ/eh/Il1chZV7dK7/APUf/2us
      +Fb6oECh3vXoej3b1XJN0N4U2WO6hmVZFItFvz6R67psbGz0flc1PGe7HV9C1TT+4t0HfO/t
      O1j2FtPlUia///XzfOOFs6iddcbqn3FHeZnzOf1k7QDAtlJ3USYvOcA7VVmLWjV0IGPo/nNh
      kUi2G5Zz94pHmfxhyDCBqBwGy7aIGf01j1RV7wsuAxCKTqvwRZIf/RG6toSdaNMEsNu0b7+H
      c+kXUVV5uovDV8fBExqxToGf3CwDEDdUvvn0GO1mlbRmoyfylEolVFX1wyqiTK4+varKH/3N
      dX54dXHbOzbbXd6/W+TCmQKTmRyqqvKCscDpwvN+WMphMsKRMoAMnx1UBz5Klo9abXYSQYJi
      Sj6fp9ls9tm4H2UCD3J8RdEX7ieYwOMzOh5dLY4uFMxAYQBPeFTrVabGpvxrQggEW6bkcOK4
      l+rd63U3RRQjTrtwBoNeMQHpY1HVXgj2v/9inBdPJalaChcLNuMLf0pDn8XKPY1j5P2xihqz
      sDXm/dulyMk/mzeZG4vz7Vdn+Wd/8xn/8DeeoZF5mWw8RjKZ3DfFdi848oywIMKTf7/6kIzW
      7XZJpVJ9Z07Je6LEsJ3a9IRLubzBRGG673qUmVWKDdJbraoq5XKZsbExP46pUqkwOzfLtVKL
      2bTB+Uzg0wiYLExGZogNCo/uXPgO9vRreO/8S9SJEsqrv0t85vLmu9FHZ+8/OD2W5DSgCQ3P
      HKOrZBBGFi3U506mZFVV+dsPH2y7Hjc1xgtpvvjCHP/8jbvcXWnyNz9f5Q+/88U+68+JYgB4
      OIvPXlbtoLIqA7zi8TiWZfm/Bb2j4USSYDtBWg1TJx5L+CtwFPNKkc03NW4qjK7rkk6n/Rgb
      aUYVnuDLs0kU0T/RB022sG6jKPSeVXu6lZOahm/+oa9X7DbSKi4KAlvouGf+PobTQijRyezb
      xJ7Nf9uux/xqdatNBb7x3Bhff+kUxWKVTx9UmN+0Nt1eqh66yBPGkTKAZVl9zpbw6hK2tDyK
      wimECBwY4dByPZL6VpyJRJR3NQxFUTCa8xjxcRxF6bPcyIkQjFKUSRgyL1c6AWV4sQw9EEKg
      Img2m/6qLschShwM5kDLe6xWkYzSxI1N4mhp/76eyqv0HZMWHsvkyusoTpP66b/fMyxovSQS
      sRl2LJ1P4XcN/vv+v/t/sKo6mL1YIE+AoQmM+iJfmEzys09Xdj0I5DBxpJ5gGfcfpVCFP+yj
      yOvB5xzHoWwL7paaXBzPkHqIxUdRFNp6gZiWHOgxDl6T8m2QqUzTxPO8yGJY0jwKO1urut0u
      iUQiMFYQS08j7DJCi6MqArFplrTtDpqmU+nYuJ5gMtM7sVFTFWKtedz41CZj38OoXMXLPuv3
      rWkq8XjMf/dBO4IqPO7/1Z+Rn/hNVjYZQFMVJmcmsVIGn87f47PVLX3vqbncka7+cIRlURRF
      8VPugpNeVVVs4W4LCQg/uxeEc3LzpsbpTIy08XBKl6oIurUlEkt/jSH6SyDKPmTEouu6LC4u
      0u12uXfvnn+Ag/y7WCzSaDTodDp+4VpFUXohBRHm3T46Imr6gKBTXcDrlMDt0SaEQNNiqJrJ
      7UqXpXobD1hsunSsOvri36Le+wuM0vuobhtj7U3a1tY5DsJuoon2wEVILlyd6hpGocDznev8
      6lef4pkL06iqQj4do+Ho/PHbFtVO73ldU/m1V584cgY4citQOp3uS7PzEKyUisyMTTAoxGkY
      RTWI8IdThMd0KrZtgvWZE3fwO+hug4nGB8StJcTYF+jGz267N7iKz83Nsbq66tf0lHm30gQr
      fRVSlJJhATLUYdB7ylDibbnQsTyKlsBT44hQHoKp62RjMTRFoWI5mPEEuYv/KaJdpNs6g1H+
      OZ3UM6QSGV88dYiBAu6m5UyGR8vxisVi6IZBLTZFbeIiTxke2SezFOfyFNdL/Mm/uYaqKrSs
      LXH3D37lMpfP7lz07DBwpGVRoKcQrq2t+f9WVbV38qLYqn4sw22DMePDTv5hT1wP6h1BcSWq
      pIqqKGQaH6F0azQnvo4rtlswgmNZq9X8nF/p05CiS6vV8nWDoDWnR4uHrmsI0c+kwfeXJ8vs
      dHCcjLfXNI2y5VJsd7mQT6B5HezFt9AmX0TECn3PS6aUJ13KMZA5AjLJHHoh0h+WFRYaDgiB
      +Wf/hOT4OG0tyfe9iyw1t2jKpUz+8199lt/66qWHDmHeTxw9BfRWy7YjuF9z6Hou0ymFqYSK
      oevYgdMFJfaiCwwj4gSVy51KsfvXAbW+gFH6ACcxRyt5oe/+cJ/ZbLZvdwlWJhhU4UHK56qi
      4Yr+w/vanTqJeBrP64mMHjuPjc8srkNMU4lt7ioOBt7Ei2ixnL+yS8iSKcHdRfafyWRwFQ1d
      uKCo/Lt7HXRsJgyBaSY5/53fY+lv/xzno/+P38hPk/vOf8P0S18mZuhcOj1GPBZ91tdR4MgZ
      QFEUltvwd3fq2AF974WCw+W8QjyW9le44Dlew2I3ZhmkeO9UWxRAGL1KbkLbXqpjmP6GUeoV
      tbcAhFf1dDKL622ZXl3PQRE2ppnqswwF+4SeRcbUVDzFoN4VxISNYeawHa/PRCsV82AyfbD/
      202VjzcsLuYNvjCm4LiCjusxY3Z5enqcxOyXmXzuJVKpFPF4/KEOsDgsHDkDlBtt/u5OzZ/8
      huKR1Dwalk2to5BMbHlbZbL2sGJaWKyJQpQpbzc9QAhBbfIbaDPfGjqlMirMI9xXGI7j+uUC
      gwxj+3T1rpma6TvFglBVlVJH0LANTpsqwnW4W/d4UKrj6Qm+fSaB59qom1ldQgg/HGNQiqnn
      ebTs3vWm0zORfuNcgs9KOuOZPPmEjm336Gq322QymWM7+eEYpETe3Gj6k3/csHkl16DpqHza
      SPJuyeR3xvuzg2KxWKTitxN22m6lXD6M8ht+bicG2Y3xgn1FTd6dvORBZgjSL4tZSay1BX/+
      aRUBvDiT4JVxwVgsxg3inE/1dBJNN/AEELCUyUytMAPISnuXc9Bqt3kmbQJxUqrLFyc1oPcO
      8Xgc13VJJpPHevLDEVeHBugE5J6E5qGpgpqr03A1smq7592MsLBIGXUnhMUbqTAGfz+IDzQo
      piXIGH2T2O1G7kRh59cgppCMFI/H+ypBl9qurx1stHohFznN5beeiPNsfjPB3PVYrdX6Jrym
      aX4pRDlGsuIagKkIvnIqRybey0v2AGezsrUsQxiPxyMruR03HLkINJOJAT2b80LHpOpotFyN
      mOLh6hlgK2c0KN8ahtF3Vuww2IviNcy9g5TeQfcOUlAV1RjIzL5VBoWWbZMzd75XKvKKonAu
      LXhqLEbVcnntVMI3+wZNmIqiMLlZAzRIkzxuSjKGYRhstDvMZDN4rguuG6hRpIBQeqEWm8GN
      6XT62Ci6O+HIg+GenExzZrnBg5oNKNQdnZTmcDbR5dJMr66M5Qnul2pk4ibTqXjAQ6n5sTiD
      TJ3hOJ2daIGtSnFSzwgXtAreG0bQbh+uThGW9cMrelhkkhN5mFqlwX6kEy0ej6NrGr96Lua3
      pfkFiKPFKcCPLA2GqsvfZ7KZPr/C1otvvpum8XfzdeKGxa+cz1HIpCJpPU448h3A0HW+8+wU
      P75b4lbJwnI9CgmTS9Mp8oYAFDaabTqOQ6fhMJnqL24axQRy25bX9lI1wI/lcbtoqjq0rVqu
      rDtZqcIrd9QpK8GiU0GmMBDkY+Y2vSKoRyhKrxyhLAfoeZvjonooqHQ6bt+kDusVwdwJTYWu
      7fgLQq9Ok9e3y4SZseFAw9VpuB7FVvexYIAjd4RJyFMLJR3BctyWBw/KvR1gNpOMrFYQjOJ0
      nA6Ndovx/CTdbndPDCAnqZz4UeJGeNJJ7JZcE3Z2hUucdzyVn612mEioPFswcV2HVqvVdz5W
      1C4k/zYMg1qtRiKRQFVVXxlVcVE1Hdd1UFRj21kFic4DtM46rcLLeJtON01VsQLJ/r1+Banm
      DfT2MvXJX8Fx+2uSqqrKfEvBReGVUzliezRZHwWOfAeQCE4OqeRKT3BMhaenxxBCRJodAT90
      wPM8ao7GfMskk3a2VU4YFoPk7ODKGRaFgopi1HPhkoThFXS17eE5HeptcAoxFCCZSqIoak/u
      juhT0TQW610m4z1veSqV8g8ilwuFUDX0zhqNrko8lSdo+9BwSH36v6M4TbynY9RTT/u1/oOH
      i2iahips9OWfYNrrUPgSmpHuRZgGdqvLY73Dvc1Dzu19WBy5FSgKqqr650RJSFle0zSEqlOz
      wCE6lDkXM7g0kUHf/Ij7jaANfxCjDFPiQwhB2Va42+yJeqdTChOZNHPZNDqbcTi248vdUYq0
      JxQqnS6K1puspmmiuG06pdtoWm88MuV3yX32vzBZ/xmq2r/meag4+ct48Qm6sanNGksxf9wU
      RSEz/2/IvvGPMNeu0Lz0X1F55h8j9CTdbgcFF1XxEE6rFxC3WXX6UXOuDwvHZgcIQ9M0crkc
      pVLJX/UtV6FYXuZP32vTtnuVL5+aSvL3np8gvym5yVTDOAJVMfCIrhoBw1uFVFWlbbWJx+IQ
      +K6+hzX0sRPWErGlv8GefI1m+umB7SqKwmrLYaXZ5Uwyjio8ns1tmWZVVURmS0m9R1EUVDxe
      nM6iWCWEV0Wo50Do6LEM8rVdcwyhJSA541+T9XpcT7B2+g/8CtZqQBcB0HFQOgugaxi3/orW
      5JfxhImhacTMBJ4QqKqCZiTxhCCVSh1rz28Yx5pKWbNSiF55jX/64wX+5N0W7U1PpABurrX4
      ox8tULW2Joi0W0N03fywHX4vCNvlo3QB1amhuBZKt7KrI+zpvM4vzqXQ2LISSaVeinTBcO7e
      e7l9jOF5Hl5zjU5jHc/p0rJcukqvwrNQoJF6ivXn/gcqqed9MaxeL6IoW0dUtdttLMvCtm0s
      y6Lb7fZKnDvgTLyErSaxL/x7mzSotGtLKMpmCLvTRHObPWXdMAae9HIccWyU4EHodDpUq1V+
      cKvGG5+V/OvTKSh3YDqjkYopCCXGH3yxP292p9ghOaGiDtKAwRlhg5xcgB+2oCoKul3G1nPS
      QrhtfFVVys7baZJ/w5ZZErYUcwUPVdVxN2l1HAcFgWloBCqQ9EI2Oi1sx6EtDOZyaTSxVTxM
      vq9U6qNOaZRj4bo2iqL50aHB6Faz8hHCtYid+4Z/IMfjgmO9A0Av9CGdTvPJYgNdha+c1dAU
      qNu9s4RnswqTaZVbay1s0X+mrXSW7YQoc96jQgC2Ueib/ICf/+uLL0OICf3iWm/yuh44gRMa
      2+02mm7geP2Mads245kc0/kxpjIpDHXrEDtZFUPTdbRN02csFutL5YSeku2ioii9HSeRiPf5
      OYQQ6DNfIvXEN3wF/HHC/w/TuJ6Sw/pjxQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Ex9 Story' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Postal Code' width='192'>
      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
      GoJflKm5eAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Ship Date' width='192'>
      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
      Eax/zn+Y9v8DpD3Lk5/Mv/0AAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
