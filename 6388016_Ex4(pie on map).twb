<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20224.22.1117.1841                               -->
<workbook locale='en_GB' original-version='18.1' source-build='2022.4.0 (20224.22.1117.1841)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Orders (Sample - Superstore)' inline='true' name='federated.04gf3yt00fkvqi16u9nx01ualh5i' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='excel-direct.1l0z40000dzao61anuwyl0yeic19'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/ADMIN/Documents/ที่เก็บใน Tableau ของฉัน/แหล่งข้อมูล/2022.4/th_TH-APAC/Sample - Superstore.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1l0z40000dzao61anuwyl0yeic19' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U10195:no:A1:U10195:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State/Province' ordinal='10' />
            <column datatype='string' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1l0z40000dzao61anuwyl0yeic19' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U10195:no:A1:U10195:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State/Province' ordinal='10' />
            <column datatype='string' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U10195:no:A1:U10195:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State/Province</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State/Province]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State/Province</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_1C7DD954D1C5456A85D0355E25E1A513]' role='measure' type='quantitative' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[State/Province]' derivation='None' name='[none:State/Province:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country/Region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:State/Province:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Manitoba&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;British Columbia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prince Edward Island&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Quebec&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nova Scotia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alberta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Brunswick&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saskatchewan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Newfoundland and Labrador&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Amarillo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bozeman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Carrollton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dublin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Evanston&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hagerstown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Homestead&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Las Cruces&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Longview&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nashua&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pocatello&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Redondo Beach&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Round Rock&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Southaven&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;The Colony&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vancouver&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wheeling&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aberdeen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Delray Beach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Freeport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Green Bay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hesperia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lake Elsinore&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Linden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mansfield&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Middletown&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morristown&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ormond Beach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Quincy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rock Hill&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wausau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Yucaipa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolingbrook&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cambridge&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chula Vista&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Coral Springs&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Des Plaines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Encinitas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gaithersburg&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gresham&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hillsboro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jonesboro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lakewood&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lodi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Marietta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Minneapolis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Las Vegas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oxnard&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Plainfield&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Reading&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rome&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;San Clemente&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sioux Falls&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Temecula&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Urbandale&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;West Palm Beach&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Antioch&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Baytown&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Broken Arrow&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Coachella&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Danbury&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;East Orange&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Farmington&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Glenview&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Huntington Beach&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Knoxville&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lawton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Loveland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moncton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Brunswick&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Olathe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Port Orange&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Renton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Charles&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sandy Springs&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tigard&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Waco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Anaheim&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bangor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brentwood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clifton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cranston&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Everett&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gilbert&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Halifax&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hoover&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mcallen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Missouri City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oceanside&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Parma&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pomona&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Redwood City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Royal Oak&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sparks&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Thomasville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vineland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Whittier&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bossier City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Canton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Corpus Christi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Englewood&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Garden City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Grove City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Holland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jupiter&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Miramar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Murrieta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Miami&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Palatine&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Plano&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Redding&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Romeoville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Skokie&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tempe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Utica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Westfield&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Arvada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bethlehem&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bullhead City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chattanooga&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Edmonton&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Frankfort&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Great Falls&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Irving&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Laguna Niguel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lewiston&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mesquite&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Moreno Valley&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Niagara Falls&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Orland Park&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Perth Amboy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Santa Maria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sunnyvale&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Troy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Watertown&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Yonkers&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Abilene&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bloomington&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coon Rapids&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Deltona&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greensboro&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hialeah&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jamestown&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lake Forest&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lindenhurst&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Manteca&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mount Pleasant&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Normal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oswego&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rockford&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Angelo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tamarac&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Waynesboro&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bellevue&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Charlottesville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Edmond&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fort Lauderdale&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Grand Rapids&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Helena&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Inglewood&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;La Quinta&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lehi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Meridian&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Montreal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Newark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pensacola&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rio Rancho&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Peters&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Waterbury&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Woodstock&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Allentown&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Avondale&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bowling Green&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carlsbad&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Citrus Heights&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Costa Mesa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dover&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Escondido&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gulfport&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hollywood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Keller&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lansing&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marlborough&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mishawaka&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Norwich&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Palm Coast&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Plantation&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Redlands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Roseville&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Smyrna&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Texarkana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vacaville&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Westland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Apopka&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Beaumont&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Broomfield&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chandler&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;College Station&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Danville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;East Point&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fayetteville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Goldsboro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Harlingen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Huntsville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Layton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lowell&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Olympia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Paterson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Port Saint Lucie&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Revere&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Cloud&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sanford&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;St. John&apos;s&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tinley Park&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Warner Robins&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Winnipeg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Apple Valley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brownsville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chapel Hill&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Colorado Springs&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Grand Island&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Harrisonburg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;La Mesa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;League City&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mentor&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montebello&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New Rochelle&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Omaha&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pearland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Louis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sterling Heights&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Warwick&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Arlington Heights&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bellingham&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Buffalo Grove&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Charlottetown&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Commerce City&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dearborn Heights&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Edmonds&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fort Worth&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Grapevine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iowa City&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Leominster&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malden&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Moorhead&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Newport News&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Orem&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Provo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Petersburg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Summerville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Trenton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Waterloo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Woonsocket&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Asheville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Beverly&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Burbank&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chesapeake&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Conroe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Deer Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Cajon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greeley&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hendersonville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lake Charles&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lincoln Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Morgan Hill&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Noblesville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pharr&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Quebec City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rochester Hills&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Salinas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Scottsdale&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Superior&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Andover&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bartlett&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bridgeton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cedar Hill&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cuyahoga Falls&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gladstone&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Haltom City&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kirkwood&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Laurel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Medford&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Albany&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Odessa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pasadena&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pompano Beach&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Regina&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marcos&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Thornton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Virginia Beach&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Altoona&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bakersfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Boynton Beach&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carol Stream&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clarksville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cottage Grove&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Draper&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eugene&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gastonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hackensack&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Holyoke&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kenner&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Laredo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Longmont&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Marysville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mission Viejo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Naperville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oak Park&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Park Ridge&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pleasant Grove&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Redmond&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Roswell&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Gabriel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Bend&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Texas City&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vallejo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Westminster&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Atlantic City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Boca Raton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Calgary&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Coppell&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Elmhurst&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hickory&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jefferson City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lakeland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Little Rock&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maple Grove&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Milford&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mount Vernon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Overland Park&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pico Rivera&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rancho Cucamonga&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rockville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Shelton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;West Allis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Appleton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belleville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Daytona Beach&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Edinburg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fort Collins&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Grand Prairie&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hattiesburg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;La Porte&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Meriden&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pembroke Pines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Paul&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Stockton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Toronto&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Woodland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ann Arbor&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bayonne&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cedar Rapids&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Clovis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Eagan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fargo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Glendale&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kissimmee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Modesto&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Bedford&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oklahoma City&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Port Arthur&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Springdale&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Thousand Oaks&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Visalia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wilmington&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albuquerque&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Auburn&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Camarillo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Coral Gables&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Elyria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Frisco&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Highland Park&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Johnson City&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lakeville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Littleton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Margate&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Murfreesboro&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Charleston&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Owensboro&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pine Bluff&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rapid City&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sierra Vista&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;West Jordan&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Category:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Technology&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Office Supplies&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Thailand&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_1C7DD954D1C5456A85D0355E25E1A513'>
            <properties context=''>
              <relation connection='excel-direct.1l0z40000dzao61anuwyl0yeic19' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U10195:no:A1:U10195:0' header='yes' outcome='2'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country/Region' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State/Province' ordinal='10' />
                  <column datatype='string' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='ชีต 1'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{21E151D5-8007-4AD3-982D-E871B9E26FDB}' />
    </worksheet>
    <worksheet name='ชีต 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.04gf3yt00fkvqi16u9nx01ualh5i' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.04gf3yt00fkvqi16u9nx01ualh5i'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[State/Province]' derivation='None' name='[none:State/Province:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04gf3yt00fkvqi16u9nx01ualh5i].[none:Category:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Category:nk]' />
              <groupfilter function='member' level='[none:Category:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.04gf3yt00fkvqi16u9nx01ualh5i].[Longitude (generated)]' field-type='quantitative' max='-6331684.4325752556' min='-14435154.153088458' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.04gf3yt00fkvqi16u9nx01ualh5i].[Latitude (generated)]' field-type='quantitative' max='7585277.2297111526' min='3002215.7567017595' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.04gf3yt00fkvqi16u9nx01ualh5i].[none:Category:nk]' />
              <lod column='[federated.04gf3yt00fkvqi16u9nx01ualh5i].[none:Country/Region:nk]' />
              <lod column='[federated.04gf3yt00fkvqi16u9nx01ualh5i].[none:State/Province:nk]' />
              <size column='[federated.04gf3yt00fkvqi16u9nx01ualh5i].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='3.8342540264129639' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[Latitude (generated)]</rows>
        <cols>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{50958F8B-E1C7-44F0-97C7-27C2F8C29AE2}' />
    </worksheet>
    <worksheet name='ชีต 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.04gf3yt00fkvqi16u9nx01ualh5i' />
          </datasources>
          <datasource-dependencies datasource='federated.04gf3yt00fkvqi16u9nx01ualh5i'>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.04gf3yt00fkvqi16u9nx01ualh5i].[none:Customer Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[sum:Sales:qk]</rows>
        <cols>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[sum:Profit:qk]</cols>
        <annotations>
          <annotation class='point' id='7' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Customer Name: </run>
              <run bold='true'><![CDATA[<[federated.04gf3yt00fkvqi16u9nx01ualh5i].[none:Customer Name:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Profit: </run>
              <run bold='true'><![CDATA[<[federated.04gf3yt00fkvqi16u9nx01ualh5i].[sum:Profit:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Sales: </run>
              <run bold='true'><![CDATA[<[federated.04gf3yt00fkvqi16u9nx01ualh5i].[sum:Sales:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[sum:Profit:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[sum:Sales:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[none:Customer Name:nk]</field>
                      <field>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[sum:Profit:qk]</field>
                      <field>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[sum:Sales:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Raymond Buch&quot;</value>
                    <value>6976.0959000000003</value>
                    <value>15117.338999999998</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
          <annotation class='point' id='9' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Customer Name: </run>
              <run bold='true'><![CDATA[<[federated.04gf3yt00fkvqi16u9nx01ualh5i].[none:Customer Name:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Profit: </run>
              <run bold='true'><![CDATA[<[federated.04gf3yt00fkvqi16u9nx01ualh5i].[sum:Profit:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Sales: </run>
              <run bold='true'><![CDATA[<[federated.04gf3yt00fkvqi16u9nx01ualh5i].[sum:Sales:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[sum:Profit:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[sum:Sales:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[none:Customer Name:nk]</field>
                      <field>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[sum:Profit:qk]</field>
                      <field>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[sum:Sales:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Sean Miller&quot;</value>
                    <value>-1980.7393000000022</value>
                    <value>25043.049999999999</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='132' y='37' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{13C7CC7E-CA66-4062-8708-56DF65256E19}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='แดชบอร์ด 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones />
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='14' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='13' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{67C59EF8-31DC-42C9-BD78-11B778F8C78B}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='ชีต 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{10011400-4B2D-46F3-A3A4-1F8C9F76511D}' />
    </window>
    <window class='worksheet' name='ชีต 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.04gf3yt00fkvqi16u9nx01ualh5i].[none:Category:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.04gf3yt00fkvqi16u9nx01ualh5i].[sum:Sales:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[none:Category:nk]</field>
            <field>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[none:Country/Region:nk]</field>
            <field>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[none:Region:nk]</field>
            <field>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[none:Segment:nk]</field>
            <field>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[none:State/Province:nk]</field>
            <field>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[sum:Profit:qk]</field>
            <field>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[sum:Sales:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{DA6FC46C-B219-4525-98F9-1DDEC68F68A6}' />
    </window>
    <window class='worksheet' name='ชีต 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.04gf3yt00fkvqi16u9nx01ualh5i].[none:Customer Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[none:Customer Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6F4512D6-A529-40C7-B1EC-5613293B9F9C}' />
    </window>
    <window class='dashboard' name='แดชบอร์ด 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{0ABC043D-CB54-4BE7-A054-5A9B73B936F1}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='ชีต 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='ชีต 2' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='ชีต 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='แดชบอร์ด 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
