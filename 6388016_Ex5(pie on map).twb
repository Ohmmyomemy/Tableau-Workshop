<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20224.22.1117.1841                               -->
<workbook locale='en_GB' original-version='18.1' source-build='2022.4.0 (20224.22.1117.1841)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Orders (Sample - Superstore)' inline='true' name='federated.04gf3yt00fkvqi16u9nx01ualh5i' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='excel-direct.1l0z40000dzao61anuwyl0yeic19'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/ADMIN/Documents/ที่เก็บใน Tableau ของฉัน/แหล่งข้อมูล/2022.4/th_TH-APAC/Sample - Superstore.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1l0z40000dzao61anuwyl0yeic19' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U10195:no:A1:U10195:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State/Province' ordinal='10' />
            <column datatype='string' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1l0z40000dzao61anuwyl0yeic19' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U10195:no:A1:U10195:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State/Province' ordinal='10' />
            <column datatype='string' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U10195:no:A1:U10195:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State/Province</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State/Province]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State/Province</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_1C7DD954D1C5456A85D0355E25E1A513]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_1C7DD954D1C5456A85D0355E25E1A513]' role='measure' type='quantitative' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[State/Province]' derivation='None' name='[none:State/Province:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country/Region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:State/Province:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Manitoba&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;British Columbia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prince Edward Island&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Quebec&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nova Scotia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alberta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Brunswick&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saskatchewan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Newfoundland and Labrador&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Amarillo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bozeman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Carrollton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dublin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Evanston&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hagerstown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Homestead&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Las Cruces&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Longview&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nashua&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pocatello&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Redondo Beach&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Round Rock&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Southaven&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;The Colony&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vancouver&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wheeling&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aberdeen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Delray Beach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Freeport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Green Bay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hesperia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lake Elsinore&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Linden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mansfield&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Middletown&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morristown&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ormond Beach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Quincy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rock Hill&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wausau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Yucaipa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolingbrook&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cambridge&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chula Vista&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Coral Springs&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Des Plaines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Encinitas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gaithersburg&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gresham&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hillsboro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jonesboro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lakewood&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lodi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Marietta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Minneapolis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Las Vegas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oxnard&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Plainfield&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Reading&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rome&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;San Clemente&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sioux Falls&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Temecula&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Urbandale&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;West Palm Beach&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Antioch&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Baytown&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Broken Arrow&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Coachella&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Danbury&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;East Orange&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Farmington&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Glenview&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Huntington Beach&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Knoxville&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lawton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Loveland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moncton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Brunswick&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Olathe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Port Orange&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Renton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Charles&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sandy Springs&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tigard&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Waco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Anaheim&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bangor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brentwood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clifton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cranston&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Everett&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gilbert&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Halifax&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hoover&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mcallen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Missouri City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oceanside&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Parma&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pomona&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Redwood City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Royal Oak&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sparks&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Thomasville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vineland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Whittier&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bossier City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Canton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Corpus Christi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Englewood&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Garden City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Grove City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Holland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jupiter&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Miramar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Murrieta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Miami&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Palatine&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Plano&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Redding&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Romeoville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Skokie&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tempe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Utica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Westfield&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Arvada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bethlehem&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bullhead City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chattanooga&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Edmonton&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Frankfort&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Great Falls&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Irving&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Laguna Niguel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lewiston&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mesquite&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Moreno Valley&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Niagara Falls&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Orland Park&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Perth Amboy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Santa Maria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sunnyvale&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Troy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Watertown&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Yonkers&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Abilene&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bloomington&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coon Rapids&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Deltona&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greensboro&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hialeah&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jamestown&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lake Forest&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lindenhurst&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Manteca&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mount Pleasant&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Normal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oswego&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rockford&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Angelo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tamarac&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Waynesboro&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bellevue&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Charlottesville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Edmond&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fort Lauderdale&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Grand Rapids&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Helena&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Inglewood&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;La Quinta&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lehi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Meridian&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Montreal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Newark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pensacola&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rio Rancho&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Peters&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Waterbury&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Woodstock&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Allentown&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Avondale&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bowling Green&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carlsbad&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Citrus Heights&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Costa Mesa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dover&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Escondido&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gulfport&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hollywood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Keller&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lansing&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marlborough&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mishawaka&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Norwich&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Palm Coast&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Plantation&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Redlands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Roseville&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Smyrna&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Texarkana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vacaville&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Westland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Apopka&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Beaumont&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Broomfield&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chandler&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;College Station&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Danville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;East Point&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fayetteville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Goldsboro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Harlingen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Huntsville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Layton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lowell&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Olympia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Paterson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Port Saint Lucie&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Revere&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Cloud&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sanford&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;St. John&apos;s&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tinley Park&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Warner Robins&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Winnipeg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Apple Valley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brownsville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chapel Hill&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Colorado Springs&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Grand Island&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Harrisonburg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;La Mesa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;League City&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mentor&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montebello&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New Rochelle&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Omaha&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pearland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Louis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sterling Heights&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Warwick&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Arlington Heights&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bellingham&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Buffalo Grove&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Charlottetown&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Commerce City&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dearborn Heights&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Edmonds&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fort Worth&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Grapevine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iowa City&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Leominster&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malden&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Moorhead&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Newport News&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Orem&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Provo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Petersburg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Summerville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Trenton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Waterloo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Woonsocket&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Asheville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Beverly&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Burbank&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chesapeake&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Conroe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Deer Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Cajon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greeley&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hendersonville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lake Charles&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lincoln Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Morgan Hill&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Noblesville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pharr&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Quebec City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rochester Hills&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Salinas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Scottsdale&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Superior&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Andover&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bartlett&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bridgeton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cedar Hill&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cuyahoga Falls&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gladstone&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Haltom City&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kirkwood&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Laurel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Medford&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Albany&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Odessa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pasadena&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pompano Beach&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Regina&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marcos&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Thornton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Virginia Beach&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Altoona&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bakersfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Boynton Beach&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carol Stream&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clarksville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cottage Grove&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Draper&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eugene&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gastonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hackensack&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Holyoke&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kenner&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Laredo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Longmont&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Marysville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mission Viejo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Naperville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oak Park&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Park Ridge&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pleasant Grove&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Redmond&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Roswell&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Gabriel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Bend&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Texas City&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vallejo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Westminster&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Atlantic City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Boca Raton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Calgary&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Coppell&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Elmhurst&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hickory&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jefferson City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lakeland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Little Rock&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maple Grove&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Milford&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mount Vernon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Overland Park&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pico Rivera&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rancho Cucamonga&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rockville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Shelton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;West Allis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Appleton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belleville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Daytona Beach&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Edinburg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fort Collins&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Grand Prairie&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hattiesburg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;La Porte&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Meriden&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pembroke Pines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Paul&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Stockton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Toronto&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Woodland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ann Arbor&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bayonne&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cedar Rapids&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Clovis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Eagan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fargo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Glendale&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kissimmee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Modesto&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Bedford&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oklahoma City&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Port Arthur&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Springdale&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Thousand Oaks&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Visalia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wilmington&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albuquerque&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Auburn&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Camarillo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Coral Gables&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Elyria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Frisco&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Highland Park&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Johnson City&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lakeville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Littleton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Margate&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Murfreesboro&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Charleston&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Owensboro&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pine Bluff&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rapid City&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sierra Vista&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;West Jordan&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Category:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Technology&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Office Supplies&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Thailand&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_1C7DD954D1C5456A85D0355E25E1A513'>
            <properties context=''>
              <relation connection='excel-direct.1l0z40000dzao61anuwyl0yeic19' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U10195:no:A1:U10195:0' header='yes' outcome='2'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country/Region' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State/Province' ordinal='10' />
                  <column datatype='string' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='ชีต 1'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{21E151D5-8007-4AD3-982D-E871B9E26FDB}' />
    </worksheet>
    <worksheet name='ชีต 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.04gf3yt00fkvqi16u9nx01ualh5i' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.04gf3yt00fkvqi16u9nx01ualh5i'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[State/Province]' derivation='None' name='[none:State/Province:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04gf3yt00fkvqi16u9nx01ualh5i].[none:Category:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Category:nk]' />
              <groupfilter function='member' level='[none:Category:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.04gf3yt00fkvqi16u9nx01ualh5i].[Longitude (generated)]' field-type='quantitative' max='-6331684.4325752556' min='-14435154.153088458' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.04gf3yt00fkvqi16u9nx01ualh5i].[Latitude (generated)]' field-type='quantitative' max='7585277.2297111526' min='3002215.7567017595' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.04gf3yt00fkvqi16u9nx01ualh5i].[none:Category:nk]' />
              <lod column='[federated.04gf3yt00fkvqi16u9nx01ualh5i].[none:Country/Region:nk]' />
              <lod column='[federated.04gf3yt00fkvqi16u9nx01ualh5i].[none:State/Province:nk]' />
              <size column='[federated.04gf3yt00fkvqi16u9nx01ualh5i].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='3.8342540264129639' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[Latitude (generated)]</rows>
        <cols>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{50958F8B-E1C7-44F0-97C7-27C2F8C29AE2}' />
    </worksheet>
    <worksheet name='ชีต 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.04gf3yt00fkvqi16u9nx01ualh5i' />
          </datasources>
          <datasource-dependencies datasource='federated.04gf3yt00fkvqi16u9nx01ualh5i'>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.04gf3yt00fkvqi16u9nx01ualh5i].[none:Customer Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[sum:Sales:qk]</rows>
        <cols>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[sum:Profit:qk]</cols>
        <annotations>
          <annotation class='point' id='7' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Customer Name: </run>
              <run bold='true'><![CDATA[<[federated.04gf3yt00fkvqi16u9nx01ualh5i].[none:Customer Name:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Profit: </run>
              <run bold='true'><![CDATA[<[federated.04gf3yt00fkvqi16u9nx01ualh5i].[sum:Profit:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Sales: </run>
              <run bold='true'><![CDATA[<[federated.04gf3yt00fkvqi16u9nx01ualh5i].[sum:Sales:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[sum:Profit:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[sum:Sales:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[none:Customer Name:nk]</field>
                      <field>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[sum:Profit:qk]</field>
                      <field>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[sum:Sales:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Raymond Buch&quot;</value>
                    <value>6976.0959000000003</value>
                    <value>15117.338999999998</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
          <annotation class='point' id='9' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Customer Name: </run>
              <run bold='true'><![CDATA[<[federated.04gf3yt00fkvqi16u9nx01ualh5i].[none:Customer Name:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Profit: </run>
              <run bold='true'><![CDATA[<[federated.04gf3yt00fkvqi16u9nx01ualh5i].[sum:Profit:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Sales: </run>
              <run bold='true'><![CDATA[<[federated.04gf3yt00fkvqi16u9nx01ualh5i].[sum:Sales:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[sum:Profit:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[sum:Sales:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[none:Customer Name:nk]</field>
                      <field>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[sum:Profit:qk]</field>
                      <field>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[sum:Sales:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Sean Miller&quot;</value>
                    <value>-1980.7393000000022</value>
                    <value>25043.049999999999</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='132' y='37' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{13C7CC7E-CA66-4062-8708-56DF65256E19}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='แดชบอร์ด 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones />
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='18' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='17' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{67C59EF8-31DC-42C9-BD78-11B778F8C78B}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='ชีต 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{10011400-4B2D-46F3-A3A4-1F8C9F76511D}' />
    </window>
    <window class='worksheet' name='ชีต 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.04gf3yt00fkvqi16u9nx01ualh5i].[none:Category:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.04gf3yt00fkvqi16u9nx01ualh5i].[sum:Sales:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[none:Category:nk]</field>
            <field>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[none:Country/Region:nk]</field>
            <field>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[none:Region:nk]</field>
            <field>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[none:Segment:nk]</field>
            <field>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[none:State/Province:nk]</field>
            <field>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[sum:Profit:qk]</field>
            <field>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[sum:Sales:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{DA6FC46C-B219-4525-98F9-1DDEC68F68A6}' />
    </window>
    <window class='worksheet' maximized='true' name='ชีต 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.04gf3yt00fkvqi16u9nx01ualh5i].[none:Customer Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04gf3yt00fkvqi16u9nx01ualh5i].[none:Customer Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6F4512D6-A529-40C7-B1EC-5613293B9F9C}' />
    </window>
    <window class='dashboard' name='แดชบอร์ด 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{0ABC043D-CB54-4BE7-A054-5A9B73B936F1}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='ชีต 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='ชีต 2' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='ชีต 3' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29eYxdV37n97nb2/f3at/3Km4iRYrapVbLLXe7u9VjezztbrvHAzh2MJPB
      IAkCTBJMEOePIAPEQAAjQICM49gdjN222227W91qWQspiaK4b8WlWPv2quq9evX29a75o0RJ
      lEiKrHrFKrHuByBYVe/e3/29e8/3nnN+55zfESzLsrCx2aWI2+2Ajc12smUCME1zw+dalrWp
      8+vpy1bbMwwDwzDqZq+evlmWRT0bCDvxOexIAQB1LRT1tLUV9upJvcVUb7HXk3rYs5tANrsa
      WwA2uxpbADa7GlsANrsaWwA2uxp5ux3YTZim+bmw4q3fd2LUa7O+CYKAKO7sd6wtgAfAMAym
      x65TLpdobGmlua0DQRDu+/w7jW/cKmQPYudBr7EZW7Bx3x5ZAUyPXWE5W6W7rYHZ+RV6h/vR
      SiZqNUtn3yAOqT4Pc6exODNFKBqjo2+AmZs3CITCeH3+7XbLZhNsSADt3X0YC8sIpg6ijCQK
      3Lx2iY4DR1BE0HUd0zTRNG3Dju3EJkG1WiUQiQIgKwq1ahWH0/VANu42slrPEdd6T+/ajL1P
      l4GdOBAmPPhkOIuLZz4k2NRJ0KOQL2QpahYe0U1VLTM4PIwiCei6jixvrIVlWRa6rqMoyobO
      /yyaptXFVrVSYeL6KKIo4nA46d+z74GaB4ZhfNw8sSyTzFoKhyeI1+243Y5louomDuX+759l
      WRQKBfx+P6qq4nQ67/vcbGqFbMWko60FSfzEj3o0gT5dBur1HOppb0MltKdvgJoBvoAfC4n2
      SBhMCyyDOjVldyQut5s9Bw9TrZTxeH0IgkClUsHlcj1wIUnFZyniJqyUSddUnKgYokA8nqQx
      7Oba9AoH9o+wGl/EF2uFappMrorDIdPW3U18ehJ/QxuiWqCkiXR3tDB6/kOGn3iJTGKBiM/F
      crpCT1uUueUkoiBiIdPd3sD0zAJt3b2YapVwQOKXb5zg0NFDFDJJLl66Su++gxQWxlnTnHRG
      JBYSWWIdg+zpadmiO7t9SH/0R3/0Rw92ioDL48Xn9SLLMh6vB0kUkSQRSZIRPyoIpmluqgNk
      miaSJG34/K2yJYoigiB+bE8QBMrlMg6H4wtF8OnJZalkitauTjyySTxZQKzlqVmQK5SIxRrw
      BMO41AxytJvc6iKaatASlKhZEmupFCvZGpVykWqxSO9AH5IgoBoG+XQGURKRBJPVxUUsRcHT
      2EGtkMHrlFhNLFPWDMpVk872ZhAURKPA6LVJVpcnSRZVVlcLKKhcu3gFnSo9gwcYm5xnuLfj
      ge7VZzvB9XwO9bK3s7voXwJkWcbr9VIsFh8o+hKNBrhxZZT4aoFKdpnF1ez6C8QyqBmQXVlE
      lT0sT9/Akty43G4UhxO3240vFCPgFIlEIgQjURzS+mN0ONy0N/jI1yxy2SwujwdJduBSZDwe
      Dw6Hg0g0hizJhMN+MpksaGWSmRKSKNDWPYjX5WGop5GFxBqNTQ34fEHcbhcBn2erbuG2soE+
      wP3xKPYB7mXPNE1KpRIej+eub6VP9wFusRVh0Hragke7D2DXAHVCFEV8Ph+VSmVT0S+bh4s9
      EFZHBEHA5/NRLpcxTfOekZhKMYcuuvA6BLLFCm5FwtAr5MpQrVTpe8D2ts3GsAWwBXg8HiqV
      yj0jRGeP/wPzRi8vjfj46+NX+fZTg4huL8kMpFNpnFae2ZTK3u4YU/EUXf0jNAQebMzB5oux
      BbBFuN1uVFWlXC7j8Xg+JwJB8eG1qkyuQFdrkEI6iaulF7DArPCLX7yD1++klm0l4+zgsF34
      twRbAFvIrdBoqVTC6/V+5jMXXY1+5lcFgm4XigNkScahWDjdXnq62xD8DbT6LAKhVh7h4ZVt
      xY4CPQR7hmFQLpdxuT7/FrejQBvHjgJ9SZAkCa/Xi67r2+2KzWewBfCQWJ8/5Pj492ImwejV
      a2QKlc8dWytlGL06TjqXQ68WqXxGN6Ze48q5s5Q++nutsMa7x46zVlRZnrnBux+cRdV1xi6f
      IVXcuRksdgJ2H2CbKBULdPUPEZ+dYM3QkHxhtFIOTXDhsTKU9BDFUonSUpwlNcJwVwR3IIxD
      BEOtMjd2ncjeJ/DK8PY7x3n2q1/l5798A8UoM9zs4PJMB5XZMarRA8R89Zt+8Khh1wDbhKFW
      uTk2hi8URcNJW8SPO9JEg9tACTTQ3duNWikTa2qmp7+XQGi98M9PXidvuon43cB6X+vxfUN8
      cPIcqmEgU2MpU0OWHTRH/Xbn+QuwBbBNeEMN7Nu7j/amKNFoBIfXh5ZbJa06iAZ8uBURv8+P
      5PKTmJkkn82gmtDZvwelvMJSscaNy5f46d//I4LLjYLBiy++RFtLC4biJ+ooc3OlzPSNS+im
      nf71bthRoIdor95zgSzTJJvPEw6FbrNnR4HuH7sG+BIjiOJthd/mwbEFsE2olQI3btygUPlk
      4lxhbZmievdztGqe06fPUtN0zp08xrEPLwDrq8uunf+QuZUsABOj58hWDK5dOMWFa5N1XyL5
      KGELYJuYn5qmqaMLh2QyPzXOtfEZatUSlWqZ66NXWFhJMTsxxvjMIsWP2v/5bAGvWeD4haus
      FhVeevpxANYmTrJotfDBsdcpr07x5uuvs5Ct0dazj4WrZ8lpdij0btgC2CZ6hodZW5wivrxG
      TdPJJRLUgGIqTqZqkcmkEQQBtVbD+1EEyCkbTKd1vnKwF7dY4T/9+Y/QgXIhTyAcQZZF/u4n
      r+HxyswvJlmL36RiKVj1zUr+SGELYJtYSyxT1cHjdqDpBr5AAJfLSyjWTNAh4PP6sFjvSN6q
      AeYmbmKKEslEBh2B1vZ23vvZ3+Lqf4bU6DEa2gb4/n/xX/GV555jpM3PfDKL1xfAIduP+W7Y
      UaCHaK/uK8Isi+TqGo2Nsdvs2VGg+8d+NXyZEYTbCr/Ng2MLwGZXYwvAZldjT4Z7iIii+Llc
      SbfS+9UrX85m+l6f5VZ/ZacnuN0MtgAeInfqTAqCUNeO692us5Ps7SQ2JO1ibo2FpSSGobGw
      sIBq6FSrKrVyyZ54ZfOlYkM1QKlcoZTLMJVdRfG4mZ6bR9ZFVENleHig3j7a2GwZGxKAQ5Zw
      +xsQKnkaOtqYn5xmcXaBtpGDCDy66dG3wt4n2aLrU3PW07dbPtVrw42d+Bw2IACTiZs3ET0R
      OlpCXDp9no6BAQZ8Dei1LDU9hkuRNz0QBtR10KSetuppzzAMLMuqW8cV6usb1K+DDjvvOdgj
      wdtsr94CqLdvUD8B7MTn8OjGt2x2PZZpoZZqmPrdm3B2GNTmkcTUTRKX5kEAQzVoPtiB7HZ8
      7ji7BrB5JCmt5nEEXLQc7ibc10hmJnXH42wB2DySyE4ZraxiaAZqoYriunNfwRaAzSOJK+zF
      FXSzfG4WvaYR7I7e8Ti7D2DzOXRdv21cop4bb9dz85AvsudtD+FtX08aoBsG3GHcwK4BbD7H
      rcL/6U39HlVsAdjsamwB2OxqbAHY3BPL0JieGGNlLf/5D02dQunz2a2/iLXlRQo1g0I+h/EA
      s4cXJ67w5ltvM7O89sDX/DTxax8wn1v/2e4E29yTxMIcoZYe/IpOfDmFV6hREwSWExlaY35u
      TMfZOzLA0mIcVyCGVEtTKFURnG4CoQaEappcVaQp5GEtl6dvaA+5Uo5ytorPJSAIFnOzcwQb
      u8guj1MzRBRRpKm7n8zSPIIrQEvMh8cfYWZqgj1PfJXj/3QM87EeRm/OMTjYjeluJLs0TnYl
      hWbqeMNBQo19FFfGKelOuiKwUJTxBiLIxTiLM2Mc/PVnAbsGsPkCdNPC6VSQJIFypUqtUgLF
      iYgODi89fX04tTyNvfuwtBLIbgbawzR0jqBXCywvr2CWC2QKJToGR3DJAoLopNEvkcxVqJbL
      mJbA6moCty9CUzTEYF8n6cQSyXyFSrGA2x9BFsFQy/z0b35EU/8ekskE5UySihJk4sIJDNlL
      RZfpb/HSNbSX+clRanKEDleBm7NJBh97ivxanETJ5PCevo+/n10D2NyT5tYWxm9eIxhrRlBz
      rGrQErQQRRmHy00uNYvW3Epm7jrucBMeBWQXeBQBORjELZnkKhbhcBi3vL6yzOcPEI3FWM1c
      Q5JEJMVBwB/A7ZBQRJAUJ9GmVmRrAcvpp5RP4wtEaO3dw/4XBhi7dh1RUmjp6qMh2kha0ukb
      GsEryoTDArLXR//gPmrZOKtGC4/vl/C5JLq6uqilV1goVNjz0Q629mzQbba3E2eD3oqt7+T9
      y27Z0ypZzl6e5ZmnD21oLwS7BrD5UuPwhHn26fCGz7f7ADbbwszYJd56+x3iqcLnPtOycU6N
      Tj8UP+wawGZbuHz9Ji+//CI/feM9uttCtIeCSA0Rrpy9SE9blHPnp0ktzvL1r38VeQuTUtgC
      sNkWjHKWk2dGCUWCxONxArpKfH6arkNfoUdeoS3rQkiNUzXAt4Wl1G4C2WwLra3tCJZJIBSm
      LepjIVNh35EjzF88wWJGp60hSHNb+5a+/cGOAm27PTsKtL327BrAZldj9wFstoRadpnR2TVC
      4TD9XW23f6jm+PDCLAMjXUQckDF9RL3rRdFUi7z73kn8zb0c2ddPNjHHqfNXaRk4gJCZZz4e
      p33v01RWJrDcMZ584gCbyVlhC8BmSzBqJVr69pJfHOPapTiirwmrlKKiCjTHHJQMgWx6DZMK
      N5ICjw234XD7Wb50msVcjXZPHtOCsWuXGX7iBT585y2+993fJPHTv8WlJzg3laSj04FpgrSJ
      dozdBLLZEizLZGrsGpGmNhyeMMP9nUhOH92NXmRPkO7+fhQBQpEonb09BANBPA4Jp8tBZ/9+
      ysuzLCVWGNr/BNMXP6Coy5TX5ig522kJe2nq7MdVWSZb21wX1haAzZbgDDZx+LF9NEX8NDU1
      IiDQGPGRsXw0hiM0BBxEog1IvhhmOk4+n6OsGrTufYpALU7f409x4+J5TCxEZ4DfePVXqagi
      zz/7OIHmIYYaIdB7mJhrc51gOwq0zfbsKNAn6IaBbpoIgoAggGBa9/wu9YgCbeiuL85cpWDE
      aPbXuD6xRO9IP2rRQK1k6RoYwiE9uvnkbbYO3TRxfvQiqOn6xz9vJRu6QntPD9PTJQxdR5Bk
      BAGmr1+m88ARFNHODv0g7MTs0J/15UF9qxUzTM4tEW3uoDkaAEBdmyXl6KLVf/fzZq6dJi+2
      caDDyRsnLtDWPciRfQPUillOnDrL0edfJh+/zswaPN4f48ML18iXDL796isbjuZs6LzE0iJL
      S2V8A000RL2kUmk6B0aoZRNozWEcsp0d+n7Zidmh79UEsiwL1aihmzqSIOGUXZ/7PJ9eQ3R5
      CfjcrCxMs5gssqfLi6FXuHJpAtkbxKHnqYk+elujCG4/bkWiqynCTy4kaDDLqFKQ3s729a1W
      XV6sapayahJriPLBpas8f3Q/zx0x+PkHk8iCsKGp0LBBAXh9TezZY+HzeXE4Pfj8frAAy3ik
      t9OxAcPUMS0Lj+JFNVQ0Q8Uhr68usSwL06jii4RRqmWmJidRrCrF5Brlrh6o5kjkajQqNZpi
      UWYWV5G9PTg+imO63R5ksUhT70GeiRX4+c9/zrd+9SUC4RgOZT3a73K5uVXELpw5x+EnX9lw
      4YcNCsAXCH38s8Px6YSj9csjbwO6WmRl5i1kxUtj11cQpfrWYhvBwkIURARBQBRETOv2Jpdp
      aGAJLCULNDVFUfNZ2nuDeL0RnGKAwfY8piOIZWkEwhH0Uh7D7cetGJy5OIFbV0llW5iZmuLo
      U09x6uRpjhzeS1FTmLx5g4SVwyWrzCfWCLWP0BXzbOr72FGgbbZ3tyaQaercOPkfibQeRatm
      0Wo5+g79wUPx7YuaQBWtwroUwK24EQXx4890tYCseLGw0KoFBGG9dhBlGUlW7tlCMD+OAH10
      jGVQrRm4XJ/P6nzretsSBbLZenS1iGmotPS+gqHXuHL8P2y3S8C6GNyKGwsLAeG2AigIApLi
      QdfLH/1FRnG5AVArZST5AYUpSLhcW9uqsAWwQ5EdPiTZTXziNbRqlmDDnu126WMEQeBu3U5R
      lBEd/o86y+VPIkg7tGtoN4G22d69okC6ViY5dxxZ8RLreBZR/OL7WQ/fPpscd6NYpomu1gCQ
      nU74TI3xWUzTfKBNuevRBLIFsM32duJI8C0e9h5hDyoAe48wm0eKByn89eKer5356SmSS9N4
      2g6yp6fhYflkY/PQuKfkFievMZ/OkdpkMlKbXYYFtVKVxSszFJLZ9UHSHco9BTAwMsRAzwgd
      3U0Pyx+bRwCtpnLlZ2fAgskT10kvrG63S3flnk2gmzevsLIqEmqFntaNZ9+y2V1kFlNEuxpp
      f6yHUHuM2dNjRDp3ZhP6rjWAoWuM7DtKMBri0OH+h+mTzZecYHOY9FySzEKK+XMTNPS1bLdL
      d+WuNcDU1fOMTi1gmbCcyBD1NT9Mv2w2wa2d0YWP1mVolRJauYTTH0RyOLd8wqLT62b4Vw4S
      H50l1ttMY3/rll5vM9xVAIMHn2IlGWctbZBZK0Lf3Y602UmUVwvkp9eDFuG+Bkwrh16tEGjt
      YnX8CpGeYZy+wNY6IYAvFmDopQNbe506cNcmkGVZPHb0q/T2t9PTa3eC74RlWViGuaN2UsyM
      J3H1+YgOyKQvXaE6dwFPrAnZ5cYVDKOVi9vt4o7irgK4eukCZjXN6NgUqWz5boftWizLwlxI
      YYwtYowtYqn6druEaZrkMmnK6STTl05iOAIE23tYu/YhqYmrVDIpPJHG7XZzR3FXAeRX4/zd
      ayd45evPk06kH6ZPXw7KNVB1pD0dSO0xzMXUll9yfcHJ3WucfDaDo82FuCrgMzrQQxLOhm6a
      gxrexlaa9x9FfAjrbL9M3PVuPPu1b/GkaYGh8dyTd56PvasRBPjUhtJsccfSNE0mjo+SW87Q
      0NdM95NDn+vMenw+atToPNxH8vJNfORh6gZS53O4/ZEt9e/Lyt1fB4KILAF1mgj1qCF4nOBx
      YlybB1lC2oJQn2VZ1KoVqpUKWlZFEEWe+P6LjP78LOV0AW/09s6sw+GkZ2CY+Pwcge4naQqI
      4AqDw1t33x4V7PpwE0htUWiLbpn9TGqVpfk5PH4/ickFop6PghGWxd0m2Ht8Pgb37vzoy07B
      FsAOZiW+wMDe/ThdLgxdpzid48x/PkbTYDve6Kfyi1gW6sIipePHkXt7kJ991k5OcJ/YAtjB
      eP0BUokVwtEYlVKJfa88gXyH+e9GLkf+hz8k+IMfUDx/nvLJD/E++8w2ePzlw14PsIPp6OnD
      tEwWZqfoGx5BcThuWzRuLF+m8o//juKf/mscDRGUqXHcI8OoExO32dETCbR4fEeNV+wU7Bpg
      ByOKIh3dvbf9zbRM3rjxGmOJa/gTV/nBU/8T/rYMqdd+jNDYQvXt/0zw93//4+OLx46jzswg
      KApSKIT/W9+0m0efwq4BvmQsLU/i/Js3+P55maGpKm+vXkQoFPHtqyIbOoF//hsoPd0fH1+5
      eInwv/wBod/9HdTZWaxabdt834nYNcCXDN/4Ip4XnqPx+d/C+rP/m+tj71D1OHBEnkVu24fW
      03vbG17yeddrAJcLBAHBHgi7jQ3djZWFSVQ5SqPPYvTGFD3DQ6BaGGqBcFObnR16C5EEibnK
      EudP/QkDqWme/51/j6u9A+Gj9IR8JiFx8Pvfo/DzX2BpGqHvf88WwGfYUFYIXcsxv1DFYWYJ
      dbSzOLtANrFGpLOXga5mTNPEMIxNLXI2DKNu2Qjqaave9gzDoFgo8N7bb1GpVDj0xBMMDA3f
      /fh0huxf/RWqoeLp6iX4nVe3zLd67w+wE5/Dhl4HsiIDAggWaq2GJUr4A0G0agVY77xZlrUp
      ATxoioyHZWsr7J04fownn32OaCzGz37yd7R3dOL1+e54rBiL0vBv/vX6m97l2lLfbqVuf5Sf
      w4YEMD02yWrOYGikl4XZBXoGBzBqBoJZoaZbuJR1pzbq3K2ER5v9cjVdJ1koEHG7cdTxxtfD
      t1tYloWmaXh9PhxOJ7KifHHtKYpwl3w49fZt/XL1sVdP3+pl75FNjJWrVPjTUx8QdnvIlMv8
      4TPP4b/DG3Mj1Dv51MrSEieOH0MURdo7u3jquec23OwYjS8ynUnhd7p4rrcfh7TxNv/DToy1
      HfYeWQG8fv0aEY+HJ7t7eG9inJpp8LWhkQ3b+zQPeuPVWpXEUhyXx0Ossfm2wn0rM5xpmui6
      htvt2XDhz1bKnJyZ4lcGR5jPpkmVijzVtT6OkFMznE6+h2EZPB59iibPFy9T3A0CeGTHARr9
      fmbSa+SrFeazGRp999ibZwsxDJ3xq6O4PV6KuRxL83N3PM7hcODxeDfV4azpOm5FQZEkgi43
      FU1FNXQy5TIfrBzjaMPzvNjyq5xLfYBu3n37quXpMd776z/lzGt/RbVU2LA/XwYeWQEcbGsn
      4vHy/5w6SYPXx/6W7VmYXS2XcbpcxJqaaevqIZuuz8IZQ9eZvHGNq+fPklxeAqDRt56V+Y2b
      1zg5O8VAQxOv37jK+cU5EikPbsmHS3IDAqZl3tFurVxk4uz7HP3Wd+k79Ayj775eF393Ko9s
      UFgSRV4ZHuGV4RE0TduWvJMALo8XtVZjJb5AMZ8n0rC5JYmWZbGQzTC1MEdvOEpX/yDjV6/g
      D4ZQVnM8nahSccr4Doxwemmeo53dtARCnJyVeW3qDbwenW5/P4p450VOuqYhKQ6cHh8+w0Ct
      PNrLYR9ZAewUJElicN8BVhPLRBsaCUVjm7I3l1ljJp1CMnROJZb49dZWnC4ntWSK8vgaQnsU
      v0OAmWUCQRerxSJht5dSTeNo85NEZAcep/+uTS1PIESwoZmTP/kLNLXGyDMvb8rfnc4j2wn+
      NFvS+ZJEWDgJ5VWIDUNsZEPLIu83PXqxZrCcV0nkE3QlC3ijft5JTNPm9RN1ughUvMjlCjRH
      UONrxCJOpG4PF2+eJuFoore5l4GKiKDpWJqB2RJGDnoRpc/XjJZlUSnkEKX1HV7sTrDNOroO
      5dL6iqyVi+D0Q/83ID0FlU8SCFuWRbmQQ1PrM/GsrBpciBdxSgJr81kul9KMXxxDcHnZPzRC
      /8he1LJGwCfjS6dQ81WkkIq0coEjvXv4prLEsNuJYJrobVHGxuOsnb7J1V+cw9A+n81CEAQ8
      gdDH2xs9ythNoPulVISzZ0BxICkyRAvQtB8UN7jDoBbBE8OyLC6/8xql7BqaWuPgy9/GL9cw
      V0aR2o8gBlq4n/2CNFNFMzXckodUSaM14KDNKzG/mEJ+sRehUOXwUhGf14dlWTj8LspBN3qu
      gKvNh6iNQ8dT4GmAWh7KK1hagPiFKRo7G4hG/VQTWVanVmgebt/6+7dDsWuA++X6dThwEJ55
      FksQwdUDc+/D5C+hmoXAeiHKpxLUKiWe+Y3f4/FXfp2x1/8M9dyfgeKi9sGfYOZXvvBSqWqC
      Nxd/yvvLb3Ju9QMiHnm9+VPVSHUsshJ/m1zqLKGWRrKzKWq5Co0HOsCoIlVnaRxwIkQHIH4O
      MjOQnUOIdiI2BGhUJKRyFbMhSDVfxuHe3Rk/7BrgfnG5oFgEvx+hVgV/IzS/CrXieg3w0Vah
      ssOJVi2j1aqUsmlcuRsoX/vvkFsPgWVhxM8jBr51z0tdXjvLs80vE1BCHFt6HZ08Xeh8eOkC
      jfoMw6PzXNzfy8zsNI2uKCWvj3BvmFDtQ4zuYcSV89C4Dxr2QCEOvS+Dw4sYFfAEvSyduM7M
      z88S62ki3LEzszY/LGwB3C8je+DieZiexGptA79/vdPrcd52mDcYpmPkECf//oe4fQH2f+vf
      oo/9AiwLfeZ9nEc/2evX0g1YTIGqY7VGEHzrbW6H6KSkFXFLHsRkhaVrN9DLEsMdJitSL4Hf
      +0PU6/8fHtGHqBmYyQT56hKevjbM2B6kcBfMfwCD34RQ123+ibLE4Ff2b/39+pJgC+B+kWV4
      4kkATE1DukfEp2vvIbr2HvroNwvD7UFfPI/j8L9EDHd+fJw5v4rpdyE0BDDmUkj9zSCKHG54
      hlOJ4xg3UwxnO1lK5Ym5RJr9MqnJcd4MugjeqFIOVVjq6KNxaZrOQ4OQfxfBt4ieniAhRWg2
      TaRtGv/4smALYMsRkFoeQ2p57HOfWKqG4A+DLIEoYIzFQZFwBjy81PprLH1wnKZvPMn82VNM
      nJzkfTPNwYqbo85JFlcgEIzjv7BINtCNv7MJKq8wcfVNQg19LAphpmaneL6n314DfA/s18M2
      IjaGYDaJMLuKlSshDbYiDbdDqQo1DXdnE8kzo4ylz9IcbiCa8nPWkSc7e4XE81/HjO7D517D
      7BWxLKjNJbm0LOMbT3O0vYu1UhHDzgRxT2wBbCNixA9dDZiNAUy/QDE1hamrWKYFokD46DCe
      WITmrBNvyyIdAxpCc4TxXJCOhb9lxplnzbrM8dUEb589TeHNNwl1dzOdz3L9+DFcinLPppqN
      LYBtR3AoJBPvM59/Eymlkf/wPYSIB8GhIIgiwQN9HO7OMpN/l0r+FN8K+jEaDhDoeoyOzHFe
      qx3i8TUPpVNjGE3NfGVoD9WRIdLVCi/3D9/W/LEMEzNdwCrX7BxBH2ELYAvJVHTOzBe4kShj
      mHcvcMn59+g+9Lt4Dh5gxXGZqvOTTSysWoGAXuOxr/5HqjxD8so5IiEVw5VAb9jPK4abrx7t
      4Mj3v8XVs+eo/OPP6HvzGE8eOITj4+kVFqaaQ78xjlXIYSysYmXsjTLA7gRvGTXd5Mpyicfb
      vCSLGmPJMnub75yl2RfuIzH7Dv7IELXSKg5XiOLEAtmr05wIjzGcHEOVf8pwsxtXNMZEaIbj
      a50MXU1yvaYS/8Vx9O4GpOHncB0cwvlr30D61Jpio7pMbfaXyMJeaua7uDq/hzmfW2+C7XLs
      GmCLqGgmDtEkXc4R80rkqsZdj+3e9zuYhsny1BsIosSl1/97rp/43yj0OAhkfR3+zNwAABU3
      SURBVKjB3yZaSLJaHWfNE6Wp8SlaZ7u5oFvsPxJCqCkcWCmyb38DK2EB0Xu70LT0GZxtLyPS
      gqzsRZ8b/XjMYbdj1wAb5ItShphmjcm1NSZSOqaV4eWBtjsbMkyWfnaK5dE0ulsh+tIhukIH
      WdZPMDV3lZoTfGkfs7GDRJZ/xPuawtPuElYxzJNhJz2+CNFYhmvVCvsufcjoXIXre4b55p5/
      9rFvkrcHrXgRpe0I5lQGpfUpxGZ7wwywa4AHxrIsWEpjXJtf3xtMv/ObfSy5wlf7Y/zaSB/7
      ml0Uatk7Hlccm+fG9ZsM/at/xuCzzxD/oATBINWKk4DqR045eN8/g6NcZaLxVTqan+ZPl6pc
      9Wi8ueTkg7enyesaN/M5fC39vFRoYGLl+m0rvpTgASR3F1rxA5ThfUgtMXts4CO2rQZQq1nm
      rv0VkuSia+9vIylfkiq5XIOajrS3E6tQwVxIIfV8fhfN5kCAyVSSg60dJIsZnujoRq1WyCbi
      RFo6kB2fTKGQHBK+5hCltTSl/BSz5/4Jh2eS3ugrLFZLtHq78AtncaRO0OV7hfY1iWtPHeHl
      poNkiyqxiyeIxKap7etG+NkEfXkXovDpd5uAEjqEEjr0OT93O9siANPUGfvwf6dz73fR1RJj
      Z/4P9j77P26HKxvjtpfnnaM7PZEYumlyZn6G/S1tuHWNYz/+c04mXZQEL4/tH+G3f+UA3qEO
      AufCnP7jH1IVqgw/9xuEFRdK9Cu4vU6Ko/O8lf6Qx5VZ3ja/Re/1i5ixZ2h0NVML6ATDDsRk
      G985G6d0+Qo3lyf51d/9X+w3/H2yPQLQa1iWSajxAKapM3/jb7fDjY3hcYIiY1yfB1FE6r99
      bzBDr7Jw4+/QtTLde36LwYY9AFx9/59I+wfY2xigSZ3n3M1zvOm2iDTGOO4J0/FEP1fjZ/jK
      0rvM51QiLSPIkVZ+nD8GlZv4R/ror3k5z0FezZRZka/yWtFHTzNEBxvo1x9HmZpmz+//NzjC
      W7dt06PGtghAUtx4Ah1MnP+/MPQq0dYntsONDSEIArRFkCR5PTvkZ96042f/TyKtR3A4g4yd
      +mP2Pf8/I0oKkeZ2EmePEWzpRHLWaOnsIb26yqnpOL/zrREGY338w198SPTQY3SVPLx/7p84
      n/+Qxzqf5/RKlLnZn9DiusLTriHkyggiM7jyR4gYHq44z9P72PeIvPACmqbZb/8HYFsEIAgi
      /Y//l+RWryFKDvzRwe1wY1MI4p0LWbW0QkP7M4iSg4Wxv8PQK4iSQkv/CN9+pcbfnpzn+oJC
      Xqgw0uTAJ7p5ffQ0p/3TJJZXMK4WOROp4VJTSK5VXipVGammOCXsoaT1csChcLalDcOo0KVU
      iA33E8ssMX3zBo8dffoh34UvP5taFJ9OzHJ9Ypm+kT5qeYNaNUPP4AgOSXj0F8Xfxd7ctR9R
      LSWQHV4MrczAkX+L8KkOqabp/Ke/P0FIEVGSJUalLGGzSK/qYrDRxambb+PzRRCrOo/7psE7
      wlklzUDhMj91fYWqmSESe5bBogi9WSI9fRyOPs34xSscfPKZuqdthEc7M9ymagDLMBElCQuY
      uXGZzoNPoIjrGSFM00TT7p597Iu4dfPrQT1tfdreaiLB+8fewbIsnn7+BVrb22kd+A1yqeuY
      Ro1Q4wF03QBuv37FcvBCxI/W4aCUm+Lr1xRSYpHmUpmgK4D/6W72x6ssT15iVBHo8O1BKWdx
      u0uMuF6kUMnQ3tRGW9ezJBfjTC5epa27B03T6vpdb70bb2WJ3ixb9Rw2w6YEoDg9hIMuMmtZ
      Ogf3UsusoDaGccrypmsAoK5vi3raumXv3bfe5NV//luIksQ//PWP+Be/+wMkRSHWevD2gw0V
      KhnwREGUeXyghbcuTOOILNCpu5CR8TT7ibt87NMFzr0/Q0IKs6oc4gXhJq61GaaVAK16D0Yp
      Q05epmQ14/X62fv4EUC47S29U2sA2JrnsBk2JQBfKEaH04fb41mPBlotd20bP4oYponT6fy4
      FrxjW7KWh6l/Aldo/eeBX+PFQ910NAWJJxtYq5xALllUnU5a0/OkUzq9DYMsxeO0ex9jWuzE
      pRY4qxqEVZC9BnpWJNTVgJyvcnHsBudPvociWOx74hn8/Y8z0Cgj76LnsBk2JQBRkvHdtpHD
      7hpYfuq55/jxX/0lggCHjhy585syeRXVNcjq+TROq0hAGYXm/fS1hulvC5OrdKBmT6IU85xZ
      WaRPasPsbKK8soK4lsWbd7HWEsBanuNKs8VRV4x2U+RULsfl9GWWzh3je9/9Ha4kqpz65V/y
      4g86OK+aHO24e/Y3m0+w5wJtgv7BITq6urAscDqddy5w7gilMyeIPfN11FUnc6cLeHoXcQY9
      REdacAluysMHWBo9hxGJks2KSBNJOnNe1pwuJpUcLWkvTeEgmek5ruVySJJGi5Cg67Fv8o4/
      jCMYppbKYVnQ7La4rppY3E/2IZtdJwA9fgFt9McIDg+Oo3+A6Pv8NIYHwen8ZNMNUzfQKhoO
      rxMEC0tdQwi1Izi9yKkPWU114DB0mva3kby+Qm5hieS507w7XWY2bzDSZzG4bw55TUNr6MVo
      jOGeriDpBrrk5chwJyVd45zp5jutBYaESc709PMXP/pLnOUqHXsPsyrHCEmiXfjvk12VG9Sq
      Fage+19xvfjvMYuraKN/g+ur/2HD9m77W1klcWke2a1g6gbhlosIaJh6AaN0gOylAhXLgb/V
      j97hJjEdpzu3xrHpCi5fiqawgOBZYHwuwv6eVnyVGdamBqhqOq8HNEpSBUWr8e3EJKuuTi7t
      7+Uld5Kz7n384ZGjOEWBjOnEMEw6wm7EOvQB7DDoI4ZlaCAq4AoiImCp9Uv9nZ1eJTLYjCfm
      Iz97E0wdZ8d3sbQ0tcTrtP7mv6CWLzJ38UNYklHEHGv5VcZyRSw5ww9Kfk4vq2htComla+ih
      IqeqzTQ0e1EDGv/1XJJ3IykmBsJ87doooUqC9MAP+DcjBwl8tPWTFz5KBW+//++XXSUAwR1G
      atpH9c0/AkNFOfBbdbFrWRYV2cLKlXD6XRTSOqayguacpd1VQFSCSC4HtWSaWtDJG6snkHUT
      Q1plf6gbh9nN+FqCYIvInt55HGsSb510ogkLjGdduAIeZnSZsgYtooHmcrPkrvDtocGPC7/N
      xthVTaBbtq1ympIGf396kWyxykuHutnf27S+9eiVy1AqQW8ftN85aexn7b07NU5N18lnCvTX
      PJzOLPONIwHIn6OKh67+72GJTrS1ZV479zeIkp8uPcDo2lkcYScOl4PpuRmyehXcFlbiMapF
      N7JDpEe6xE2hHy0W4mjxJofXlllpT7Ln0G/S89S/u6dvm8VuAj2CCIKA4I3ys7dGeayvie6W
      EP/vLy7R2RgkODUGjY3Q0AhnTkMkAh7PPe2tltYXl3+tv4tMuchPrk3gaQsQdXaR90b5m8kl
      nvJoSIKOx3LgkP04agt48zXcpoAqryJdTpDvCvN8tYv5bIkCV2n09INziITupb+Qw61GaeuB
      5q9/h15DwVPOPYzb9ciz6wRwi1yxSltDgIDHid/joFzTCFbKEOoFpxPcbqjVvlAALlmmUIyT
      m3uXlaqTvkAfufgq5ybKrFaqPK14GYiKeGSJCwsWg+4Y6vKbnJTcHKXKZeEoRUHHUxOJNjko
      V8okazKlcoFMpYQuOgmJEtGCSFbvJhIfB11Fef6/fUh36tFm1wrga0/08cM3LuNzOfB7nTRF
      fDA0DOfPrWeClmUIhb7QTsDlpleJc6JyFL/LzWHhXdLBHsZ8jfR3hfhw9DJvvfMm5ZrKQX+I
      5spl5r29iE3fYTn+Ie36OLMHhqiWrnMuM0NO1ukxmxh396M4KvS7R1CqJpVSiSNNX8Pq9uNu
      aUL4sqyg2+HsWgH0t0X4w28fplzViIU8iIIA4Qg889z6m9/nu+8tj3q8NUZa2kF0UF0EX7iB
      p11u0nqNmijyfKiRFW8Lc4kzHKTMHioUs1NEsqcpKi8TDvTyqpTjHyfa6F5J8eRzGoq8n6aZ
      LEq6jBIJsiReIxCRKeZkPJ124a8Xu1YAAD63A99nN4hwONb/PQCullepJX4OloGz6Ru4Xa0U
      VhYRy2VwOPG6ZUSrQpORJdPkgUspDqkfoGfbwddAMePg3dkW/LkiK7KfEzOL9IQukczrBCo3
      kFxfpbXqpLxaIbr3LtklbDbErhbA/WJZFmu1VdaqSbr8fUifuW2isxF35+/d9rdAaxcB4FnF
      zdtj17FqK/y6p8DJks6ehRjVp49yU5ik+/JruHu+Q2otzd62NRJGN+NrHXS5L9HR9luUqg2I
      SpSg4ySdXS/gaQw8xG/+6GML4D5YLM0ylh2lzdvJm4s/41davo3C/YXfjnZ1c7SrGy2VIvOL
      K+jtCm4xSzr/MxxGDcOp46ucRrBclPGSd7Tgq5zFkhwsLJ7niWiAlbKC5Kngbh/Y4m+6+9hd
      0zc3yHjuOk82vsCe8EGa3C0kK8v3fa5q6EymkqSqVcRijHY9z7l9EvpKgq6xdpz+QZK1a0Qw
      mS63IK4tEY65wDOMoSyiFl5DNGr8ovQNClr95uXbrGPXAPdBh7ebq+mL9AYGWanE2RM4+MUn
      sb5e4K2bN2gOBJkuFVmTRMpjaQzNIu4XEGNFfJaAl0YOdwwTV6dQAi286IigrLzBlK+XohVB
      anRjJVxki1UCXucXX9jmvrEFcB8MBPcgiTIzhQleaH4Fp3h/0w8y5TIeh4PH2zvJlMv88eo/
      UjYH6FYm8Qp+GtryFDKdNLT4kZxriLxCWJvkrLGPw0vQlf57JmvPcrmmEWxtor3Bbv/XG1sA
      94EgCPQFhugLDAHc91pnryyhJBdZqhU5WaphUOX7fQpVHuPm7CIe08nUUi9yh0WXt0bL/BJu
      3wUK2SqJUDstWgOh1kFe6Grg4JOH7UluW4DdB9hC8tM3GOgeJOH0EsqsEJZNJCVAefkCUgEs
      T5rWhlX2aDOIqRRxpRE524vcFMNZmOHH6SHyuQL7Dx2xC/8WYdcAW0imarJS9mHhZ9mRwmO5
      uDC9hJUL4YwolMvNZDoLzGUgfDrO0sF3MJ3d3LyYIpdzc6A3xBOv/hqKPeNzy7AFsIUsezrp
      r07jkCSWZTffDN3kilOj16sSrvpxZZbJ5jpwzjbxTrOfkt9FJjNOrFpjaG8D1yQ3npDvC69j
      s3FsAWwhssNJsHUABZNwbhzN76bo9iLlRsl2Olmu9VJKqpz1toAYwDFqMShaLB/0U1i9wor6
      ze3+Co88tgC2kP0tXi7Ei5jAyMAevMkIKDnAiS8cRXB/hZM5iRdbA0wVx0mtZBBbVVStnQX/
      IfZ6+7b7Kzzy2ALYQkJuma/0fzKjVHvhf6D7r/+EuGqyJ57G29fBY74ZlEqZQKCL800OevsU
      YkIQV8OzfONJe+R3q7EF8BCRfG569z6JeslFvJqn2wBfqMzJNBhFL78bhbHCLE8ceIl9+4a3
      291dgR0GfYjotSqSZdEWbaFtuoizssqqtwehp4NvD0eomRmKIScDQ09ut6u7hk3VAKZeY2pm
      gc6eLgzVRDBryG4/imTHrO+E4vZiKk7emluhU7Y4sTDDhCDhKIv8eaPA10MKzx39Ls4658+0
      uTubqgFW5mfw+t1Mz86ztBBnejGJbNcpd0UQRfw9+1BMJ0mfxDmrxtE2kZdjJpZuYrYNEI7a
      8/0fJpuqAQxTJNYQo5CbJj67SMvwAeCT9Oiqqm7YtqZp1CthRT1tbdaeHPTSMHSQxQWLvJjm
      nKkRjkJmLUhfzxHUL5hmYVnWPXN+1vO7mqaJZVl1ywphGMaOeQ632FRalGJmhatjM3QNDUEN
      DDVHrLULlyLu2LQoO8GeoRuk55KcXD7GL8bH8CgR/uCFV9nT2bvphJ52WpQHY9flBdpJ9izL
      pFgpIAkSHnd9RnxtATwYdhh0GxEEEY/TV9dmgc2DYXdZbXY1tgBsdjW2AGx2NbYAbHY1tgBs
      djVbGgXSdX3D55qmuanzt8pWve3Ve+/cevp2KzpVz4G1nfYctkwAGx0DgE9u+GZsfJZ62qqn
      PVEUb/u/HtTLt1sbZO9E3+plb8eOA9TzptfTVr3t1Xsr093iW73sbdlIsI3Nl4EdVwPo1SJX
      b4zTM7QHS9VR1RKxhsb19OUbQKsWmVvO0Bj243IpFGoW0eDGph1YhsrY9eu4wq2EfQ5cokFN
      CRJ0P/ht1NUyN66P09Y/jKhXkSwdyRvG49jAtAPLYmVhipWcwWBHE2LQT241Q2NjbMNTi9JL
      c+jeBhyWioSO5A7jcW5kSoRFJhlnNllmpL0RAn5yqU34ZhlMj4+hO4K0hn0oHieFkkYsvLGk
      YTsuCjQ1OUFDawduh8nszetkK/ee/XhPLIvFhUVy+SyZ5Ao3J2dwezaRW9+yaO8dpFLIklyO
      Mz63gs+1sXkya8uLNPf0kViMszw/zfxKFpey8Tk3vkgzfkEnl1njxs0biC7fhgu/oZaZX1ih
      WC6u+7acwbURYbLen5uaW6SjrYlqdo0b49c35ZupFsmrEmo+S3o1wY2JKZzue+/icy92TA1g
      mSZjV69QsyzkQpbxbIpqpYxXENnItufZ5CLLqQyLSymqtSreznaquoGwwVu/Mj+J5QpRzKbp
      6etjduwKurm5iViSJAMWmlrFkv2bspVfSxJs70LOrFAqVzeVSGthcoy1fJ780ioha/O+WYbB
      8sRVXP5GypXahmtzANMUENDRDR3dEKmqGpvJGbbj+gDVQprr4zN09A8g6qBWCzS2tiJt4qYl
      VlZwKgpur5NsUacp9sVbH90JvZjk1Ogc4WgDzVE/HtmiLPqJ+h88Ya1WLXD12jjt/SOIegUF
      A8ETxu9+cFFZlsXohdOolpPerk5csRCZpSStrS33u8nN5/0rF8nrgFZDwQBPmMAGfMOySMRn
      iKcqDHS0IEWCm/LNMjRu3riGLvlpbwzh8nvIZCu0NEYe3Bg7UAA2Ng+THdcHsLF5mNgCsNnV
      2AKw2dXYAtixmIyePcF7J8+jmrd302qFVc5dvomqaeha/ebW7EbsTvCORee1n/2S/R0+xqth
      mrwOYmE3qWyR+TPvYA29RMRKcuq987z6g3/FQEfjdjv8pcSuAXYwucQ811dUIuosaXxcOH+F
      FTVAY1sPBw8MslbUGNqzl/72hu129UvLjhkIs/ksAnsef5pDjx8iMX0FPdJEwWhkRUvT1NKG
      RxZpb23Fyq8ytZiiv8MWwUawm0A2uxq7CWSzq/n/ARZWSNl+e8pkAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='แดชบอร์ด 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
